ARM GAS  C:\Users\alvin\AppData\Local\Temp\ccg5AO67.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"pwm.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.pwm_Enable,"ax",%progbits
  18              		.align	2
  19              		.global	pwm_Enable
  20              		.code	16
  21              		.thumb_func
  22              		.type	pwm_Enable, %function
  23              	pwm_Enable:
  24              	.LFB4:
  25              		.file 1 ".\\Generated_Source\\PSoC4\\pwm.c"
   1:.\Generated_Source\PSoC4/pwm.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC4/pwm.c **** * File Name: pwm.c
   3:.\Generated_Source\PSoC4/pwm.c **** * Version 3.30
   4:.\Generated_Source\PSoC4/pwm.c **** *
   5:.\Generated_Source\PSoC4/pwm.c **** * Description:
   6:.\Generated_Source\PSoC4/pwm.c **** *  The PWM User Module consist of an 8 or 16-bit counter with two 8 or 16-bit
   7:.\Generated_Source\PSoC4/pwm.c **** *  comparitors. Each instance of this user module is capable of generating
   8:.\Generated_Source\PSoC4/pwm.c **** *  two PWM outputs with the same period. The pulse width is selectable between
   9:.\Generated_Source\PSoC4/pwm.c **** *  1 and 255/65535. The period is selectable between 2 and 255/65536 clocks.
  10:.\Generated_Source\PSoC4/pwm.c **** *  The compare value output may be configured to be active when the present
  11:.\Generated_Source\PSoC4/pwm.c **** *  counter is less than or less than/equal to the compare value.
  12:.\Generated_Source\PSoC4/pwm.c **** *  A terminal count output is also provided. It generates a pulse one clock
  13:.\Generated_Source\PSoC4/pwm.c **** *  width wide when the counter is equal to zero.
  14:.\Generated_Source\PSoC4/pwm.c **** *
  15:.\Generated_Source\PSoC4/pwm.c **** * Note:
  16:.\Generated_Source\PSoC4/pwm.c **** *
  17:.\Generated_Source\PSoC4/pwm.c **** *******************************************************************************
  18:.\Generated_Source\PSoC4/pwm.c **** * Copyright 2008-2014, Cypress Semiconductor Corporation.  All rights reserved.
  19:.\Generated_Source\PSoC4/pwm.c **** * You may use this file only in accordance with the license, terms, conditions,
  20:.\Generated_Source\PSoC4/pwm.c **** * disclaimers, and limitations in the end user license agreement accompanying
  21:.\Generated_Source\PSoC4/pwm.c **** * the software package with which this file was provided.
  22:.\Generated_Source\PSoC4/pwm.c **** ********************************************************************************/
  23:.\Generated_Source\PSoC4/pwm.c **** 
  24:.\Generated_Source\PSoC4/pwm.c **** #include "pwm.h"
  25:.\Generated_Source\PSoC4/pwm.c **** 
  26:.\Generated_Source\PSoC4/pwm.c **** /* Error message for removed <resource> through optimization */
  27:.\Generated_Source\PSoC4/pwm.c **** #ifdef pwm_PWMUDB_genblk1_ctrlreg__REMOVED
  28:.\Generated_Source\PSoC4/pwm.c ****     #error PWM_v3_30 detected with a constant 0 for the enable or \
  29:.\Generated_Source\PSoC4/pwm.c ****          constant 1 for reset. This will prevent the component from operating.
  30:.\Generated_Source\PSoC4/pwm.c **** #endif /* pwm_PWMUDB_genblk1_ctrlreg__REMOVED */
  31:.\Generated_Source\PSoC4/pwm.c **** 
  32:.\Generated_Source\PSoC4/pwm.c **** uint8 pwm_initVar = 0u;
ARM GAS  C:\Users\alvin\AppData\Local\Temp\ccg5AO67.s 			page 2


  33:.\Generated_Source\PSoC4/pwm.c **** 
  34:.\Generated_Source\PSoC4/pwm.c **** 
  35:.\Generated_Source\PSoC4/pwm.c **** /*******************************************************************************
  36:.\Generated_Source\PSoC4/pwm.c **** * Function Name: pwm_Start
  37:.\Generated_Source\PSoC4/pwm.c **** ********************************************************************************
  38:.\Generated_Source\PSoC4/pwm.c **** *
  39:.\Generated_Source\PSoC4/pwm.c **** * Summary:
  40:.\Generated_Source\PSoC4/pwm.c **** *  The start function initializes the pwm with the default values, the
  41:.\Generated_Source\PSoC4/pwm.c **** *  enables the counter to begin counting.  It does not enable interrupts,
  42:.\Generated_Source\PSoC4/pwm.c **** *  the EnableInt command should be called if interrupt generation is required.
  43:.\Generated_Source\PSoC4/pwm.c **** *
  44:.\Generated_Source\PSoC4/pwm.c **** * Parameters:
  45:.\Generated_Source\PSoC4/pwm.c **** *  None
  46:.\Generated_Source\PSoC4/pwm.c **** *
  47:.\Generated_Source\PSoC4/pwm.c **** * Return:
  48:.\Generated_Source\PSoC4/pwm.c **** *  None
  49:.\Generated_Source\PSoC4/pwm.c **** *
  50:.\Generated_Source\PSoC4/pwm.c **** * Global variables:
  51:.\Generated_Source\PSoC4/pwm.c **** *  pwm_initVar: Is modified when this function is called for the
  52:.\Generated_Source\PSoC4/pwm.c **** *   first time. Is used to ensure that initialization happens only once.
  53:.\Generated_Source\PSoC4/pwm.c **** *
  54:.\Generated_Source\PSoC4/pwm.c **** *******************************************************************************/
  55:.\Generated_Source\PSoC4/pwm.c **** void pwm_Start(void) 
  56:.\Generated_Source\PSoC4/pwm.c **** {
  57:.\Generated_Source\PSoC4/pwm.c ****     /* If not Initialized then initialize all required hardware and software */
  58:.\Generated_Source\PSoC4/pwm.c ****     if(pwm_initVar == 0u)
  59:.\Generated_Source\PSoC4/pwm.c ****     {
  60:.\Generated_Source\PSoC4/pwm.c ****         pwm_Init();
  61:.\Generated_Source\PSoC4/pwm.c ****         pwm_initVar = 1u;
  62:.\Generated_Source\PSoC4/pwm.c ****     }
  63:.\Generated_Source\PSoC4/pwm.c ****     pwm_Enable();
  64:.\Generated_Source\PSoC4/pwm.c **** 
  65:.\Generated_Source\PSoC4/pwm.c **** }
  66:.\Generated_Source\PSoC4/pwm.c **** 
  67:.\Generated_Source\PSoC4/pwm.c **** 
  68:.\Generated_Source\PSoC4/pwm.c **** /*******************************************************************************
  69:.\Generated_Source\PSoC4/pwm.c **** * Function Name: pwm_Init
  70:.\Generated_Source\PSoC4/pwm.c **** ********************************************************************************
  71:.\Generated_Source\PSoC4/pwm.c **** *
  72:.\Generated_Source\PSoC4/pwm.c **** * Summary:
  73:.\Generated_Source\PSoC4/pwm.c **** *  Initialize component's parameters to the parameters set by user in the
  74:.\Generated_Source\PSoC4/pwm.c **** *  customizer of the component placed onto schematic. Usually called in
  75:.\Generated_Source\PSoC4/pwm.c **** *  pwm_Start().
  76:.\Generated_Source\PSoC4/pwm.c **** *
  77:.\Generated_Source\PSoC4/pwm.c **** * Parameters:
  78:.\Generated_Source\PSoC4/pwm.c **** *  None
  79:.\Generated_Source\PSoC4/pwm.c **** *
  80:.\Generated_Source\PSoC4/pwm.c **** * Return:
  81:.\Generated_Source\PSoC4/pwm.c **** *  None
  82:.\Generated_Source\PSoC4/pwm.c **** *
  83:.\Generated_Source\PSoC4/pwm.c **** *******************************************************************************/
  84:.\Generated_Source\PSoC4/pwm.c **** void pwm_Init(void) 
  85:.\Generated_Source\PSoC4/pwm.c **** {
  86:.\Generated_Source\PSoC4/pwm.c ****     #if (pwm_UsingFixedFunction || pwm_UseControl)
  87:.\Generated_Source\PSoC4/pwm.c ****         uint8 ctrl;
  88:.\Generated_Source\PSoC4/pwm.c ****     #endif /* (pwm_UsingFixedFunction || pwm_UseControl) */
  89:.\Generated_Source\PSoC4/pwm.c **** 
ARM GAS  C:\Users\alvin\AppData\Local\Temp\ccg5AO67.s 			page 3


  90:.\Generated_Source\PSoC4/pwm.c ****     #if(!pwm_UsingFixedFunction)
  91:.\Generated_Source\PSoC4/pwm.c ****         #if(pwm_UseStatus)
  92:.\Generated_Source\PSoC4/pwm.c ****             /* Interrupt State Backup for Critical Region*/
  93:.\Generated_Source\PSoC4/pwm.c ****             uint8 pwm_interruptState;
  94:.\Generated_Source\PSoC4/pwm.c ****         #endif /* (pwm_UseStatus) */
  95:.\Generated_Source\PSoC4/pwm.c ****     #endif /* (!pwm_UsingFixedFunction) */
  96:.\Generated_Source\PSoC4/pwm.c **** 
  97:.\Generated_Source\PSoC4/pwm.c ****     #if (pwm_UsingFixedFunction)
  98:.\Generated_Source\PSoC4/pwm.c ****         /* You are allowed to write the compare value (FF only) */
  99:.\Generated_Source\PSoC4/pwm.c ****         pwm_CONTROL |= pwm_CFG0_MODE;
 100:.\Generated_Source\PSoC4/pwm.c ****         #if (pwm_DeadBand2_4)
 101:.\Generated_Source\PSoC4/pwm.c ****             pwm_CONTROL |= pwm_CFG0_DB;
 102:.\Generated_Source\PSoC4/pwm.c ****         #endif /* (pwm_DeadBand2_4) */
 103:.\Generated_Source\PSoC4/pwm.c **** 
 104:.\Generated_Source\PSoC4/pwm.c ****         ctrl = pwm_CONTROL3 & ((uint8 )(~pwm_CTRL_CMPMODE1_MASK));
 105:.\Generated_Source\PSoC4/pwm.c ****         pwm_CONTROL3 = ctrl | pwm_DEFAULT_COMPARE1_MODE;
 106:.\Generated_Source\PSoC4/pwm.c **** 
 107:.\Generated_Source\PSoC4/pwm.c ****          /* Clear and Set SYNCTC and SYNCCMP bits of RT1 register */
 108:.\Generated_Source\PSoC4/pwm.c ****         pwm_RT1 &= ((uint8)(~pwm_RT1_MASK));
 109:.\Generated_Source\PSoC4/pwm.c ****         pwm_RT1 |= pwm_SYNC;
 110:.\Generated_Source\PSoC4/pwm.c **** 
 111:.\Generated_Source\PSoC4/pwm.c ****         /*Enable DSI Sync all all inputs of the PWM*/
 112:.\Generated_Source\PSoC4/pwm.c ****         pwm_RT1 &= ((uint8)(~pwm_SYNCDSI_MASK));
 113:.\Generated_Source\PSoC4/pwm.c ****         pwm_RT1 |= pwm_SYNCDSI_EN;
 114:.\Generated_Source\PSoC4/pwm.c **** 
 115:.\Generated_Source\PSoC4/pwm.c ****     #elif (pwm_UseControl)
 116:.\Generated_Source\PSoC4/pwm.c ****         /* Set the default compare mode defined in the parameter */
 117:.\Generated_Source\PSoC4/pwm.c ****         ctrl = pwm_CONTROL & ((uint8)(~pwm_CTRL_CMPMODE2_MASK)) &
 118:.\Generated_Source\PSoC4/pwm.c ****                 ((uint8)(~pwm_CTRL_CMPMODE1_MASK));
 119:.\Generated_Source\PSoC4/pwm.c ****         pwm_CONTROL = ctrl | pwm_DEFAULT_COMPARE2_MODE |
 120:.\Generated_Source\PSoC4/pwm.c ****                                    pwm_DEFAULT_COMPARE1_MODE;
 121:.\Generated_Source\PSoC4/pwm.c ****     #endif /* (pwm_UsingFixedFunction) */
 122:.\Generated_Source\PSoC4/pwm.c **** 
 123:.\Generated_Source\PSoC4/pwm.c ****     #if (!pwm_UsingFixedFunction)
 124:.\Generated_Source\PSoC4/pwm.c ****         #if (pwm_Resolution == 8)
 125:.\Generated_Source\PSoC4/pwm.c ****             /* Set FIFO 0 to 1 byte register for period*/
 126:.\Generated_Source\PSoC4/pwm.c ****             pwm_AUX_CONTROLDP0 |= (pwm_AUX_CTRL_FIFO0_CLR);
 127:.\Generated_Source\PSoC4/pwm.c ****         #else /* (pwm_Resolution == 16)*/
 128:.\Generated_Source\PSoC4/pwm.c ****             /* Set FIFO 0 to 1 byte register for period */
 129:.\Generated_Source\PSoC4/pwm.c ****             pwm_AUX_CONTROLDP0 |= (pwm_AUX_CTRL_FIFO0_CLR);
 130:.\Generated_Source\PSoC4/pwm.c ****             pwm_AUX_CONTROLDP1 |= (pwm_AUX_CTRL_FIFO0_CLR);
 131:.\Generated_Source\PSoC4/pwm.c ****         #endif /* (pwm_Resolution == 8) */
 132:.\Generated_Source\PSoC4/pwm.c **** 
 133:.\Generated_Source\PSoC4/pwm.c ****         pwm_WriteCounter(pwm_INIT_PERIOD_VALUE);
 134:.\Generated_Source\PSoC4/pwm.c ****     #endif /* (!pwm_UsingFixedFunction) */
 135:.\Generated_Source\PSoC4/pwm.c **** 
 136:.\Generated_Source\PSoC4/pwm.c ****     pwm_WritePeriod(pwm_INIT_PERIOD_VALUE);
 137:.\Generated_Source\PSoC4/pwm.c **** 
 138:.\Generated_Source\PSoC4/pwm.c ****         #if (pwm_UseOneCompareMode)
 139:.\Generated_Source\PSoC4/pwm.c ****             pwm_WriteCompare(pwm_INIT_COMPARE_VALUE1);
 140:.\Generated_Source\PSoC4/pwm.c ****         #else
 141:.\Generated_Source\PSoC4/pwm.c ****             pwm_WriteCompare1(pwm_INIT_COMPARE_VALUE1);
 142:.\Generated_Source\PSoC4/pwm.c ****             pwm_WriteCompare2(pwm_INIT_COMPARE_VALUE2);
 143:.\Generated_Source\PSoC4/pwm.c ****         #endif /* (pwm_UseOneCompareMode) */
 144:.\Generated_Source\PSoC4/pwm.c **** 
 145:.\Generated_Source\PSoC4/pwm.c ****         #if (pwm_KillModeMinTime)
 146:.\Generated_Source\PSoC4/pwm.c ****             pwm_WriteKillTime(pwm_MinimumKillTime);
ARM GAS  C:\Users\alvin\AppData\Local\Temp\ccg5AO67.s 			page 4


 147:.\Generated_Source\PSoC4/pwm.c ****         #endif /* (pwm_KillModeMinTime) */
 148:.\Generated_Source\PSoC4/pwm.c **** 
 149:.\Generated_Source\PSoC4/pwm.c ****         #if (pwm_DeadBandUsed)
 150:.\Generated_Source\PSoC4/pwm.c ****             pwm_WriteDeadTime(pwm_INIT_DEAD_TIME);
 151:.\Generated_Source\PSoC4/pwm.c ****         #endif /* (pwm_DeadBandUsed) */
 152:.\Generated_Source\PSoC4/pwm.c **** 
 153:.\Generated_Source\PSoC4/pwm.c ****     #if (pwm_UseStatus || pwm_UsingFixedFunction)
 154:.\Generated_Source\PSoC4/pwm.c ****         pwm_SetInterruptMode(pwm_INIT_INTERRUPTS_MODE);
 155:.\Generated_Source\PSoC4/pwm.c ****     #endif /* (pwm_UseStatus || pwm_UsingFixedFunction) */
 156:.\Generated_Source\PSoC4/pwm.c **** 
 157:.\Generated_Source\PSoC4/pwm.c ****     #if (pwm_UsingFixedFunction)
 158:.\Generated_Source\PSoC4/pwm.c ****         /* Globally Enable the Fixed Function Block chosen */
 159:.\Generated_Source\PSoC4/pwm.c ****         pwm_GLOBAL_ENABLE |= pwm_BLOCK_EN_MASK;
 160:.\Generated_Source\PSoC4/pwm.c ****         /* Set the Interrupt source to come from the status register */
 161:.\Generated_Source\PSoC4/pwm.c ****         pwm_CONTROL2 |= pwm_CTRL2_IRQ_SEL;
 162:.\Generated_Source\PSoC4/pwm.c ****     #else
 163:.\Generated_Source\PSoC4/pwm.c ****         #if(pwm_UseStatus)
 164:.\Generated_Source\PSoC4/pwm.c **** 
 165:.\Generated_Source\PSoC4/pwm.c ****             /* CyEnterCriticalRegion and CyExitCriticalRegion are used to mark following region cri
 166:.\Generated_Source\PSoC4/pwm.c ****             /* Enter Critical Region*/
 167:.\Generated_Source\PSoC4/pwm.c ****             pwm_interruptState = CyEnterCriticalSection();
 168:.\Generated_Source\PSoC4/pwm.c ****             /* Use the interrupt output of the status register for IRQ output */
 169:.\Generated_Source\PSoC4/pwm.c ****             pwm_STATUS_AUX_CTRL |= pwm_STATUS_ACTL_INT_EN_MASK;
 170:.\Generated_Source\PSoC4/pwm.c **** 
 171:.\Generated_Source\PSoC4/pwm.c ****              /* Exit Critical Region*/
 172:.\Generated_Source\PSoC4/pwm.c ****             CyExitCriticalSection(pwm_interruptState);
 173:.\Generated_Source\PSoC4/pwm.c **** 
 174:.\Generated_Source\PSoC4/pwm.c ****             /* Clear the FIFO to enable the pwm_STATUS_FIFOFULL
 175:.\Generated_Source\PSoC4/pwm.c ****                    bit to be set on FIFO full. */
 176:.\Generated_Source\PSoC4/pwm.c ****             pwm_ClearFIFO();
 177:.\Generated_Source\PSoC4/pwm.c ****         #endif /* (pwm_UseStatus) */
 178:.\Generated_Source\PSoC4/pwm.c ****     #endif /* (pwm_UsingFixedFunction) */
 179:.\Generated_Source\PSoC4/pwm.c **** }
 180:.\Generated_Source\PSoC4/pwm.c **** 
 181:.\Generated_Source\PSoC4/pwm.c **** 
 182:.\Generated_Source\PSoC4/pwm.c **** /*******************************************************************************
 183:.\Generated_Source\PSoC4/pwm.c **** * Function Name: pwm_Enable
 184:.\Generated_Source\PSoC4/pwm.c **** ********************************************************************************
 185:.\Generated_Source\PSoC4/pwm.c **** *
 186:.\Generated_Source\PSoC4/pwm.c **** * Summary:
 187:.\Generated_Source\PSoC4/pwm.c **** *  Enables the PWM block operation
 188:.\Generated_Source\PSoC4/pwm.c **** *
 189:.\Generated_Source\PSoC4/pwm.c **** * Parameters:
 190:.\Generated_Source\PSoC4/pwm.c **** *  None
 191:.\Generated_Source\PSoC4/pwm.c **** *
 192:.\Generated_Source\PSoC4/pwm.c **** * Return:
 193:.\Generated_Source\PSoC4/pwm.c **** *  None
 194:.\Generated_Source\PSoC4/pwm.c **** *
 195:.\Generated_Source\PSoC4/pwm.c **** * Side Effects:
 196:.\Generated_Source\PSoC4/pwm.c **** *  This works only if software enable mode is chosen
 197:.\Generated_Source\PSoC4/pwm.c **** *
 198:.\Generated_Source\PSoC4/pwm.c **** *******************************************************************************/
 199:.\Generated_Source\PSoC4/pwm.c **** void pwm_Enable(void) 
 200:.\Generated_Source\PSoC4/pwm.c **** {
  26              		.loc 1 200 0
  27              		.cfi_startproc
 201:.\Generated_Source\PSoC4/pwm.c ****     /* Globally Enable the Fixed Function Block chosen */
ARM GAS  C:\Users\alvin\AppData\Local\Temp\ccg5AO67.s 			page 5


 202:.\Generated_Source\PSoC4/pwm.c ****     #if (pwm_UsingFixedFunction)
 203:.\Generated_Source\PSoC4/pwm.c ****         pwm_GLOBAL_ENABLE |= pwm_BLOCK_EN_MASK;
 204:.\Generated_Source\PSoC4/pwm.c ****         pwm_GLOBAL_STBY_ENABLE |= pwm_BLOCK_STBY_EN_MASK;
 205:.\Generated_Source\PSoC4/pwm.c ****     #endif /* (pwm_UsingFixedFunction) */
 206:.\Generated_Source\PSoC4/pwm.c **** 
 207:.\Generated_Source\PSoC4/pwm.c ****     /* Enable the PWM from the control register  */
 208:.\Generated_Source\PSoC4/pwm.c ****     #if (pwm_UseControl || pwm_UsingFixedFunction)
 209:.\Generated_Source\PSoC4/pwm.c ****         pwm_CONTROL |= pwm_CTRL_ENABLE;
  28              		.loc 1 209 0
  29 0000 024A     		ldr	r2, .L2
  30 0002 1178     		ldrb	r1, [r2]
  31 0004 8023     		mov	r3, #128
  32 0006 0B43     		orr	r3, r1
  33 0008 1370     		strb	r3, [r2]
 210:.\Generated_Source\PSoC4/pwm.c ****     #endif /* (pwm_UseControl || pwm_UsingFixedFunction) */
 211:.\Generated_Source\PSoC4/pwm.c **** }
  34              		.loc 1 211 0
  35              		@ sp needed
  36 000a 7047     		bx	lr
  37              	.L3:
  38              		.align	2
  39              	.L2:
  40 000c 73000F40 		.word	1074724979
  41              		.cfi_endproc
  42              	.LFE4:
  43              		.size	pwm_Enable, .-pwm_Enable
  44              		.section	.text.pwm_Stop,"ax",%progbits
  45              		.align	2
  46              		.global	pwm_Stop
  47              		.code	16
  48              		.thumb_func
  49              		.type	pwm_Stop, %function
  50              	pwm_Stop:
  51              	.LFB5:
 212:.\Generated_Source\PSoC4/pwm.c **** 
 213:.\Generated_Source\PSoC4/pwm.c **** 
 214:.\Generated_Source\PSoC4/pwm.c **** /*******************************************************************************
 215:.\Generated_Source\PSoC4/pwm.c **** * Function Name: pwm_Stop
 216:.\Generated_Source\PSoC4/pwm.c **** ********************************************************************************
 217:.\Generated_Source\PSoC4/pwm.c **** *
 218:.\Generated_Source\PSoC4/pwm.c **** * Summary:
 219:.\Generated_Source\PSoC4/pwm.c **** *  The stop function halts the PWM, but does not change any modes or disable
 220:.\Generated_Source\PSoC4/pwm.c **** *  interrupts.
 221:.\Generated_Source\PSoC4/pwm.c **** *
 222:.\Generated_Source\PSoC4/pwm.c **** * Parameters:
 223:.\Generated_Source\PSoC4/pwm.c **** *  None
 224:.\Generated_Source\PSoC4/pwm.c **** *
 225:.\Generated_Source\PSoC4/pwm.c **** * Return:
 226:.\Generated_Source\PSoC4/pwm.c **** *  None
 227:.\Generated_Source\PSoC4/pwm.c **** *
 228:.\Generated_Source\PSoC4/pwm.c **** * Side Effects:
 229:.\Generated_Source\PSoC4/pwm.c **** *  If the Enable mode is set to Hardware only then this function
 230:.\Generated_Source\PSoC4/pwm.c **** *  has no effect on the operation of the PWM
 231:.\Generated_Source\PSoC4/pwm.c **** *
 232:.\Generated_Source\PSoC4/pwm.c **** *******************************************************************************/
 233:.\Generated_Source\PSoC4/pwm.c **** void pwm_Stop(void) 
 234:.\Generated_Source\PSoC4/pwm.c **** {
ARM GAS  C:\Users\alvin\AppData\Local\Temp\ccg5AO67.s 			page 6


  52              		.loc 1 234 0
  53              		.cfi_startproc
 235:.\Generated_Source\PSoC4/pwm.c ****     #if (pwm_UseControl || pwm_UsingFixedFunction)
 236:.\Generated_Source\PSoC4/pwm.c ****         pwm_CONTROL &= ((uint8)(~pwm_CTRL_ENABLE));
  54              		.loc 1 236 0
  55 0000 024A     		ldr	r2, .L5
  56 0002 1178     		ldrb	r1, [r2]
  57 0004 7F23     		mov	r3, #127
  58 0006 0B40     		and	r3, r1
  59 0008 1370     		strb	r3, [r2]
 237:.\Generated_Source\PSoC4/pwm.c ****     #endif /* (pwm_UseControl || pwm_UsingFixedFunction) */
 238:.\Generated_Source\PSoC4/pwm.c **** 
 239:.\Generated_Source\PSoC4/pwm.c ****     /* Globally disable the Fixed Function Block chosen */
 240:.\Generated_Source\PSoC4/pwm.c ****     #if (pwm_UsingFixedFunction)
 241:.\Generated_Source\PSoC4/pwm.c ****         pwm_GLOBAL_ENABLE &= ((uint8)(~pwm_BLOCK_EN_MASK));
 242:.\Generated_Source\PSoC4/pwm.c ****         pwm_GLOBAL_STBY_ENABLE &= ((uint8)(~pwm_BLOCK_STBY_EN_MASK));
 243:.\Generated_Source\PSoC4/pwm.c ****     #endif /* (pwm_UsingFixedFunction) */
 244:.\Generated_Source\PSoC4/pwm.c **** }
  60              		.loc 1 244 0
  61              		@ sp needed
  62 000a 7047     		bx	lr
  63              	.L6:
  64              		.align	2
  65              	.L5:
  66 000c 73000F40 		.word	1074724979
  67              		.cfi_endproc
  68              	.LFE5:
  69              		.size	pwm_Stop, .-pwm_Stop
  70              		.section	.text.pwm_WriteCounter,"ax",%progbits
  71              		.align	2
  72              		.global	pwm_WriteCounter
  73              		.code	16
  74              		.thumb_func
  75              		.type	pwm_WriteCounter, %function
  76              	pwm_WriteCounter:
  77              	.LFB6:
 245:.\Generated_Source\PSoC4/pwm.c **** 
 246:.\Generated_Source\PSoC4/pwm.c **** #if (pwm_UseOneCompareMode)
 247:.\Generated_Source\PSoC4/pwm.c ****     #if (pwm_CompareMode1SW)
 248:.\Generated_Source\PSoC4/pwm.c **** 
 249:.\Generated_Source\PSoC4/pwm.c **** 
 250:.\Generated_Source\PSoC4/pwm.c ****         /*******************************************************************************
 251:.\Generated_Source\PSoC4/pwm.c ****         * Function Name: pwm_SetCompareMode
 252:.\Generated_Source\PSoC4/pwm.c ****         ********************************************************************************
 253:.\Generated_Source\PSoC4/pwm.c ****         *
 254:.\Generated_Source\PSoC4/pwm.c ****         * Summary:
 255:.\Generated_Source\PSoC4/pwm.c ****         *  This function writes the Compare Mode for the pwm output when in Dither mode,
 256:.\Generated_Source\PSoC4/pwm.c ****         *  Center Align Mode or One Output Mode.
 257:.\Generated_Source\PSoC4/pwm.c ****         *
 258:.\Generated_Source\PSoC4/pwm.c ****         * Parameters:
 259:.\Generated_Source\PSoC4/pwm.c ****         *  comparemode:  The new compare mode for the PWM output. Use the compare types
 260:.\Generated_Source\PSoC4/pwm.c ****         *                defined in the H file as input arguments.
 261:.\Generated_Source\PSoC4/pwm.c ****         *
 262:.\Generated_Source\PSoC4/pwm.c ****         * Return:
 263:.\Generated_Source\PSoC4/pwm.c ****         *  None
 264:.\Generated_Source\PSoC4/pwm.c ****         *
 265:.\Generated_Source\PSoC4/pwm.c ****         *******************************************************************************/
ARM GAS  C:\Users\alvin\AppData\Local\Temp\ccg5AO67.s 			page 7


 266:.\Generated_Source\PSoC4/pwm.c ****         void pwm_SetCompareMode(uint8 comparemode) 
 267:.\Generated_Source\PSoC4/pwm.c ****         {
 268:.\Generated_Source\PSoC4/pwm.c ****             #if(pwm_UsingFixedFunction)
 269:.\Generated_Source\PSoC4/pwm.c **** 
 270:.\Generated_Source\PSoC4/pwm.c ****                 #if(0 != pwm_CTRL_CMPMODE1_SHIFT)
 271:.\Generated_Source\PSoC4/pwm.c ****                     uint8 comparemodemasked = ((uint8)((uint8)comparemode << pwm_CTRL_CMPMODE1_SHIF
 272:.\Generated_Source\PSoC4/pwm.c ****                 #else
 273:.\Generated_Source\PSoC4/pwm.c ****                     uint8 comparemodemasked = comparemode;
 274:.\Generated_Source\PSoC4/pwm.c ****                 #endif /* (0 != pwm_CTRL_CMPMODE1_SHIFT) */
 275:.\Generated_Source\PSoC4/pwm.c **** 
 276:.\Generated_Source\PSoC4/pwm.c ****                 pwm_CONTROL3 &= ((uint8)(~pwm_CTRL_CMPMODE1_MASK)); /*Clear Existing Data */
 277:.\Generated_Source\PSoC4/pwm.c ****                 pwm_CONTROL3 |= comparemodemasked;
 278:.\Generated_Source\PSoC4/pwm.c **** 
 279:.\Generated_Source\PSoC4/pwm.c ****             #elif (pwm_UseControl)
 280:.\Generated_Source\PSoC4/pwm.c **** 
 281:.\Generated_Source\PSoC4/pwm.c ****                 #if(0 != pwm_CTRL_CMPMODE1_SHIFT)
 282:.\Generated_Source\PSoC4/pwm.c ****                     uint8 comparemode1masked = ((uint8)((uint8)comparemode << pwm_CTRL_CMPMODE1_SHI
 283:.\Generated_Source\PSoC4/pwm.c ****                                                 pwm_CTRL_CMPMODE1_MASK;
 284:.\Generated_Source\PSoC4/pwm.c ****                 #else
 285:.\Generated_Source\PSoC4/pwm.c ****                     uint8 comparemode1masked = comparemode & pwm_CTRL_CMPMODE1_MASK;
 286:.\Generated_Source\PSoC4/pwm.c ****                 #endif /* (0 != pwm_CTRL_CMPMODE1_SHIFT) */
 287:.\Generated_Source\PSoC4/pwm.c **** 
 288:.\Generated_Source\PSoC4/pwm.c ****                 #if(0 != pwm_CTRL_CMPMODE2_SHIFT)
 289:.\Generated_Source\PSoC4/pwm.c ****                     uint8 comparemode2masked = ((uint8)((uint8)comparemode << pwm_CTRL_CMPMODE2_SHI
 290:.\Generated_Source\PSoC4/pwm.c ****                                                pwm_CTRL_CMPMODE2_MASK;
 291:.\Generated_Source\PSoC4/pwm.c ****                 #else
 292:.\Generated_Source\PSoC4/pwm.c ****                     uint8 comparemode2masked = comparemode & pwm_CTRL_CMPMODE2_MASK;
 293:.\Generated_Source\PSoC4/pwm.c ****                 #endif /* (0 != pwm_CTRL_CMPMODE2_SHIFT) */
 294:.\Generated_Source\PSoC4/pwm.c **** 
 295:.\Generated_Source\PSoC4/pwm.c ****                 /*Clear existing mode */
 296:.\Generated_Source\PSoC4/pwm.c ****                 pwm_CONTROL &= ((uint8)(~(pwm_CTRL_CMPMODE1_MASK |
 297:.\Generated_Source\PSoC4/pwm.c ****                                             pwm_CTRL_CMPMODE2_MASK)));
 298:.\Generated_Source\PSoC4/pwm.c ****                 pwm_CONTROL |= (comparemode1masked | comparemode2masked);
 299:.\Generated_Source\PSoC4/pwm.c **** 
 300:.\Generated_Source\PSoC4/pwm.c ****             #else
 301:.\Generated_Source\PSoC4/pwm.c ****                 uint8 temp = comparemode;
 302:.\Generated_Source\PSoC4/pwm.c ****             #endif /* (pwm_UsingFixedFunction) */
 303:.\Generated_Source\PSoC4/pwm.c ****         }
 304:.\Generated_Source\PSoC4/pwm.c ****     #endif /* pwm_CompareMode1SW */
 305:.\Generated_Source\PSoC4/pwm.c **** 
 306:.\Generated_Source\PSoC4/pwm.c **** #else /* UseOneCompareMode */
 307:.\Generated_Source\PSoC4/pwm.c **** 
 308:.\Generated_Source\PSoC4/pwm.c ****     #if (pwm_CompareMode1SW)
 309:.\Generated_Source\PSoC4/pwm.c **** 
 310:.\Generated_Source\PSoC4/pwm.c **** 
 311:.\Generated_Source\PSoC4/pwm.c ****         /*******************************************************************************
 312:.\Generated_Source\PSoC4/pwm.c ****         * Function Name: pwm_SetCompareMode1
 313:.\Generated_Source\PSoC4/pwm.c ****         ********************************************************************************
 314:.\Generated_Source\PSoC4/pwm.c ****         *
 315:.\Generated_Source\PSoC4/pwm.c ****         * Summary:
 316:.\Generated_Source\PSoC4/pwm.c ****         *  This function writes the Compare Mode for the pwm or pwm1 output
 317:.\Generated_Source\PSoC4/pwm.c ****         *
 318:.\Generated_Source\PSoC4/pwm.c ****         * Parameters:
 319:.\Generated_Source\PSoC4/pwm.c ****         *  comparemode:  The new compare mode for the PWM output. Use the compare types
 320:.\Generated_Source\PSoC4/pwm.c ****         *                defined in the H file as input arguments.
 321:.\Generated_Source\PSoC4/pwm.c ****         *
 322:.\Generated_Source\PSoC4/pwm.c ****         * Return:
ARM GAS  C:\Users\alvin\AppData\Local\Temp\ccg5AO67.s 			page 8


 323:.\Generated_Source\PSoC4/pwm.c ****         *  None
 324:.\Generated_Source\PSoC4/pwm.c ****         *
 325:.\Generated_Source\PSoC4/pwm.c ****         *******************************************************************************/
 326:.\Generated_Source\PSoC4/pwm.c ****         void pwm_SetCompareMode1(uint8 comparemode) 
 327:.\Generated_Source\PSoC4/pwm.c ****         {
 328:.\Generated_Source\PSoC4/pwm.c ****             #if(0 != pwm_CTRL_CMPMODE1_SHIFT)
 329:.\Generated_Source\PSoC4/pwm.c ****                 uint8 comparemodemasked = ((uint8)((uint8)comparemode << pwm_CTRL_CMPMODE1_SHIFT)) 
 330:.\Generated_Source\PSoC4/pwm.c ****                                            pwm_CTRL_CMPMODE1_MASK;
 331:.\Generated_Source\PSoC4/pwm.c ****             #else
 332:.\Generated_Source\PSoC4/pwm.c ****                 uint8 comparemodemasked = comparemode & pwm_CTRL_CMPMODE1_MASK;
 333:.\Generated_Source\PSoC4/pwm.c ****             #endif /* (0 != pwm_CTRL_CMPMODE1_SHIFT) */
 334:.\Generated_Source\PSoC4/pwm.c **** 
 335:.\Generated_Source\PSoC4/pwm.c ****             #if (pwm_UseControl)
 336:.\Generated_Source\PSoC4/pwm.c ****                 pwm_CONTROL &= ((uint8)(~pwm_CTRL_CMPMODE1_MASK)); /*Clear existing mode */
 337:.\Generated_Source\PSoC4/pwm.c ****                 pwm_CONTROL |= comparemodemasked;
 338:.\Generated_Source\PSoC4/pwm.c ****             #endif /* (pwm_UseControl) */
 339:.\Generated_Source\PSoC4/pwm.c ****         }
 340:.\Generated_Source\PSoC4/pwm.c ****     #endif /* pwm_CompareMode1SW */
 341:.\Generated_Source\PSoC4/pwm.c **** 
 342:.\Generated_Source\PSoC4/pwm.c **** #if (pwm_CompareMode2SW)
 343:.\Generated_Source\PSoC4/pwm.c **** 
 344:.\Generated_Source\PSoC4/pwm.c **** 
 345:.\Generated_Source\PSoC4/pwm.c ****     /*******************************************************************************
 346:.\Generated_Source\PSoC4/pwm.c ****     * Function Name: pwm_SetCompareMode2
 347:.\Generated_Source\PSoC4/pwm.c ****     ********************************************************************************
 348:.\Generated_Source\PSoC4/pwm.c ****     *
 349:.\Generated_Source\PSoC4/pwm.c ****     * Summary:
 350:.\Generated_Source\PSoC4/pwm.c ****     *  This function writes the Compare Mode for the pwm or pwm2 output
 351:.\Generated_Source\PSoC4/pwm.c ****     *
 352:.\Generated_Source\PSoC4/pwm.c ****     * Parameters:
 353:.\Generated_Source\PSoC4/pwm.c ****     *  comparemode:  The new compare mode for the PWM output. Use the compare types
 354:.\Generated_Source\PSoC4/pwm.c ****     *                defined in the H file as input arguments.
 355:.\Generated_Source\PSoC4/pwm.c ****     *
 356:.\Generated_Source\PSoC4/pwm.c ****     * Return:
 357:.\Generated_Source\PSoC4/pwm.c ****     *  None
 358:.\Generated_Source\PSoC4/pwm.c ****     *
 359:.\Generated_Source\PSoC4/pwm.c ****     *******************************************************************************/
 360:.\Generated_Source\PSoC4/pwm.c ****     void pwm_SetCompareMode2(uint8 comparemode) 
 361:.\Generated_Source\PSoC4/pwm.c ****     {
 362:.\Generated_Source\PSoC4/pwm.c **** 
 363:.\Generated_Source\PSoC4/pwm.c ****         #if(0 != pwm_CTRL_CMPMODE2_SHIFT)
 364:.\Generated_Source\PSoC4/pwm.c ****             uint8 comparemodemasked = ((uint8)((uint8)comparemode << pwm_CTRL_CMPMODE2_SHIFT)) &
 365:.\Generated_Source\PSoC4/pwm.c ****                                                  pwm_CTRL_CMPMODE2_MASK;
 366:.\Generated_Source\PSoC4/pwm.c ****         #else
 367:.\Generated_Source\PSoC4/pwm.c ****             uint8 comparemodemasked = comparemode & pwm_CTRL_CMPMODE2_MASK;
 368:.\Generated_Source\PSoC4/pwm.c ****         #endif /* (0 != pwm_CTRL_CMPMODE2_SHIFT) */
 369:.\Generated_Source\PSoC4/pwm.c **** 
 370:.\Generated_Source\PSoC4/pwm.c ****         #if (pwm_UseControl)
 371:.\Generated_Source\PSoC4/pwm.c ****             pwm_CONTROL &= ((uint8)(~pwm_CTRL_CMPMODE2_MASK)); /*Clear existing mode */
 372:.\Generated_Source\PSoC4/pwm.c ****             pwm_CONTROL |= comparemodemasked;
 373:.\Generated_Source\PSoC4/pwm.c ****         #endif /* (pwm_UseControl) */
 374:.\Generated_Source\PSoC4/pwm.c ****     }
 375:.\Generated_Source\PSoC4/pwm.c ****     #endif /*pwm_CompareMode2SW */
 376:.\Generated_Source\PSoC4/pwm.c **** 
 377:.\Generated_Source\PSoC4/pwm.c **** #endif /* UseOneCompareMode */
 378:.\Generated_Source\PSoC4/pwm.c **** 
 379:.\Generated_Source\PSoC4/pwm.c **** 
ARM GAS  C:\Users\alvin\AppData\Local\Temp\ccg5AO67.s 			page 9


 380:.\Generated_Source\PSoC4/pwm.c **** #if (!pwm_UsingFixedFunction)
 381:.\Generated_Source\PSoC4/pwm.c **** 
 382:.\Generated_Source\PSoC4/pwm.c **** 
 383:.\Generated_Source\PSoC4/pwm.c ****     /*******************************************************************************
 384:.\Generated_Source\PSoC4/pwm.c ****     * Function Name: pwm_WriteCounter
 385:.\Generated_Source\PSoC4/pwm.c ****     ********************************************************************************
 386:.\Generated_Source\PSoC4/pwm.c ****     *
 387:.\Generated_Source\PSoC4/pwm.c ****     * Summary:
 388:.\Generated_Source\PSoC4/pwm.c ****     *  Writes a new counter value directly to the counter register. This will be
 389:.\Generated_Source\PSoC4/pwm.c ****     *  implemented for that currently running period and only that period. This API
 390:.\Generated_Source\PSoC4/pwm.c ****     *  is valid only for UDB implementation and not available for fixed function
 391:.\Generated_Source\PSoC4/pwm.c ****     *  PWM implementation.
 392:.\Generated_Source\PSoC4/pwm.c ****     *
 393:.\Generated_Source\PSoC4/pwm.c ****     * Parameters:
 394:.\Generated_Source\PSoC4/pwm.c ****     *  counter:  The period new period counter value.
 395:.\Generated_Source\PSoC4/pwm.c ****     *
 396:.\Generated_Source\PSoC4/pwm.c ****     * Return:
 397:.\Generated_Source\PSoC4/pwm.c ****     *  None
 398:.\Generated_Source\PSoC4/pwm.c ****     *
 399:.\Generated_Source\PSoC4/pwm.c ****     * Side Effects:
 400:.\Generated_Source\PSoC4/pwm.c ****     *  The PWM Period will be reloaded when a counter value will be a zero
 401:.\Generated_Source\PSoC4/pwm.c ****     *
 402:.\Generated_Source\PSoC4/pwm.c ****     *******************************************************************************/
 403:.\Generated_Source\PSoC4/pwm.c ****     void pwm_WriteCounter(uint16 counter) \
 404:.\Generated_Source\PSoC4/pwm.c ****                                        
 405:.\Generated_Source\PSoC4/pwm.c ****     {
  78              		.loc 1 405 0
  79              		.cfi_startproc
  80              	.LVL0:
 406:.\Generated_Source\PSoC4/pwm.c ****         CY_SET_REG16(pwm_COUNTER_LSB_PTR, counter);
  81              		.loc 1 406 0
  82 0000 014B     		ldr	r3, .L8
  83 0002 1880     		strh	r0, [r3]
 407:.\Generated_Source\PSoC4/pwm.c ****     }
  84              		.loc 1 407 0
  85              		@ sp needed
  86 0004 7047     		bx	lr
  87              	.L9:
  88 0006 C046     		.align	2
  89              	.L8:
  90 0008 04100F40 		.word	1074728964
  91              		.cfi_endproc
  92              	.LFE6:
  93              		.size	pwm_WriteCounter, .-pwm_WriteCounter
  94              		.section	.text.pwm_ReadCounter,"ax",%progbits
  95              		.align	2
  96              		.global	pwm_ReadCounter
  97              		.code	16
  98              		.thumb_func
  99              		.type	pwm_ReadCounter, %function
 100              	pwm_ReadCounter:
 101              	.LFB7:
 408:.\Generated_Source\PSoC4/pwm.c **** 
 409:.\Generated_Source\PSoC4/pwm.c **** 
 410:.\Generated_Source\PSoC4/pwm.c ****     /*******************************************************************************
 411:.\Generated_Source\PSoC4/pwm.c ****     * Function Name: pwm_ReadCounter
 412:.\Generated_Source\PSoC4/pwm.c ****     ********************************************************************************
ARM GAS  C:\Users\alvin\AppData\Local\Temp\ccg5AO67.s 			page 10


 413:.\Generated_Source\PSoC4/pwm.c ****     *
 414:.\Generated_Source\PSoC4/pwm.c ****     * Summary:
 415:.\Generated_Source\PSoC4/pwm.c ****     *  This function returns the current value of the counter.  It doesn't matter
 416:.\Generated_Source\PSoC4/pwm.c ****     *  if the counter is enabled or running.
 417:.\Generated_Source\PSoC4/pwm.c ****     *
 418:.\Generated_Source\PSoC4/pwm.c ****     * Parameters:
 419:.\Generated_Source\PSoC4/pwm.c ****     *  None
 420:.\Generated_Source\PSoC4/pwm.c ****     *
 421:.\Generated_Source\PSoC4/pwm.c ****     * Return:
 422:.\Generated_Source\PSoC4/pwm.c ****     *  The current value of the counter.
 423:.\Generated_Source\PSoC4/pwm.c ****     *
 424:.\Generated_Source\PSoC4/pwm.c ****     *******************************************************************************/
 425:.\Generated_Source\PSoC4/pwm.c ****     uint16 pwm_ReadCounter(void) 
 426:.\Generated_Source\PSoC4/pwm.c ****     {
 102              		.loc 1 426 0
 103              		.cfi_startproc
 427:.\Generated_Source\PSoC4/pwm.c ****         /* Force capture by reading Accumulator */
 428:.\Generated_Source\PSoC4/pwm.c ****         /* Must first do a software capture to be able to read the counter */
 429:.\Generated_Source\PSoC4/pwm.c ****         /* It is up to the user code to make sure there isn't already captured data in the FIFO */
 430:.\Generated_Source\PSoC4/pwm.c ****           (void)CY_GET_REG8(pwm_COUNTERCAP_LSB_PTR_8BIT);
 104              		.loc 1 430 0
 105 0000 024B     		ldr	r3, .L11
 106 0002 1B78     		ldrb	r3, [r3]
 431:.\Generated_Source\PSoC4/pwm.c **** 
 432:.\Generated_Source\PSoC4/pwm.c ****         /* Read the data from the FIFO */
 433:.\Generated_Source\PSoC4/pwm.c ****         return (CY_GET_REG16(pwm_CAPTURE_LSB_PTR));
 107              		.loc 1 433 0
 108 0004 024B     		ldr	r3, .L11+4
 109 0006 1888     		ldrh	r0, [r3]
 110 0008 80B2     		uxth	r0, r0
 434:.\Generated_Source\PSoC4/pwm.c ****     }
 111              		.loc 1 434 0
 112              		@ sp needed
 113 000a 7047     		bx	lr
 114              	.L12:
 115              		.align	2
 116              	.L11:
 117 000c 12000F40 		.word	1074724882
 118 0010 A4100F40 		.word	1074729124
 119              		.cfi_endproc
 120              	.LFE7:
 121              		.size	pwm_ReadCounter, .-pwm_ReadCounter
 122              		.section	.text.pwm_WritePeriod,"ax",%progbits
 123              		.align	2
 124              		.global	pwm_WritePeriod
 125              		.code	16
 126              		.thumb_func
 127              		.type	pwm_WritePeriod, %function
 128              	pwm_WritePeriod:
 129              	.LFB9:
 435:.\Generated_Source\PSoC4/pwm.c **** 
 436:.\Generated_Source\PSoC4/pwm.c ****     #if (pwm_UseStatus)
 437:.\Generated_Source\PSoC4/pwm.c **** 
 438:.\Generated_Source\PSoC4/pwm.c **** 
 439:.\Generated_Source\PSoC4/pwm.c ****         /*******************************************************************************
 440:.\Generated_Source\PSoC4/pwm.c ****         * Function Name: pwm_ClearFIFO
 441:.\Generated_Source\PSoC4/pwm.c ****         ********************************************************************************
ARM GAS  C:\Users\alvin\AppData\Local\Temp\ccg5AO67.s 			page 11


 442:.\Generated_Source\PSoC4/pwm.c ****         *
 443:.\Generated_Source\PSoC4/pwm.c ****         * Summary:
 444:.\Generated_Source\PSoC4/pwm.c ****         *  This function clears all capture data from the capture FIFO
 445:.\Generated_Source\PSoC4/pwm.c ****         *
 446:.\Generated_Source\PSoC4/pwm.c ****         * Parameters:
 447:.\Generated_Source\PSoC4/pwm.c ****         *  None
 448:.\Generated_Source\PSoC4/pwm.c ****         *
 449:.\Generated_Source\PSoC4/pwm.c ****         * Return:
 450:.\Generated_Source\PSoC4/pwm.c ****         *  None
 451:.\Generated_Source\PSoC4/pwm.c ****         *
 452:.\Generated_Source\PSoC4/pwm.c ****         *******************************************************************************/
 453:.\Generated_Source\PSoC4/pwm.c ****         void pwm_ClearFIFO(void) 
 454:.\Generated_Source\PSoC4/pwm.c ****         {
 455:.\Generated_Source\PSoC4/pwm.c ****             while(0u != (pwm_ReadStatusRegister() & pwm_STATUS_FIFONEMPTY))
 456:.\Generated_Source\PSoC4/pwm.c ****             {
 457:.\Generated_Source\PSoC4/pwm.c ****                 (void)pwm_ReadCapture();
 458:.\Generated_Source\PSoC4/pwm.c ****             }
 459:.\Generated_Source\PSoC4/pwm.c ****         }
 460:.\Generated_Source\PSoC4/pwm.c **** 
 461:.\Generated_Source\PSoC4/pwm.c ****     #endif /* pwm_UseStatus */
 462:.\Generated_Source\PSoC4/pwm.c **** 
 463:.\Generated_Source\PSoC4/pwm.c **** #endif /* !pwm_UsingFixedFunction */
 464:.\Generated_Source\PSoC4/pwm.c **** 
 465:.\Generated_Source\PSoC4/pwm.c **** 
 466:.\Generated_Source\PSoC4/pwm.c **** /*******************************************************************************
 467:.\Generated_Source\PSoC4/pwm.c **** * Function Name: pwm_WritePeriod
 468:.\Generated_Source\PSoC4/pwm.c **** ********************************************************************************
 469:.\Generated_Source\PSoC4/pwm.c **** *
 470:.\Generated_Source\PSoC4/pwm.c **** * Summary:
 471:.\Generated_Source\PSoC4/pwm.c **** *  This function is used to change the period of the counter.  The new period
 472:.\Generated_Source\PSoC4/pwm.c **** *  will be loaded the next time terminal count is detected.
 473:.\Generated_Source\PSoC4/pwm.c **** *
 474:.\Generated_Source\PSoC4/pwm.c **** * Parameters:
 475:.\Generated_Source\PSoC4/pwm.c **** *  period:  Period value. May be between 1 and (2^Resolution)-1.  A value of 0
 476:.\Generated_Source\PSoC4/pwm.c **** *           will result in the counter remaining at zero.
 477:.\Generated_Source\PSoC4/pwm.c **** *
 478:.\Generated_Source\PSoC4/pwm.c **** * Return:
 479:.\Generated_Source\PSoC4/pwm.c **** *  None
 480:.\Generated_Source\PSoC4/pwm.c **** *
 481:.\Generated_Source\PSoC4/pwm.c **** *******************************************************************************/
 482:.\Generated_Source\PSoC4/pwm.c **** void pwm_WritePeriod(uint16 period) 
 483:.\Generated_Source\PSoC4/pwm.c **** {
 130              		.loc 1 483 0
 131              		.cfi_startproc
 132              	.LVL1:
 484:.\Generated_Source\PSoC4/pwm.c ****     #if(pwm_UsingFixedFunction)
 485:.\Generated_Source\PSoC4/pwm.c ****         CY_SET_REG16(pwm_PERIOD_LSB_PTR, (uint16)period);
 486:.\Generated_Source\PSoC4/pwm.c ****     #else
 487:.\Generated_Source\PSoC4/pwm.c ****         CY_SET_REG16(pwm_PERIOD_LSB_PTR, period);
 133              		.loc 1 487 0
 134 0000 014B     		ldr	r3, .L14
 135 0002 1880     		strh	r0, [r3]
 488:.\Generated_Source\PSoC4/pwm.c ****     #endif /* (pwm_UsingFixedFunction) */
 489:.\Generated_Source\PSoC4/pwm.c **** }
 136              		.loc 1 489 0
 137              		@ sp needed
 138 0004 7047     		bx	lr
ARM GAS  C:\Users\alvin\AppData\Local\Temp\ccg5AO67.s 			page 12


 139              	.L15:
 140 0006 C046     		.align	2
 141              	.L14:
 142 0008 84100F40 		.word	1074729092
 143              		.cfi_endproc
 144              	.LFE9:
 145              		.size	pwm_WritePeriod, .-pwm_WritePeriod
 146              		.section	.text.pwm_WriteCompare,"ax",%progbits
 147              		.align	2
 148              		.global	pwm_WriteCompare
 149              		.code	16
 150              		.thumb_func
 151              		.type	pwm_WriteCompare, %function
 152              	pwm_WriteCompare:
 153              	.LFB10:
 490:.\Generated_Source\PSoC4/pwm.c **** 
 491:.\Generated_Source\PSoC4/pwm.c **** #if (pwm_UseOneCompareMode)
 492:.\Generated_Source\PSoC4/pwm.c **** 
 493:.\Generated_Source\PSoC4/pwm.c **** 
 494:.\Generated_Source\PSoC4/pwm.c ****     /*******************************************************************************
 495:.\Generated_Source\PSoC4/pwm.c ****     * Function Name: pwm_WriteCompare
 496:.\Generated_Source\PSoC4/pwm.c ****     ********************************************************************************
 497:.\Generated_Source\PSoC4/pwm.c ****     *
 498:.\Generated_Source\PSoC4/pwm.c ****     * Summary:
 499:.\Generated_Source\PSoC4/pwm.c ****     *  This funtion is used to change the compare1 value when the PWM is in Dither
 500:.\Generated_Source\PSoC4/pwm.c ****     *  mode. The compare output will reflect the new value on the next UDB clock.
 501:.\Generated_Source\PSoC4/pwm.c ****     *  The compare output will be driven high when the present counter value is
 502:.\Generated_Source\PSoC4/pwm.c ****     *  compared to the compare value based on the compare mode defined in
 503:.\Generated_Source\PSoC4/pwm.c ****     *  Dither Mode.
 504:.\Generated_Source\PSoC4/pwm.c ****     *
 505:.\Generated_Source\PSoC4/pwm.c ****     * Parameters:
 506:.\Generated_Source\PSoC4/pwm.c ****     *  compare:  New compare value.
 507:.\Generated_Source\PSoC4/pwm.c ****     *
 508:.\Generated_Source\PSoC4/pwm.c ****     * Return:
 509:.\Generated_Source\PSoC4/pwm.c ****     *  None
 510:.\Generated_Source\PSoC4/pwm.c ****     *
 511:.\Generated_Source\PSoC4/pwm.c ****     * Side Effects:
 512:.\Generated_Source\PSoC4/pwm.c ****     *  This function is only available if the PWM mode parameter is set to
 513:.\Generated_Source\PSoC4/pwm.c ****     *  Dither Mode, Center Aligned Mode or One Output Mode
 514:.\Generated_Source\PSoC4/pwm.c ****     *
 515:.\Generated_Source\PSoC4/pwm.c ****     *******************************************************************************/
 516:.\Generated_Source\PSoC4/pwm.c ****     void pwm_WriteCompare(uint16 compare) \
 517:.\Generated_Source\PSoC4/pwm.c ****                                        
 518:.\Generated_Source\PSoC4/pwm.c ****     {
 154              		.loc 1 518 0
 155              		.cfi_startproc
 156              	.LVL2:
 519:.\Generated_Source\PSoC4/pwm.c ****         #if(pwm_UsingFixedFunction)
 520:.\Generated_Source\PSoC4/pwm.c ****             CY_SET_REG16(pwm_COMPARE1_LSB_PTR, (uint16)compare);
 521:.\Generated_Source\PSoC4/pwm.c ****         #else
 522:.\Generated_Source\PSoC4/pwm.c ****             CY_SET_REG16(pwm_COMPARE1_LSB_PTR, compare);
 157              		.loc 1 522 0
 158 0000 014B     		ldr	r3, .L17
 159 0002 1880     		strh	r0, [r3]
 523:.\Generated_Source\PSoC4/pwm.c ****         #endif /* (pwm_UsingFixedFunction) */
 524:.\Generated_Source\PSoC4/pwm.c **** 
 525:.\Generated_Source\PSoC4/pwm.c ****         #if (pwm_PWMMode == pwm__B_PWM__DITHER)
ARM GAS  C:\Users\alvin\AppData\Local\Temp\ccg5AO67.s 			page 13


 526:.\Generated_Source\PSoC4/pwm.c ****             #if(pwm_UsingFixedFunction)
 527:.\Generated_Source\PSoC4/pwm.c ****                 CY_SET_REG16(pwm_COMPARE2_LSB_PTR, (uint16)(compare + 1u));
 528:.\Generated_Source\PSoC4/pwm.c ****             #else
 529:.\Generated_Source\PSoC4/pwm.c ****                 CY_SET_REG16(pwm_COMPARE2_LSB_PTR, (compare + 1u));
 530:.\Generated_Source\PSoC4/pwm.c ****             #endif /* (pwm_UsingFixedFunction) */
 531:.\Generated_Source\PSoC4/pwm.c ****         #endif /* (pwm_PWMMode == pwm__B_PWM__DITHER) */
 532:.\Generated_Source\PSoC4/pwm.c ****     }
 160              		.loc 1 532 0
 161              		@ sp needed
 162 0004 7047     		bx	lr
 163              	.L18:
 164 0006 C046     		.align	2
 165              	.L17:
 166 0008 44100F40 		.word	1074729028
 167              		.cfi_endproc
 168              	.LFE10:
 169              		.size	pwm_WriteCompare, .-pwm_WriteCompare
 170              		.section	.text.pwm_SetInterruptMode,"ax",%progbits
 171              		.align	2
 172              		.global	pwm_SetInterruptMode
 173              		.code	16
 174              		.thumb_func
 175              		.type	pwm_SetInterruptMode, %function
 176              	pwm_SetInterruptMode:
 177              	.LFB11:
 533:.\Generated_Source\PSoC4/pwm.c **** 
 534:.\Generated_Source\PSoC4/pwm.c **** 
 535:.\Generated_Source\PSoC4/pwm.c **** #else
 536:.\Generated_Source\PSoC4/pwm.c **** 
 537:.\Generated_Source\PSoC4/pwm.c **** 
 538:.\Generated_Source\PSoC4/pwm.c ****     /*******************************************************************************
 539:.\Generated_Source\PSoC4/pwm.c ****     * Function Name: pwm_WriteCompare1
 540:.\Generated_Source\PSoC4/pwm.c ****     ********************************************************************************
 541:.\Generated_Source\PSoC4/pwm.c ****     *
 542:.\Generated_Source\PSoC4/pwm.c ****     * Summary:
 543:.\Generated_Source\PSoC4/pwm.c ****     *  This funtion is used to change the compare1 value.  The compare output will
 544:.\Generated_Source\PSoC4/pwm.c ****     *  reflect the new value on the next UDB clock.  The compare output will be
 545:.\Generated_Source\PSoC4/pwm.c ****     *  driven high when the present counter value is less than or less than or
 546:.\Generated_Source\PSoC4/pwm.c ****     *  equal to the compare register, depending on the mode.
 547:.\Generated_Source\PSoC4/pwm.c ****     *
 548:.\Generated_Source\PSoC4/pwm.c ****     * Parameters:
 549:.\Generated_Source\PSoC4/pwm.c ****     *  compare:  New compare value.
 550:.\Generated_Source\PSoC4/pwm.c ****     *
 551:.\Generated_Source\PSoC4/pwm.c ****     * Return:
 552:.\Generated_Source\PSoC4/pwm.c ****     *  None
 553:.\Generated_Source\PSoC4/pwm.c ****     *
 554:.\Generated_Source\PSoC4/pwm.c ****     *******************************************************************************/
 555:.\Generated_Source\PSoC4/pwm.c ****     void pwm_WriteCompare1(uint16 compare) \
 556:.\Generated_Source\PSoC4/pwm.c ****                                         
 557:.\Generated_Source\PSoC4/pwm.c ****     {
 558:.\Generated_Source\PSoC4/pwm.c ****         #if(pwm_UsingFixedFunction)
 559:.\Generated_Source\PSoC4/pwm.c ****             CY_SET_REG16(pwm_COMPARE1_LSB_PTR, (uint16)compare);
 560:.\Generated_Source\PSoC4/pwm.c ****         #else
 561:.\Generated_Source\PSoC4/pwm.c ****             CY_SET_REG16(pwm_COMPARE1_LSB_PTR, compare);
 562:.\Generated_Source\PSoC4/pwm.c ****         #endif /* (pwm_UsingFixedFunction) */
 563:.\Generated_Source\PSoC4/pwm.c ****     }
 564:.\Generated_Source\PSoC4/pwm.c **** 
ARM GAS  C:\Users\alvin\AppData\Local\Temp\ccg5AO67.s 			page 14


 565:.\Generated_Source\PSoC4/pwm.c **** 
 566:.\Generated_Source\PSoC4/pwm.c ****     /*******************************************************************************
 567:.\Generated_Source\PSoC4/pwm.c ****     * Function Name: pwm_WriteCompare2
 568:.\Generated_Source\PSoC4/pwm.c ****     ********************************************************************************
 569:.\Generated_Source\PSoC4/pwm.c ****     *
 570:.\Generated_Source\PSoC4/pwm.c ****     * Summary:
 571:.\Generated_Source\PSoC4/pwm.c ****     *  This funtion is used to change the compare value, for compare1 output.
 572:.\Generated_Source\PSoC4/pwm.c ****     *  The compare output will reflect the new value on the next UDB clock.
 573:.\Generated_Source\PSoC4/pwm.c ****     *  The compare output will be driven high when the present counter value is
 574:.\Generated_Source\PSoC4/pwm.c ****     *  less than or less than or equal to the compare register, depending on the
 575:.\Generated_Source\PSoC4/pwm.c ****     *  mode.
 576:.\Generated_Source\PSoC4/pwm.c ****     *
 577:.\Generated_Source\PSoC4/pwm.c ****     * Parameters:
 578:.\Generated_Source\PSoC4/pwm.c ****     *  compare:  New compare value.
 579:.\Generated_Source\PSoC4/pwm.c ****     *
 580:.\Generated_Source\PSoC4/pwm.c ****     * Return:
 581:.\Generated_Source\PSoC4/pwm.c ****     *  None
 582:.\Generated_Source\PSoC4/pwm.c ****     *
 583:.\Generated_Source\PSoC4/pwm.c ****     *******************************************************************************/
 584:.\Generated_Source\PSoC4/pwm.c ****     void pwm_WriteCompare2(uint16 compare) \
 585:.\Generated_Source\PSoC4/pwm.c ****                                         
 586:.\Generated_Source\PSoC4/pwm.c ****     {
 587:.\Generated_Source\PSoC4/pwm.c ****         #if(pwm_UsingFixedFunction)
 588:.\Generated_Source\PSoC4/pwm.c ****             CY_SET_REG16(pwm_COMPARE2_LSB_PTR, compare);
 589:.\Generated_Source\PSoC4/pwm.c ****         #else
 590:.\Generated_Source\PSoC4/pwm.c ****             CY_SET_REG16(pwm_COMPARE2_LSB_PTR, compare);
 591:.\Generated_Source\PSoC4/pwm.c ****         #endif /* (pwm_UsingFixedFunction) */
 592:.\Generated_Source\PSoC4/pwm.c ****     }
 593:.\Generated_Source\PSoC4/pwm.c **** #endif /* UseOneCompareMode */
 594:.\Generated_Source\PSoC4/pwm.c **** 
 595:.\Generated_Source\PSoC4/pwm.c **** #if (pwm_DeadBandUsed)
 596:.\Generated_Source\PSoC4/pwm.c **** 
 597:.\Generated_Source\PSoC4/pwm.c **** 
 598:.\Generated_Source\PSoC4/pwm.c ****     /*******************************************************************************
 599:.\Generated_Source\PSoC4/pwm.c ****     * Function Name: pwm_WriteDeadTime
 600:.\Generated_Source\PSoC4/pwm.c ****     ********************************************************************************
 601:.\Generated_Source\PSoC4/pwm.c ****     *
 602:.\Generated_Source\PSoC4/pwm.c ****     * Summary:
 603:.\Generated_Source\PSoC4/pwm.c ****     *  This function writes the dead-band counts to the corresponding register
 604:.\Generated_Source\PSoC4/pwm.c ****     *
 605:.\Generated_Source\PSoC4/pwm.c ****     * Parameters:
 606:.\Generated_Source\PSoC4/pwm.c ****     *  deadtime:  Number of counts for dead time
 607:.\Generated_Source\PSoC4/pwm.c ****     *
 608:.\Generated_Source\PSoC4/pwm.c ****     * Return:
 609:.\Generated_Source\PSoC4/pwm.c ****     *  None
 610:.\Generated_Source\PSoC4/pwm.c ****     *
 611:.\Generated_Source\PSoC4/pwm.c ****     *******************************************************************************/
 612:.\Generated_Source\PSoC4/pwm.c ****     void pwm_WriteDeadTime(uint8 deadtime) 
 613:.\Generated_Source\PSoC4/pwm.c ****     {
 614:.\Generated_Source\PSoC4/pwm.c ****         /* If using the Dead Band 1-255 mode then just write the register */
 615:.\Generated_Source\PSoC4/pwm.c ****         #if(!pwm_DeadBand2_4)
 616:.\Generated_Source\PSoC4/pwm.c ****             CY_SET_REG8(pwm_DEADBAND_COUNT_PTR, deadtime);
 617:.\Generated_Source\PSoC4/pwm.c ****         #else
 618:.\Generated_Source\PSoC4/pwm.c ****             /* Otherwise the data has to be masked and offset */
 619:.\Generated_Source\PSoC4/pwm.c ****             /* Clear existing data */
 620:.\Generated_Source\PSoC4/pwm.c ****             pwm_DEADBAND_COUNT &= ((uint8)(~pwm_DEADBAND_COUNT_MASK));
 621:.\Generated_Source\PSoC4/pwm.c **** 
ARM GAS  C:\Users\alvin\AppData\Local\Temp\ccg5AO67.s 			page 15


 622:.\Generated_Source\PSoC4/pwm.c ****             /* Set new dead time */
 623:.\Generated_Source\PSoC4/pwm.c ****             #if(pwm_DEADBAND_COUNT_SHIFT)
 624:.\Generated_Source\PSoC4/pwm.c ****                 pwm_DEADBAND_COUNT |= ((uint8)((uint8)deadtime << pwm_DEADBAND_COUNT_SHIFT)) &
 625:.\Generated_Source\PSoC4/pwm.c ****                                                     pwm_DEADBAND_COUNT_MASK;
 626:.\Generated_Source\PSoC4/pwm.c ****             #else
 627:.\Generated_Source\PSoC4/pwm.c ****                 pwm_DEADBAND_COUNT |= deadtime & pwm_DEADBAND_COUNT_MASK;
 628:.\Generated_Source\PSoC4/pwm.c ****             #endif /* (pwm_DEADBAND_COUNT_SHIFT) */
 629:.\Generated_Source\PSoC4/pwm.c **** 
 630:.\Generated_Source\PSoC4/pwm.c ****         #endif /* (!pwm_DeadBand2_4) */
 631:.\Generated_Source\PSoC4/pwm.c ****     }
 632:.\Generated_Source\PSoC4/pwm.c **** 
 633:.\Generated_Source\PSoC4/pwm.c **** 
 634:.\Generated_Source\PSoC4/pwm.c ****     /*******************************************************************************
 635:.\Generated_Source\PSoC4/pwm.c ****     * Function Name: pwm_ReadDeadTime
 636:.\Generated_Source\PSoC4/pwm.c ****     ********************************************************************************
 637:.\Generated_Source\PSoC4/pwm.c ****     *
 638:.\Generated_Source\PSoC4/pwm.c ****     * Summary:
 639:.\Generated_Source\PSoC4/pwm.c ****     *  This function reads the dead-band counts from the corresponding register
 640:.\Generated_Source\PSoC4/pwm.c ****     *
 641:.\Generated_Source\PSoC4/pwm.c ****     * Parameters:
 642:.\Generated_Source\PSoC4/pwm.c ****     *  None
 643:.\Generated_Source\PSoC4/pwm.c ****     *
 644:.\Generated_Source\PSoC4/pwm.c ****     * Return:
 645:.\Generated_Source\PSoC4/pwm.c ****     *  Dead Band Counts
 646:.\Generated_Source\PSoC4/pwm.c ****     *
 647:.\Generated_Source\PSoC4/pwm.c ****     *******************************************************************************/
 648:.\Generated_Source\PSoC4/pwm.c ****     uint8 pwm_ReadDeadTime(void) 
 649:.\Generated_Source\PSoC4/pwm.c ****     {
 650:.\Generated_Source\PSoC4/pwm.c ****         /* If using the Dead Band 1-255 mode then just read the register */
 651:.\Generated_Source\PSoC4/pwm.c ****         #if(!pwm_DeadBand2_4)
 652:.\Generated_Source\PSoC4/pwm.c ****             return (CY_GET_REG8(pwm_DEADBAND_COUNT_PTR));
 653:.\Generated_Source\PSoC4/pwm.c ****         #else
 654:.\Generated_Source\PSoC4/pwm.c **** 
 655:.\Generated_Source\PSoC4/pwm.c ****             /* Otherwise the data has to be masked and offset */
 656:.\Generated_Source\PSoC4/pwm.c ****             #if(pwm_DEADBAND_COUNT_SHIFT)
 657:.\Generated_Source\PSoC4/pwm.c ****                 return ((uint8)(((uint8)(pwm_DEADBAND_COUNT & pwm_DEADBAND_COUNT_MASK)) >>
 658:.\Generated_Source\PSoC4/pwm.c ****                                                                            pwm_DEADBAND_COUNT_SHIFT
 659:.\Generated_Source\PSoC4/pwm.c ****             #else
 660:.\Generated_Source\PSoC4/pwm.c ****                 return (pwm_DEADBAND_COUNT & pwm_DEADBAND_COUNT_MASK);
 661:.\Generated_Source\PSoC4/pwm.c ****             #endif /* (pwm_DEADBAND_COUNT_SHIFT) */
 662:.\Generated_Source\PSoC4/pwm.c ****         #endif /* (!pwm_DeadBand2_4) */
 663:.\Generated_Source\PSoC4/pwm.c ****     }
 664:.\Generated_Source\PSoC4/pwm.c **** #endif /* DeadBandUsed */
 665:.\Generated_Source\PSoC4/pwm.c **** 
 666:.\Generated_Source\PSoC4/pwm.c **** #if (pwm_UseStatus || pwm_UsingFixedFunction)
 667:.\Generated_Source\PSoC4/pwm.c **** 
 668:.\Generated_Source\PSoC4/pwm.c **** 
 669:.\Generated_Source\PSoC4/pwm.c ****     /*******************************************************************************
 670:.\Generated_Source\PSoC4/pwm.c ****     * Function Name: pwm_SetInterruptMode
 671:.\Generated_Source\PSoC4/pwm.c ****     ********************************************************************************
 672:.\Generated_Source\PSoC4/pwm.c ****     *
 673:.\Generated_Source\PSoC4/pwm.c ****     * Summary:
 674:.\Generated_Source\PSoC4/pwm.c ****     *  This function configures the interrupts mask control of theinterrupt
 675:.\Generated_Source\PSoC4/pwm.c ****     *  source status register.
 676:.\Generated_Source\PSoC4/pwm.c ****     *
 677:.\Generated_Source\PSoC4/pwm.c ****     * Parameters:
 678:.\Generated_Source\PSoC4/pwm.c ****     *  uint8 interruptMode: Bit field containing the interrupt sources enabled
ARM GAS  C:\Users\alvin\AppData\Local\Temp\ccg5AO67.s 			page 16


 679:.\Generated_Source\PSoC4/pwm.c ****     *
 680:.\Generated_Source\PSoC4/pwm.c ****     * Return:
 681:.\Generated_Source\PSoC4/pwm.c ****     *  None
 682:.\Generated_Source\PSoC4/pwm.c ****     *
 683:.\Generated_Source\PSoC4/pwm.c ****     *******************************************************************************/
 684:.\Generated_Source\PSoC4/pwm.c ****     void pwm_SetInterruptMode(uint8 interruptMode) 
 685:.\Generated_Source\PSoC4/pwm.c ****     {
 178              		.loc 1 685 0
 179              		.cfi_startproc
 180              	.LVL3:
 686:.\Generated_Source\PSoC4/pwm.c ****         CY_SET_REG8(pwm_STATUS_MASK_PTR, interruptMode);
 181              		.loc 1 686 0
 182 0000 014B     		ldr	r3, .L20
 183 0002 1870     		strb	r0, [r3]
 687:.\Generated_Source\PSoC4/pwm.c ****     }
 184              		.loc 1 687 0
 185              		@ sp needed
 186 0004 7047     		bx	lr
 187              	.L21:
 188 0006 C046     		.align	2
 189              	.L20:
 190 0008 83000F40 		.word	1074724995
 191              		.cfi_endproc
 192              	.LFE11:
 193              		.size	pwm_SetInterruptMode, .-pwm_SetInterruptMode
 194              		.section	.text.pwm_ReadStatusRegister,"ax",%progbits
 195              		.align	2
 196              		.global	pwm_ReadStatusRegister
 197              		.code	16
 198              		.thumb_func
 199              		.type	pwm_ReadStatusRegister, %function
 200              	pwm_ReadStatusRegister:
 201              	.LFB12:
 688:.\Generated_Source\PSoC4/pwm.c **** 
 689:.\Generated_Source\PSoC4/pwm.c **** 
 690:.\Generated_Source\PSoC4/pwm.c ****     /*******************************************************************************
 691:.\Generated_Source\PSoC4/pwm.c ****     * Function Name: pwm_ReadStatusRegister
 692:.\Generated_Source\PSoC4/pwm.c ****     ********************************************************************************
 693:.\Generated_Source\PSoC4/pwm.c ****     *
 694:.\Generated_Source\PSoC4/pwm.c ****     * Summary:
 695:.\Generated_Source\PSoC4/pwm.c ****     *  This function returns the current state of the status register.
 696:.\Generated_Source\PSoC4/pwm.c ****     *
 697:.\Generated_Source\PSoC4/pwm.c ****     * Parameters:
 698:.\Generated_Source\PSoC4/pwm.c ****     *  None
 699:.\Generated_Source\PSoC4/pwm.c ****     *
 700:.\Generated_Source\PSoC4/pwm.c ****     * Return:
 701:.\Generated_Source\PSoC4/pwm.c ****     *  uint8 : Current status register value. The status register bits are:
 702:.\Generated_Source\PSoC4/pwm.c ****     *  [7:6] : Unused(0)
 703:.\Generated_Source\PSoC4/pwm.c ****     *  [5]   : Kill event output
 704:.\Generated_Source\PSoC4/pwm.c ****     *  [4]   : FIFO not empty
 705:.\Generated_Source\PSoC4/pwm.c ****     *  [3]   : FIFO full
 706:.\Generated_Source\PSoC4/pwm.c ****     *  [2]   : Terminal count
 707:.\Generated_Source\PSoC4/pwm.c ****     *  [1]   : Compare output 2
 708:.\Generated_Source\PSoC4/pwm.c ****     *  [0]   : Compare output 1
 709:.\Generated_Source\PSoC4/pwm.c ****     *
 710:.\Generated_Source\PSoC4/pwm.c ****     *******************************************************************************/
 711:.\Generated_Source\PSoC4/pwm.c ****     uint8 pwm_ReadStatusRegister(void) 
ARM GAS  C:\Users\alvin\AppData\Local\Temp\ccg5AO67.s 			page 17


 712:.\Generated_Source\PSoC4/pwm.c ****     {
 202              		.loc 1 712 0
 203              		.cfi_startproc
 713:.\Generated_Source\PSoC4/pwm.c ****         return (CY_GET_REG8(pwm_STATUS_PTR));
 204              		.loc 1 713 0
 205 0000 014B     		ldr	r3, .L23
 206 0002 1878     		ldrb	r0, [r3]
 207 0004 C0B2     		uxtb	r0, r0
 714:.\Generated_Source\PSoC4/pwm.c ****     }
 208              		.loc 1 714 0
 209              		@ sp needed
 210 0006 7047     		bx	lr
 211              	.L24:
 212              		.align	2
 213              	.L23:
 214 0008 63000F40 		.word	1074724963
 215              		.cfi_endproc
 216              	.LFE12:
 217              		.size	pwm_ReadStatusRegister, .-pwm_ReadStatusRegister
 218              		.section	.text.pwm_ReadControlRegister,"ax",%progbits
 219              		.align	2
 220              		.global	pwm_ReadControlRegister
 221              		.code	16
 222              		.thumb_func
 223              		.type	pwm_ReadControlRegister, %function
 224              	pwm_ReadControlRegister:
 225              	.LFB13:
 715:.\Generated_Source\PSoC4/pwm.c **** 
 716:.\Generated_Source\PSoC4/pwm.c **** #endif /* (pwm_UseStatus || pwm_UsingFixedFunction) */
 717:.\Generated_Source\PSoC4/pwm.c **** 
 718:.\Generated_Source\PSoC4/pwm.c **** 
 719:.\Generated_Source\PSoC4/pwm.c **** #if (pwm_UseControl)
 720:.\Generated_Source\PSoC4/pwm.c **** 
 721:.\Generated_Source\PSoC4/pwm.c **** 
 722:.\Generated_Source\PSoC4/pwm.c ****     /*******************************************************************************
 723:.\Generated_Source\PSoC4/pwm.c ****     * Function Name: pwm_ReadControlRegister
 724:.\Generated_Source\PSoC4/pwm.c ****     ********************************************************************************
 725:.\Generated_Source\PSoC4/pwm.c ****     *
 726:.\Generated_Source\PSoC4/pwm.c ****     * Summary:
 727:.\Generated_Source\PSoC4/pwm.c ****     *  Returns the current state of the control register. This API is available
 728:.\Generated_Source\PSoC4/pwm.c ****     *  only if the control register is not removed.
 729:.\Generated_Source\PSoC4/pwm.c ****     *
 730:.\Generated_Source\PSoC4/pwm.c ****     * Parameters:
 731:.\Generated_Source\PSoC4/pwm.c ****     *  None
 732:.\Generated_Source\PSoC4/pwm.c ****     *
 733:.\Generated_Source\PSoC4/pwm.c ****     * Return:
 734:.\Generated_Source\PSoC4/pwm.c ****     *  uint8 : Current control register value
 735:.\Generated_Source\PSoC4/pwm.c ****     *
 736:.\Generated_Source\PSoC4/pwm.c ****     *******************************************************************************/
 737:.\Generated_Source\PSoC4/pwm.c ****     uint8 pwm_ReadControlRegister(void) 
 738:.\Generated_Source\PSoC4/pwm.c ****     {
 226              		.loc 1 738 0
 227              		.cfi_startproc
 739:.\Generated_Source\PSoC4/pwm.c ****         uint8 result;
 740:.\Generated_Source\PSoC4/pwm.c **** 
 741:.\Generated_Source\PSoC4/pwm.c ****         result = CY_GET_REG8(pwm_CONTROL_PTR);
 228              		.loc 1 741 0
ARM GAS  C:\Users\alvin\AppData\Local\Temp\ccg5AO67.s 			page 18


 229 0000 014B     		ldr	r3, .L26
 230 0002 1878     		ldrb	r0, [r3]
 231 0004 C0B2     		uxtb	r0, r0
 232              	.LVL4:
 742:.\Generated_Source\PSoC4/pwm.c ****         return (result);
 743:.\Generated_Source\PSoC4/pwm.c ****     }
 233              		.loc 1 743 0
 234              		@ sp needed
 235 0006 7047     		bx	lr
 236              	.L27:
 237              		.align	2
 238              	.L26:
 239 0008 73000F40 		.word	1074724979
 240              		.cfi_endproc
 241              	.LFE13:
 242              		.size	pwm_ReadControlRegister, .-pwm_ReadControlRegister
 243              		.section	.text.pwm_WriteControlRegister,"ax",%progbits
 244              		.align	2
 245              		.global	pwm_WriteControlRegister
 246              		.code	16
 247              		.thumb_func
 248              		.type	pwm_WriteControlRegister, %function
 249              	pwm_WriteControlRegister:
 250              	.LFB14:
 744:.\Generated_Source\PSoC4/pwm.c **** 
 745:.\Generated_Source\PSoC4/pwm.c **** 
 746:.\Generated_Source\PSoC4/pwm.c ****     /*******************************************************************************
 747:.\Generated_Source\PSoC4/pwm.c ****     * Function Name: pwm_WriteControlRegister
 748:.\Generated_Source\PSoC4/pwm.c ****     ********************************************************************************
 749:.\Generated_Source\PSoC4/pwm.c ****     *
 750:.\Generated_Source\PSoC4/pwm.c ****     * Summary:
 751:.\Generated_Source\PSoC4/pwm.c ****     *  Sets the bit field of the control register. This API is available only if
 752:.\Generated_Source\PSoC4/pwm.c ****     *  the control register is not removed.
 753:.\Generated_Source\PSoC4/pwm.c ****     *
 754:.\Generated_Source\PSoC4/pwm.c ****     * Parameters:
 755:.\Generated_Source\PSoC4/pwm.c ****     *  uint8 control: Control register bit field, The status register bits are:
 756:.\Generated_Source\PSoC4/pwm.c ****     *  [7]   : PWM Enable
 757:.\Generated_Source\PSoC4/pwm.c ****     *  [6]   : Reset
 758:.\Generated_Source\PSoC4/pwm.c ****     *  [5:3] : Compare Mode2
 759:.\Generated_Source\PSoC4/pwm.c ****     *  [2:0] : Compare Mode2
 760:.\Generated_Source\PSoC4/pwm.c ****     *
 761:.\Generated_Source\PSoC4/pwm.c ****     * Return:
 762:.\Generated_Source\PSoC4/pwm.c ****     *  None
 763:.\Generated_Source\PSoC4/pwm.c ****     *
 764:.\Generated_Source\PSoC4/pwm.c ****     *******************************************************************************/
 765:.\Generated_Source\PSoC4/pwm.c ****     void pwm_WriteControlRegister(uint8 control) 
 766:.\Generated_Source\PSoC4/pwm.c ****     {
 251              		.loc 1 766 0
 252              		.cfi_startproc
 253              	.LVL5:
 767:.\Generated_Source\PSoC4/pwm.c ****         CY_SET_REG8(pwm_CONTROL_PTR, control);
 254              		.loc 1 767 0
 255 0000 014B     		ldr	r3, .L29
 256 0002 1870     		strb	r0, [r3]
 768:.\Generated_Source\PSoC4/pwm.c ****     }
 257              		.loc 1 768 0
 258              		@ sp needed
ARM GAS  C:\Users\alvin\AppData\Local\Temp\ccg5AO67.s 			page 19


 259 0004 7047     		bx	lr
 260              	.L30:
 261 0006 C046     		.align	2
 262              	.L29:
 263 0008 73000F40 		.word	1074724979
 264              		.cfi_endproc
 265              	.LFE14:
 266              		.size	pwm_WriteControlRegister, .-pwm_WriteControlRegister
 267              		.section	.text.pwm_ReadCapture,"ax",%progbits
 268              		.align	2
 269              		.global	pwm_ReadCapture
 270              		.code	16
 271              		.thumb_func
 272              		.type	pwm_ReadCapture, %function
 273              	pwm_ReadCapture:
 274              	.LFB15:
 769:.\Generated_Source\PSoC4/pwm.c **** 
 770:.\Generated_Source\PSoC4/pwm.c **** #endif /* (pwm_UseControl) */
 771:.\Generated_Source\PSoC4/pwm.c **** 
 772:.\Generated_Source\PSoC4/pwm.c **** 
 773:.\Generated_Source\PSoC4/pwm.c **** #if (!pwm_UsingFixedFunction)
 774:.\Generated_Source\PSoC4/pwm.c **** 
 775:.\Generated_Source\PSoC4/pwm.c **** 
 776:.\Generated_Source\PSoC4/pwm.c ****     /*******************************************************************************
 777:.\Generated_Source\PSoC4/pwm.c ****     * Function Name: pwm_ReadCapture
 778:.\Generated_Source\PSoC4/pwm.c ****     ********************************************************************************
 779:.\Generated_Source\PSoC4/pwm.c ****     *
 780:.\Generated_Source\PSoC4/pwm.c ****     * Summary:
 781:.\Generated_Source\PSoC4/pwm.c ****     *  Reads the capture value from the capture FIFO.
 782:.\Generated_Source\PSoC4/pwm.c ****     *
 783:.\Generated_Source\PSoC4/pwm.c ****     * Parameters:
 784:.\Generated_Source\PSoC4/pwm.c ****     *  None
 785:.\Generated_Source\PSoC4/pwm.c ****     *
 786:.\Generated_Source\PSoC4/pwm.c ****     * Return:
 787:.\Generated_Source\PSoC4/pwm.c ****     *  uint8/uint16: The current capture value
 788:.\Generated_Source\PSoC4/pwm.c ****     *
 789:.\Generated_Source\PSoC4/pwm.c ****     *******************************************************************************/
 790:.\Generated_Source\PSoC4/pwm.c ****     uint16 pwm_ReadCapture(void) 
 791:.\Generated_Source\PSoC4/pwm.c ****     {
 275              		.loc 1 791 0
 276              		.cfi_startproc
 792:.\Generated_Source\PSoC4/pwm.c ****         return (CY_GET_REG16(pwm_CAPTURE_LSB_PTR));
 277              		.loc 1 792 0
 278 0000 014B     		ldr	r3, .L32
 279 0002 1888     		ldrh	r0, [r3]
 280 0004 80B2     		uxth	r0, r0
 793:.\Generated_Source\PSoC4/pwm.c ****     }
 281              		.loc 1 793 0
 282              		@ sp needed
 283 0006 7047     		bx	lr
 284              	.L33:
 285              		.align	2
 286              	.L32:
 287 0008 A4100F40 		.word	1074729124
 288              		.cfi_endproc
 289              	.LFE15:
 290              		.size	pwm_ReadCapture, .-pwm_ReadCapture
ARM GAS  C:\Users\alvin\AppData\Local\Temp\ccg5AO67.s 			page 20


 291              		.section	.text.pwm_ClearFIFO,"ax",%progbits
 292              		.align	2
 293              		.global	pwm_ClearFIFO
 294              		.code	16
 295              		.thumb_func
 296              		.type	pwm_ClearFIFO, %function
 297              	pwm_ClearFIFO:
 298              	.LFB8:
 454:.\Generated_Source\PSoC4/pwm.c ****             while(0u != (pwm_ReadStatusRegister() & pwm_STATUS_FIFONEMPTY))
 299              		.loc 1 454 0
 300              		.cfi_startproc
 301 0000 08B5     		push	{r3, lr}
 302              		.cfi_def_cfa_offset 8
 303              		.cfi_offset 3, -8
 304              		.cfi_offset 14, -4
 455:.\Generated_Source\PSoC4/pwm.c ****             {
 305              		.loc 1 455 0
 306 0002 01E0     		b	.L35
 307              	.L36:
 457:.\Generated_Source\PSoC4/pwm.c ****             }
 308              		.loc 1 457 0
 309 0004 FFF7FEFF 		bl	pwm_ReadCapture
 310              	.LVL6:
 311              	.L35:
 455:.\Generated_Source\PSoC4/pwm.c ****             {
 312              		.loc 1 455 0
 313 0008 FFF7FEFF 		bl	pwm_ReadStatusRegister
 314              	.LVL7:
 315 000c C306     		lsl	r3, r0, #27
 316 000e F9D4     		bmi	.L36
 459:.\Generated_Source\PSoC4/pwm.c **** 
 317              		.loc 1 459 0
 318              		@ sp needed
 319 0010 08BD     		pop	{r3, pc}
 320              		.cfi_endproc
 321              	.LFE8:
 322              		.size	pwm_ClearFIFO, .-pwm_ClearFIFO
 323 0012 C046     		.section	.text.pwm_Init,"ax",%progbits
 324              		.align	2
 325              		.global	pwm_Init
 326              		.code	16
 327              		.thumb_func
 328              		.type	pwm_Init, %function
 329              	pwm_Init:
 330              	.LFB3:
  85:.\Generated_Source\PSoC4/pwm.c ****     #if (pwm_UsingFixedFunction || pwm_UseControl)
 331              		.loc 1 85 0
 332              		.cfi_startproc
 333 0000 38B5     		push	{r3, r4, r5, lr}
 334              		.cfi_def_cfa_offset 16
 335              		.cfi_offset 3, -16
 336              		.cfi_offset 4, -12
 337              		.cfi_offset 5, -8
 338              		.cfi_offset 14, -4
 117:.\Generated_Source\PSoC4/pwm.c ****                 ((uint8)(~pwm_CTRL_CMPMODE1_MASK));
 339              		.loc 1 117 0
 340 0002 1549     		ldr	r1, .L38
ARM GAS  C:\Users\alvin\AppData\Local\Temp\ccg5AO67.s 			page 21


 341 0004 0B78     		ldrb	r3, [r1]
 342 0006 3F22     		mov	r2, #63
 343 0008 9343     		bic	r3, r2
 344              	.LVL8:
 119:.\Generated_Source\PSoC4/pwm.c ****                                    pwm_DEFAULT_COMPARE1_MODE;
 345              		.loc 1 119 0
 346 000a 363A     		sub	r2, r2, #54
 347 000c 1343     		orr	r3, r2
 348              	.LVL9:
 349 000e 0B70     		strb	r3, [r1]
 129:.\Generated_Source\PSoC4/pwm.c ****             pwm_AUX_CONTROLDP1 |= (pwm_AUX_CTRL_FIFO0_CLR);
 350              		.loc 1 129 0
 351 0010 1249     		ldr	r1, .L38+4
 352 0012 0A78     		ldrb	r2, [r1]
 353 0014 0123     		mov	r3, #1
 354 0016 1A43     		orr	r2, r3
 355 0018 D2B2     		uxtb	r2, r2
 356 001a 0A70     		strb	r2, [r1]
 130:.\Generated_Source\PSoC4/pwm.c ****         #endif /* (pwm_Resolution == 8) */
 357              		.loc 1 130 0
 358 001c 104C     		ldr	r4, .L38+8
 359 001e 2278     		ldrb	r2, [r4]
 360 0020 1343     		orr	r3, r2
 361 0022 DBB2     		uxtb	r3, r3
 362 0024 2370     		strb	r3, [r4]
 133:.\Generated_Source\PSoC4/pwm.c ****     #endif /* (!pwm_UsingFixedFunction) */
 363              		.loc 1 133 0
 364 0026 0F4D     		ldr	r5, .L38+12
 365 0028 281C     		mov	r0, r5
 366 002a FFF7FEFF 		bl	pwm_WriteCounter
 367              	.LVL10:
 136:.\Generated_Source\PSoC4/pwm.c **** 
 368              		.loc 1 136 0
 369 002e 281C     		mov	r0, r5
 370 0030 FFF7FEFF 		bl	pwm_WritePeriod
 371              	.LVL11:
 139:.\Generated_Source\PSoC4/pwm.c ****         #else
 372              		.loc 1 139 0
 373 0034 FA20     		mov	r0, #250
 374 0036 C001     		lsl	r0, r0, #7
 375 0038 FFF7FEFF 		bl	pwm_WriteCompare
 376              	.LVL12:
 154:.\Generated_Source\PSoC4/pwm.c ****     #endif /* (pwm_UseStatus || pwm_UsingFixedFunction) */
 377              		.loc 1 154 0
 378 003c 0020     		mov	r0, #0
 379 003e FFF7FEFF 		bl	pwm_SetInterruptMode
 380              	.LVL13:
 167:.\Generated_Source\PSoC4/pwm.c ****             /* Use the interrupt output of the status register for IRQ output */
 381              		.loc 1 167 0
 382 0042 FFF7FEFF 		bl	CyEnterCriticalSection
 383              	.LVL14:
 169:.\Generated_Source\PSoC4/pwm.c **** 
 384              		.loc 1 169 0
 385 0046 2278     		ldrb	r2, [r4]
 386 0048 1023     		mov	r3, #16
 387 004a 1343     		orr	r3, r2
 388 004c 2370     		strb	r3, [r4]
ARM GAS  C:\Users\alvin\AppData\Local\Temp\ccg5AO67.s 			page 22


 172:.\Generated_Source\PSoC4/pwm.c **** 
 389              		.loc 1 172 0
 390 004e FFF7FEFF 		bl	CyExitCriticalSection
 391              	.LVL15:
 176:.\Generated_Source\PSoC4/pwm.c ****         #endif /* (pwm_UseStatus) */
 392              		.loc 1 176 0
 393 0052 FFF7FEFF 		bl	pwm_ClearFIFO
 394              	.LVL16:
 179:.\Generated_Source\PSoC4/pwm.c **** 
 395              		.loc 1 179 0
 396              		@ sp needed
 397 0056 38BD     		pop	{r3, r4, r5, pc}
 398              	.L39:
 399              		.align	2
 400              	.L38:
 401 0058 73000F40 		.word	1074724979
 402 005c 92000F40 		.word	1074725010
 403 0060 93000F40 		.word	1074725011
 404 0064 FFFF0000 		.word	65535
 405              		.cfi_endproc
 406              	.LFE3:
 407              		.size	pwm_Init, .-pwm_Init
 408              		.section	.text.pwm_Start,"ax",%progbits
 409              		.align	2
 410              		.global	pwm_Start
 411              		.code	16
 412              		.thumb_func
 413              		.type	pwm_Start, %function
 414              	pwm_Start:
 415              	.LFB2:
  56:.\Generated_Source\PSoC4/pwm.c ****     /* If not Initialized then initialize all required hardware and software */
 416              		.loc 1 56 0
 417              		.cfi_startproc
 418 0000 08B5     		push	{r3, lr}
 419              		.cfi_def_cfa_offset 8
 420              		.cfi_offset 3, -8
 421              		.cfi_offset 14, -4
  58:.\Generated_Source\PSoC4/pwm.c ****     {
 422              		.loc 1 58 0
 423 0002 064B     		ldr	r3, .L42
 424 0004 1B78     		ldrb	r3, [r3]
 425 0006 002B     		cmp	r3, #0
 426 0008 04D1     		bne	.L41
  60:.\Generated_Source\PSoC4/pwm.c ****         pwm_initVar = 1u;
 427              		.loc 1 60 0
 428 000a FFF7FEFF 		bl	pwm_Init
 429              	.LVL17:
  61:.\Generated_Source\PSoC4/pwm.c ****     }
 430              		.loc 1 61 0
 431 000e 0122     		mov	r2, #1
 432 0010 024B     		ldr	r3, .L42
 433 0012 1A70     		strb	r2, [r3]
 434              	.L41:
  63:.\Generated_Source\PSoC4/pwm.c **** 
 435              		.loc 1 63 0
 436 0014 FFF7FEFF 		bl	pwm_Enable
 437              	.LVL18:
ARM GAS  C:\Users\alvin\AppData\Local\Temp\ccg5AO67.s 			page 23


  65:.\Generated_Source\PSoC4/pwm.c **** 
 438              		.loc 1 65 0
 439              		@ sp needed
 440 0018 08BD     		pop	{r3, pc}
 441              	.L43:
 442 001a C046     		.align	2
 443              	.L42:
 444 001c 00000000 		.word	.LANCHOR0
 445              		.cfi_endproc
 446              	.LFE2:
 447              		.size	pwm_Start, .-pwm_Start
 448              		.section	.text.pwm_ReadCompare,"ax",%progbits
 449              		.align	2
 450              		.global	pwm_ReadCompare
 451              		.code	16
 452              		.thumb_func
 453              		.type	pwm_ReadCompare, %function
 454              	pwm_ReadCompare:
 455              	.LFB16:
 794:.\Generated_Source\PSoC4/pwm.c **** 
 795:.\Generated_Source\PSoC4/pwm.c **** #endif /* (!pwm_UsingFixedFunction) */
 796:.\Generated_Source\PSoC4/pwm.c **** 
 797:.\Generated_Source\PSoC4/pwm.c **** 
 798:.\Generated_Source\PSoC4/pwm.c **** #if (pwm_UseOneCompareMode)
 799:.\Generated_Source\PSoC4/pwm.c **** 
 800:.\Generated_Source\PSoC4/pwm.c **** 
 801:.\Generated_Source\PSoC4/pwm.c ****     /*******************************************************************************
 802:.\Generated_Source\PSoC4/pwm.c ****     * Function Name: pwm_ReadCompare
 803:.\Generated_Source\PSoC4/pwm.c ****     ********************************************************************************
 804:.\Generated_Source\PSoC4/pwm.c ****     *
 805:.\Generated_Source\PSoC4/pwm.c ****     * Summary:
 806:.\Generated_Source\PSoC4/pwm.c ****     *  Reads the compare value for the compare output when the PWM Mode parameter is
 807:.\Generated_Source\PSoC4/pwm.c ****     *  set to Dither mode, Center Aligned mode, or One Output mode.
 808:.\Generated_Source\PSoC4/pwm.c ****     *
 809:.\Generated_Source\PSoC4/pwm.c ****     * Parameters:
 810:.\Generated_Source\PSoC4/pwm.c ****     *  None
 811:.\Generated_Source\PSoC4/pwm.c ****     *
 812:.\Generated_Source\PSoC4/pwm.c ****     * Return:
 813:.\Generated_Source\PSoC4/pwm.c ****     *  uint8/uint16: Current compare value
 814:.\Generated_Source\PSoC4/pwm.c ****     *
 815:.\Generated_Source\PSoC4/pwm.c ****     *******************************************************************************/
 816:.\Generated_Source\PSoC4/pwm.c ****     uint16 pwm_ReadCompare(void) 
 817:.\Generated_Source\PSoC4/pwm.c ****     {
 456              		.loc 1 817 0
 457              		.cfi_startproc
 818:.\Generated_Source\PSoC4/pwm.c ****         #if(pwm_UsingFixedFunction)
 819:.\Generated_Source\PSoC4/pwm.c ****             return ((uint16)CY_GET_REG16(pwm_COMPARE1_LSB_PTR));
 820:.\Generated_Source\PSoC4/pwm.c ****         #else
 821:.\Generated_Source\PSoC4/pwm.c ****             return (CY_GET_REG16(pwm_COMPARE1_LSB_PTR));
 458              		.loc 1 821 0
 459 0000 014B     		ldr	r3, .L45
 460 0002 1888     		ldrh	r0, [r3]
 461 0004 80B2     		uxth	r0, r0
 822:.\Generated_Source\PSoC4/pwm.c ****         #endif /* (pwm_UsingFixedFunction) */
 823:.\Generated_Source\PSoC4/pwm.c ****     }
 462              		.loc 1 823 0
 463              		@ sp needed
ARM GAS  C:\Users\alvin\AppData\Local\Temp\ccg5AO67.s 			page 24


 464 0006 7047     		bx	lr
 465              	.L46:
 466              		.align	2
 467              	.L45:
 468 0008 44100F40 		.word	1074729028
 469              		.cfi_endproc
 470              	.LFE16:
 471              		.size	pwm_ReadCompare, .-pwm_ReadCompare
 472              		.section	.text.pwm_ReadPeriod,"ax",%progbits
 473              		.align	2
 474              		.global	pwm_ReadPeriod
 475              		.code	16
 476              		.thumb_func
 477              		.type	pwm_ReadPeriod, %function
 478              	pwm_ReadPeriod:
 479              	.LFB17:
 824:.\Generated_Source\PSoC4/pwm.c **** 
 825:.\Generated_Source\PSoC4/pwm.c **** #else
 826:.\Generated_Source\PSoC4/pwm.c **** 
 827:.\Generated_Source\PSoC4/pwm.c **** 
 828:.\Generated_Source\PSoC4/pwm.c ****     /*******************************************************************************
 829:.\Generated_Source\PSoC4/pwm.c ****     * Function Name: pwm_ReadCompare1
 830:.\Generated_Source\PSoC4/pwm.c ****     ********************************************************************************
 831:.\Generated_Source\PSoC4/pwm.c ****     *
 832:.\Generated_Source\PSoC4/pwm.c ****     * Summary:
 833:.\Generated_Source\PSoC4/pwm.c ****     *  Reads the compare value for the compare1 output.
 834:.\Generated_Source\PSoC4/pwm.c ****     *
 835:.\Generated_Source\PSoC4/pwm.c ****     * Parameters:
 836:.\Generated_Source\PSoC4/pwm.c ****     *  None
 837:.\Generated_Source\PSoC4/pwm.c ****     *
 838:.\Generated_Source\PSoC4/pwm.c ****     * Return:
 839:.\Generated_Source\PSoC4/pwm.c ****     *  uint8/uint16: Current compare value.
 840:.\Generated_Source\PSoC4/pwm.c ****     *
 841:.\Generated_Source\PSoC4/pwm.c ****     *******************************************************************************/
 842:.\Generated_Source\PSoC4/pwm.c ****     uint16 pwm_ReadCompare1(void) 
 843:.\Generated_Source\PSoC4/pwm.c ****     {
 844:.\Generated_Source\PSoC4/pwm.c ****         return (CY_GET_REG16(pwm_COMPARE1_LSB_PTR));
 845:.\Generated_Source\PSoC4/pwm.c ****     }
 846:.\Generated_Source\PSoC4/pwm.c **** 
 847:.\Generated_Source\PSoC4/pwm.c **** 
 848:.\Generated_Source\PSoC4/pwm.c ****     /*******************************************************************************
 849:.\Generated_Source\PSoC4/pwm.c ****     * Function Name: pwm_ReadCompare2
 850:.\Generated_Source\PSoC4/pwm.c ****     ********************************************************************************
 851:.\Generated_Source\PSoC4/pwm.c ****     *
 852:.\Generated_Source\PSoC4/pwm.c ****     * Summary:
 853:.\Generated_Source\PSoC4/pwm.c ****     *  Reads the compare value for the compare2 output.
 854:.\Generated_Source\PSoC4/pwm.c ****     *
 855:.\Generated_Source\PSoC4/pwm.c ****     * Parameters:
 856:.\Generated_Source\PSoC4/pwm.c ****     *  None
 857:.\Generated_Source\PSoC4/pwm.c ****     *
 858:.\Generated_Source\PSoC4/pwm.c ****     * Return:
 859:.\Generated_Source\PSoC4/pwm.c ****     *  uint8/uint16: Current compare value.
 860:.\Generated_Source\PSoC4/pwm.c ****     *
 861:.\Generated_Source\PSoC4/pwm.c ****     *******************************************************************************/
 862:.\Generated_Source\PSoC4/pwm.c ****     uint16 pwm_ReadCompare2(void) 
 863:.\Generated_Source\PSoC4/pwm.c ****     {
 864:.\Generated_Source\PSoC4/pwm.c ****         return (CY_GET_REG16(pwm_COMPARE2_LSB_PTR));
ARM GAS  C:\Users\alvin\AppData\Local\Temp\ccg5AO67.s 			page 25


 865:.\Generated_Source\PSoC4/pwm.c ****     }
 866:.\Generated_Source\PSoC4/pwm.c **** 
 867:.\Generated_Source\PSoC4/pwm.c **** #endif /* (pwm_UseOneCompareMode) */
 868:.\Generated_Source\PSoC4/pwm.c **** 
 869:.\Generated_Source\PSoC4/pwm.c **** 
 870:.\Generated_Source\PSoC4/pwm.c **** /*******************************************************************************
 871:.\Generated_Source\PSoC4/pwm.c **** * Function Name: pwm_ReadPeriod
 872:.\Generated_Source\PSoC4/pwm.c **** ********************************************************************************
 873:.\Generated_Source\PSoC4/pwm.c **** *
 874:.\Generated_Source\PSoC4/pwm.c **** * Summary:
 875:.\Generated_Source\PSoC4/pwm.c **** *  Reads the period value used by the PWM hardware.
 876:.\Generated_Source\PSoC4/pwm.c **** *
 877:.\Generated_Source\PSoC4/pwm.c **** * Parameters:
 878:.\Generated_Source\PSoC4/pwm.c **** *  None
 879:.\Generated_Source\PSoC4/pwm.c **** *
 880:.\Generated_Source\PSoC4/pwm.c **** * Return:
 881:.\Generated_Source\PSoC4/pwm.c **** *  uint8/16: Period value
 882:.\Generated_Source\PSoC4/pwm.c **** *
 883:.\Generated_Source\PSoC4/pwm.c **** *******************************************************************************/
 884:.\Generated_Source\PSoC4/pwm.c **** uint16 pwm_ReadPeriod(void) 
 885:.\Generated_Source\PSoC4/pwm.c **** {
 480              		.loc 1 885 0
 481              		.cfi_startproc
 886:.\Generated_Source\PSoC4/pwm.c ****     #if(pwm_UsingFixedFunction)
 887:.\Generated_Source\PSoC4/pwm.c ****         return ((uint16)CY_GET_REG16(pwm_PERIOD_LSB_PTR));
 888:.\Generated_Source\PSoC4/pwm.c ****     #else
 889:.\Generated_Source\PSoC4/pwm.c ****         return (CY_GET_REG16(pwm_PERIOD_LSB_PTR));
 482              		.loc 1 889 0
 483 0000 014B     		ldr	r3, .L48
 484 0002 1888     		ldrh	r0, [r3]
 485 0004 80B2     		uxth	r0, r0
 890:.\Generated_Source\PSoC4/pwm.c ****     #endif /* (pwm_UsingFixedFunction) */
 891:.\Generated_Source\PSoC4/pwm.c **** }
 486              		.loc 1 891 0
 487              		@ sp needed
 488 0006 7047     		bx	lr
 489              	.L49:
 490              		.align	2
 491              	.L48:
 492 0008 84100F40 		.word	1074729092
 493              		.cfi_endproc
 494              	.LFE17:
 495              		.size	pwm_ReadPeriod, .-pwm_ReadPeriod
 496              		.global	pwm_initVar
 497              		.bss
 498              		.set	.LANCHOR0,. + 0
 499              		.type	pwm_initVar, %object
 500              		.size	pwm_initVar, 1
 501              	pwm_initVar:
 502 0000 00       		.space	1
 503              		.text
 504              	.Letext0:
 505              		.file 2 ".\\Generated_Source\\PSoC4\\cytypes.h"
 506              		.file 3 ".\\Generated_Source\\PSoC4\\CyLib.h"
 507              		.section	.debug_info,"",%progbits
 508              	.Ldebug_info0:
 509 0000 49030000 		.4byte	0x349
ARM GAS  C:\Users\alvin\AppData\Local\Temp\ccg5AO67.s 			page 26


 510 0004 0400     		.2byte	0x4
 511 0006 00000000 		.4byte	.Ldebug_abbrev0
 512 000a 04       		.byte	0x4
 513 000b 01       		.uleb128 0x1
 514 000c 0D020000 		.4byte	.LASF40
 515 0010 01       		.byte	0x1
 516 0011 8A010000 		.4byte	.LASF41
 517 0015 1D000000 		.4byte	.LASF42
 518 0019 00000000 		.4byte	.Ldebug_ranges0+0
 519 001d 00000000 		.4byte	0
 520 0021 00000000 		.4byte	.Ldebug_line0
 521 0025 02       		.uleb128 0x2
 522 0026 01       		.byte	0x1
 523 0027 06       		.byte	0x6
 524 0028 F5020000 		.4byte	.LASF0
 525 002c 02       		.uleb128 0x2
 526 002d 01       		.byte	0x1
 527 002e 08       		.byte	0x8
 528 002f E3000000 		.4byte	.LASF1
 529 0033 02       		.uleb128 0x2
 530 0034 02       		.byte	0x2
 531 0035 05       		.byte	0x5
 532 0036 A4020000 		.4byte	.LASF2
 533 003a 02       		.uleb128 0x2
 534 003b 02       		.byte	0x2
 535 003c 07       		.byte	0x7
 536 003d 09030000 		.4byte	.LASF3
 537 0041 02       		.uleb128 0x2
 538 0042 04       		.byte	0x4
 539 0043 05       		.byte	0x5
 540 0044 DD020000 		.4byte	.LASF4
 541 0048 02       		.uleb128 0x2
 542 0049 04       		.byte	0x4
 543 004a 07       		.byte	0x7
 544 004b F6000000 		.4byte	.LASF5
 545 004f 02       		.uleb128 0x2
 546 0050 08       		.byte	0x8
 547 0051 05       		.byte	0x5
 548 0052 E1010000 		.4byte	.LASF6
 549 0056 02       		.uleb128 0x2
 550 0057 08       		.byte	0x8
 551 0058 07       		.byte	0x7
 552 0059 BB000000 		.4byte	.LASF7
 553 005d 03       		.uleb128 0x3
 554 005e 04       		.byte	0x4
 555 005f 05       		.byte	0x5
 556 0060 696E7400 		.ascii	"int\000"
 557 0064 02       		.uleb128 0x2
 558 0065 04       		.byte	0x4
 559 0066 07       		.byte	0x7
 560 0067 60010000 		.4byte	.LASF8
 561 006b 04       		.uleb128 0x4
 562 006c 14010000 		.4byte	.LASF9
 563 0070 02       		.byte	0x2
 564 0071 9801     		.2byte	0x198
 565 0073 2C000000 		.4byte	0x2c
 566 0077 04       		.uleb128 0x4
ARM GAS  C:\Users\alvin\AppData\Local\Temp\ccg5AO67.s 			page 27


 567 0078 42010000 		.4byte	.LASF10
 568 007c 02       		.byte	0x2
 569 007d 9901     		.2byte	0x199
 570 007f 3A000000 		.4byte	0x3a
 571 0083 02       		.uleb128 0x2
 572 0084 04       		.byte	0x4
 573 0085 04       		.byte	0x4
 574 0086 AD000000 		.4byte	.LASF11
 575 008a 02       		.uleb128 0x2
 576 008b 08       		.byte	0x8
 577 008c 04       		.byte	0x4
 578 008d 3B010000 		.4byte	.LASF12
 579 0091 02       		.uleb128 0x2
 580 0092 01       		.byte	0x1
 581 0093 08       		.byte	0x8
 582 0094 E6020000 		.4byte	.LASF13
 583 0098 04       		.uleb128 0x4
 584 0099 F1000000 		.4byte	.LASF14
 585 009d 02       		.byte	0x2
 586 009e 4202     		.2byte	0x242
 587 00a0 A4000000 		.4byte	0xa4
 588 00a4 05       		.uleb128 0x5
 589 00a5 6B000000 		.4byte	0x6b
 590 00a9 04       		.uleb128 0x4
 591 00aa 00000000 		.4byte	.LASF15
 592 00ae 02       		.byte	0x2
 593 00af 4302     		.2byte	0x243
 594 00b1 B5000000 		.4byte	0xb5
 595 00b5 05       		.uleb128 0x5
 596 00b6 77000000 		.4byte	0x77
 597 00ba 02       		.uleb128 0x2
 598 00bb 04       		.byte	0x4
 599 00bc 07       		.byte	0x7
 600 00bd D8010000 		.4byte	.LASF16
 601 00c1 06       		.uleb128 0x6
 602 00c2 AE020000 		.4byte	.LASF17
 603 00c6 01       		.byte	0x1
 604 00c7 C7       		.byte	0xc7
 605 00c8 00000000 		.4byte	.LFB4
 606 00cc 10000000 		.4byte	.LFE4-.LFB4
 607 00d0 01       		.uleb128 0x1
 608 00d1 9C       		.byte	0x9c
 609 00d2 06       		.uleb128 0x6
 610 00d3 9B020000 		.4byte	.LASF18
 611 00d7 01       		.byte	0x1
 612 00d8 E9       		.byte	0xe9
 613 00d9 00000000 		.4byte	.LFB5
 614 00dd 10000000 		.4byte	.LFE5-.LFB5
 615 00e1 01       		.uleb128 0x1
 616 00e2 9C       		.byte	0x9c
 617 00e3 07       		.uleb128 0x7
 618 00e4 A9010000 		.4byte	.LASF19
 619 00e8 01       		.byte	0x1
 620 00e9 9301     		.2byte	0x193
 621 00eb 00000000 		.4byte	.LFB6
 622 00ef 0C000000 		.4byte	.LFE6-.LFB6
 623 00f3 01       		.uleb128 0x1
ARM GAS  C:\Users\alvin\AppData\Local\Temp\ccg5AO67.s 			page 28


 624 00f4 9C       		.byte	0x9c
 625 00f5 08010000 		.4byte	0x108
 626 00f9 08       		.uleb128 0x8
 627 00fa B3000000 		.4byte	.LASF21
 628 00fe 01       		.byte	0x1
 629 00ff 9301     		.2byte	0x193
 630 0101 77000000 		.4byte	0x77
 631 0105 01       		.uleb128 0x1
 632 0106 50       		.byte	0x50
 633 0107 00       		.byte	0
 634 0108 09       		.uleb128 0x9
 635 0109 22010000 		.4byte	.LASF27
 636 010d 01       		.byte	0x1
 637 010e A901     		.2byte	0x1a9
 638 0110 77000000 		.4byte	0x77
 639 0114 00000000 		.4byte	.LFB7
 640 0118 14000000 		.4byte	.LFE7-.LFB7
 641 011c 01       		.uleb128 0x1
 642 011d 9C       		.byte	0x9c
 643 011e 07       		.uleb128 0x7
 644 011f EF010000 		.4byte	.LASF20
 645 0123 01       		.byte	0x1
 646 0124 E201     		.2byte	0x1e2
 647 0126 00000000 		.4byte	.LFB9
 648 012a 0C000000 		.4byte	.LFE9-.LFB9
 649 012e 01       		.uleb128 0x1
 650 012f 9C       		.byte	0x9c
 651 0130 43010000 		.4byte	0x143
 652 0134 08       		.uleb128 0x8
 653 0135 16000000 		.4byte	.LASF22
 654 0139 01       		.byte	0x1
 655 013a E201     		.2byte	0x1e2
 656 013c 77000000 		.4byte	0x77
 657 0140 01       		.uleb128 0x1
 658 0141 50       		.byte	0x50
 659 0142 00       		.byte	0
 660 0143 07       		.uleb128 0x7
 661 0144 D2000000 		.4byte	.LASF23
 662 0148 01       		.byte	0x1
 663 0149 0402     		.2byte	0x204
 664 014b 00000000 		.4byte	.LFB10
 665 014f 0C000000 		.4byte	.LFE10-.LFB10
 666 0153 01       		.uleb128 0x1
 667 0154 9C       		.byte	0x9c
 668 0155 68010000 		.4byte	0x168
 669 0159 08       		.uleb128 0x8
 670 015a 01030000 		.4byte	.LASF24
 671 015e 01       		.byte	0x1
 672 015f 0402     		.2byte	0x204
 673 0161 77000000 		.4byte	0x77
 674 0165 01       		.uleb128 0x1
 675 0166 50       		.byte	0x50
 676 0167 00       		.byte	0
 677 0168 07       		.uleb128 0x7
 678 0169 C8020000 		.4byte	.LASF25
 679 016d 01       		.byte	0x1
 680 016e AC02     		.2byte	0x2ac
ARM GAS  C:\Users\alvin\AppData\Local\Temp\ccg5AO67.s 			page 29


 681 0170 00000000 		.4byte	.LFB11
 682 0174 0C000000 		.4byte	.LFE11-.LFB11
 683 0178 01       		.uleb128 0x1
 684 0179 9C       		.byte	0x9c
 685 017a 8D010000 		.4byte	0x18d
 686 017e 08       		.uleb128 0x8
 687 017f FF010000 		.4byte	.LASF26
 688 0183 01       		.byte	0x1
 689 0184 AC02     		.2byte	0x2ac
 690 0186 6B000000 		.4byte	0x6b
 691 018a 01       		.uleb128 0x1
 692 018b 50       		.byte	0x50
 693 018c 00       		.byte	0
 694 018d 09       		.uleb128 0x9
 695 018e 6E000000 		.4byte	.LASF28
 696 0192 01       		.byte	0x1
 697 0193 C702     		.2byte	0x2c7
 698 0195 6B000000 		.4byte	0x6b
 699 0199 00000000 		.4byte	.LFB12
 700 019d 0C000000 		.4byte	.LFE12-.LFB12
 701 01a1 01       		.uleb128 0x1
 702 01a2 9C       		.byte	0x9c
 703 01a3 0A       		.uleb128 0xa
 704 01a4 85000000 		.4byte	.LASF43
 705 01a8 01       		.byte	0x1
 706 01a9 E102     		.2byte	0x2e1
 707 01ab 6B000000 		.4byte	0x6b
 708 01af 00000000 		.4byte	.LFB13
 709 01b3 0C000000 		.4byte	.LFE13-.LFB13
 710 01b7 01       		.uleb128 0x1
 711 01b8 9C       		.byte	0x9c
 712 01b9 CC010000 		.4byte	0x1cc
 713 01bd 0B       		.uleb128 0xb
 714 01be 83010000 		.4byte	.LASF34
 715 01c2 01       		.byte	0x1
 716 01c3 E302     		.2byte	0x2e3
 717 01c5 6B000000 		.4byte	0x6b
 718 01c9 01       		.uleb128 0x1
 719 01ca 50       		.byte	0x50
 720 01cb 00       		.byte	0
 721 01cc 07       		.uleb128 0x7
 722 01cd BA010000 		.4byte	.LASF29
 723 01d1 01       		.byte	0x1
 724 01d2 FD02     		.2byte	0x2fd
 725 01d4 00000000 		.4byte	.LFB14
 726 01d8 0C000000 		.4byte	.LFE14-.LFB14
 727 01dc 01       		.uleb128 0x1
 728 01dd 9C       		.byte	0x9c
 729 01de F1010000 		.4byte	0x1f1
 730 01e2 08       		.uleb128 0x8
 731 01e3 1A010000 		.4byte	.LASF30
 732 01e7 01       		.byte	0x1
 733 01e8 FD02     		.2byte	0x2fd
 734 01ea 6B000000 		.4byte	0x6b
 735 01ee 01       		.uleb128 0x1
 736 01ef 50       		.byte	0x50
 737 01f0 00       		.byte	0
ARM GAS  C:\Users\alvin\AppData\Local\Temp\ccg5AO67.s 			page 30


 738 01f1 09       		.uleb128 0x9
 739 01f2 9D000000 		.4byte	.LASF31
 740 01f6 01       		.byte	0x1
 741 01f7 1603     		.2byte	0x316
 742 01f9 77000000 		.4byte	0x77
 743 01fd 00000000 		.4byte	.LFB15
 744 0201 0C000000 		.4byte	.LFE15-.LFB15
 745 0205 01       		.uleb128 0x1
 746 0206 9C       		.byte	0x9c
 747 0207 07       		.uleb128 0x7
 748 0208 60000000 		.4byte	.LASF32
 749 020c 01       		.byte	0x1
 750 020d C501     		.2byte	0x1c5
 751 020f 00000000 		.4byte	.LFB8
 752 0213 12000000 		.4byte	.LFE8-.LFB8
 753 0217 01       		.uleb128 0x1
 754 0218 9C       		.byte	0x9c
 755 0219 30020000 		.4byte	0x230
 756 021d 0C       		.uleb128 0xc
 757 021e 08000000 		.4byte	.LVL6
 758 0222 F1010000 		.4byte	0x1f1
 759 0226 0C       		.uleb128 0xc
 760 0227 0C000000 		.4byte	.LVL7
 761 022b 8D010000 		.4byte	0x18d
 762 022f 00       		.byte	0
 763 0230 0D       		.uleb128 0xd
 764 0231 32010000 		.4byte	.LASF33
 765 0235 01       		.byte	0x1
 766 0236 54       		.byte	0x54
 767 0237 00000000 		.4byte	.LFB3
 768 023b 68000000 		.4byte	.LFE3-.LFB3
 769 023f 01       		.uleb128 0x1
 770 0240 9C       		.byte	0x9c
 771 0241 CF020000 		.4byte	0x2cf
 772 0245 0E       		.uleb128 0xe
 773 0246 D3010000 		.4byte	.LASF35
 774 024a 01       		.byte	0x1
 775 024b 57       		.byte	0x57
 776 024c 6B000000 		.4byte	0x6b
 777 0250 00000000 		.4byte	.LLST0
 778 0254 0E       		.uleb128 0xe
 779 0255 1C030000 		.4byte	.LASF36
 780 0259 01       		.byte	0x1
 781 025a 5D       		.byte	0x5d
 782 025b 6B000000 		.4byte	0x6b
 783 025f 13000000 		.4byte	.LLST1
 784 0263 0F       		.uleb128 0xf
 785 0264 2E000000 		.4byte	.LVL10
 786 0268 E3000000 		.4byte	0xe3
 787 026c 77020000 		.4byte	0x277
 788 0270 10       		.uleb128 0x10
 789 0271 01       		.uleb128 0x1
 790 0272 50       		.byte	0x50
 791 0273 02       		.uleb128 0x2
 792 0274 75       		.byte	0x75
 793 0275 00       		.sleb128 0
 794 0276 00       		.byte	0
ARM GAS  C:\Users\alvin\AppData\Local\Temp\ccg5AO67.s 			page 31


 795 0277 0F       		.uleb128 0xf
 796 0278 34000000 		.4byte	.LVL11
 797 027c 1E010000 		.4byte	0x11e
 798 0280 8B020000 		.4byte	0x28b
 799 0284 10       		.uleb128 0x10
 800 0285 01       		.uleb128 0x1
 801 0286 50       		.byte	0x50
 802 0287 02       		.uleb128 0x2
 803 0288 75       		.byte	0x75
 804 0289 00       		.sleb128 0
 805 028a 00       		.byte	0
 806 028b 0F       		.uleb128 0xf
 807 028c 3C000000 		.4byte	.LVL12
 808 0290 43010000 		.4byte	0x143
 809 0294 A0020000 		.4byte	0x2a0
 810 0298 10       		.uleb128 0x10
 811 0299 01       		.uleb128 0x1
 812 029a 50       		.byte	0x50
 813 029b 03       		.uleb128 0x3
 814 029c 0A       		.byte	0xa
 815 029d 007D     		.2byte	0x7d00
 816 029f 00       		.byte	0
 817 02a0 0F       		.uleb128 0xf
 818 02a1 42000000 		.4byte	.LVL13
 819 02a5 68010000 		.4byte	0x168
 820 02a9 B3020000 		.4byte	0x2b3
 821 02ad 10       		.uleb128 0x10
 822 02ae 01       		.uleb128 0x1
 823 02af 50       		.byte	0x50
 824 02b0 01       		.uleb128 0x1
 825 02b1 30       		.byte	0x30
 826 02b2 00       		.byte	0
 827 02b3 0C       		.uleb128 0xc
 828 02b4 46000000 		.4byte	.LVL14
 829 02b8 34030000 		.4byte	0x334
 830 02bc 0C       		.uleb128 0xc
 831 02bd 52000000 		.4byte	.LVL15
 832 02c1 3F030000 		.4byte	0x33f
 833 02c5 0C       		.uleb128 0xc
 834 02c6 56000000 		.4byte	.LVL16
 835 02ca 07020000 		.4byte	0x207
 836 02ce 00       		.byte	0
 837 02cf 0D       		.uleb128 0xd
 838 02d0 EB020000 		.4byte	.LASF37
 839 02d4 01       		.byte	0x1
 840 02d5 37       		.byte	0x37
 841 02d6 00000000 		.4byte	.LFB2
 842 02da 20000000 		.4byte	.LFE2-.LFB2
 843 02de 01       		.uleb128 0x1
 844 02df 9C       		.byte	0x9c
 845 02e0 F7020000 		.4byte	0x2f7
 846 02e4 0C       		.uleb128 0xc
 847 02e5 0E000000 		.4byte	.LVL17
 848 02e9 30020000 		.4byte	0x230
 849 02ed 0C       		.uleb128 0xc
 850 02ee 18000000 		.4byte	.LVL18
 851 02f2 C1000000 		.4byte	0xc1
ARM GAS  C:\Users\alvin\AppData\Local\Temp\ccg5AO67.s 			page 32


 852 02f6 00       		.byte	0
 853 02f7 09       		.uleb128 0x9
 854 02f8 06000000 		.4byte	.LASF38
 855 02fc 01       		.byte	0x1
 856 02fd 3003     		.2byte	0x330
 857 02ff 77000000 		.4byte	0x77
 858 0303 00000000 		.4byte	.LFB16
 859 0307 0C000000 		.4byte	.LFE16-.LFB16
 860 030b 01       		.uleb128 0x1
 861 030c 9C       		.byte	0x9c
 862 030d 09       		.uleb128 0x9
 863 030e B9020000 		.4byte	.LASF39
 864 0312 01       		.byte	0x1
 865 0313 7403     		.2byte	0x374
 866 0315 77000000 		.4byte	0x77
 867 0319 00000000 		.4byte	.LFB17
 868 031d 0C000000 		.4byte	.LFE17-.LFB17
 869 0321 01       		.uleb128 0x1
 870 0322 9C       		.byte	0x9c
 871 0323 11       		.uleb128 0x11
 872 0324 08010000 		.4byte	.LASF44
 873 0328 01       		.byte	0x1
 874 0329 20       		.byte	0x20
 875 032a 6B000000 		.4byte	0x6b
 876 032e 05       		.uleb128 0x5
 877 032f 03       		.byte	0x3
 878 0330 00000000 		.4byte	pwm_initVar
 879 0334 12       		.uleb128 0x12
 880 0335 49010000 		.4byte	.LASF45
 881 0339 03       		.byte	0x3
 882 033a E3       		.byte	0xe3
 883 033b 6B000000 		.4byte	0x6b
 884 033f 13       		.uleb128 0x13
 885 0340 6D010000 		.4byte	.LASF46
 886 0344 03       		.byte	0x3
 887 0345 E4       		.byte	0xe4
 888 0346 14       		.uleb128 0x14
 889 0347 6B000000 		.4byte	0x6b
 890 034b 00       		.byte	0
 891 034c 00       		.byte	0
 892              		.section	.debug_abbrev,"",%progbits
 893              	.Ldebug_abbrev0:
 894 0000 01       		.uleb128 0x1
 895 0001 11       		.uleb128 0x11
 896 0002 01       		.byte	0x1
 897 0003 25       		.uleb128 0x25
 898 0004 0E       		.uleb128 0xe
 899 0005 13       		.uleb128 0x13
 900 0006 0B       		.uleb128 0xb
 901 0007 03       		.uleb128 0x3
 902 0008 0E       		.uleb128 0xe
 903 0009 1B       		.uleb128 0x1b
 904 000a 0E       		.uleb128 0xe
 905 000b 55       		.uleb128 0x55
 906 000c 17       		.uleb128 0x17
 907 000d 11       		.uleb128 0x11
 908 000e 01       		.uleb128 0x1
ARM GAS  C:\Users\alvin\AppData\Local\Temp\ccg5AO67.s 			page 33


 909 000f 10       		.uleb128 0x10
 910 0010 17       		.uleb128 0x17
 911 0011 00       		.byte	0
 912 0012 00       		.byte	0
 913 0013 02       		.uleb128 0x2
 914 0014 24       		.uleb128 0x24
 915 0015 00       		.byte	0
 916 0016 0B       		.uleb128 0xb
 917 0017 0B       		.uleb128 0xb
 918 0018 3E       		.uleb128 0x3e
 919 0019 0B       		.uleb128 0xb
 920 001a 03       		.uleb128 0x3
 921 001b 0E       		.uleb128 0xe
 922 001c 00       		.byte	0
 923 001d 00       		.byte	0
 924 001e 03       		.uleb128 0x3
 925 001f 24       		.uleb128 0x24
 926 0020 00       		.byte	0
 927 0021 0B       		.uleb128 0xb
 928 0022 0B       		.uleb128 0xb
 929 0023 3E       		.uleb128 0x3e
 930 0024 0B       		.uleb128 0xb
 931 0025 03       		.uleb128 0x3
 932 0026 08       		.uleb128 0x8
 933 0027 00       		.byte	0
 934 0028 00       		.byte	0
 935 0029 04       		.uleb128 0x4
 936 002a 16       		.uleb128 0x16
 937 002b 00       		.byte	0
 938 002c 03       		.uleb128 0x3
 939 002d 0E       		.uleb128 0xe
 940 002e 3A       		.uleb128 0x3a
 941 002f 0B       		.uleb128 0xb
 942 0030 3B       		.uleb128 0x3b
 943 0031 05       		.uleb128 0x5
 944 0032 49       		.uleb128 0x49
 945 0033 13       		.uleb128 0x13
 946 0034 00       		.byte	0
 947 0035 00       		.byte	0
 948 0036 05       		.uleb128 0x5
 949 0037 35       		.uleb128 0x35
 950 0038 00       		.byte	0
 951 0039 49       		.uleb128 0x49
 952 003a 13       		.uleb128 0x13
 953 003b 00       		.byte	0
 954 003c 00       		.byte	0
 955 003d 06       		.uleb128 0x6
 956 003e 2E       		.uleb128 0x2e
 957 003f 00       		.byte	0
 958 0040 3F       		.uleb128 0x3f
 959 0041 19       		.uleb128 0x19
 960 0042 03       		.uleb128 0x3
 961 0043 0E       		.uleb128 0xe
 962 0044 3A       		.uleb128 0x3a
 963 0045 0B       		.uleb128 0xb
 964 0046 3B       		.uleb128 0x3b
 965 0047 0B       		.uleb128 0xb
ARM GAS  C:\Users\alvin\AppData\Local\Temp\ccg5AO67.s 			page 34


 966 0048 27       		.uleb128 0x27
 967 0049 19       		.uleb128 0x19
 968 004a 11       		.uleb128 0x11
 969 004b 01       		.uleb128 0x1
 970 004c 12       		.uleb128 0x12
 971 004d 06       		.uleb128 0x6
 972 004e 40       		.uleb128 0x40
 973 004f 18       		.uleb128 0x18
 974 0050 9742     		.uleb128 0x2117
 975 0052 19       		.uleb128 0x19
 976 0053 00       		.byte	0
 977 0054 00       		.byte	0
 978 0055 07       		.uleb128 0x7
 979 0056 2E       		.uleb128 0x2e
 980 0057 01       		.byte	0x1
 981 0058 3F       		.uleb128 0x3f
 982 0059 19       		.uleb128 0x19
 983 005a 03       		.uleb128 0x3
 984 005b 0E       		.uleb128 0xe
 985 005c 3A       		.uleb128 0x3a
 986 005d 0B       		.uleb128 0xb
 987 005e 3B       		.uleb128 0x3b
 988 005f 05       		.uleb128 0x5
 989 0060 27       		.uleb128 0x27
 990 0061 19       		.uleb128 0x19
 991 0062 11       		.uleb128 0x11
 992 0063 01       		.uleb128 0x1
 993 0064 12       		.uleb128 0x12
 994 0065 06       		.uleb128 0x6
 995 0066 40       		.uleb128 0x40
 996 0067 18       		.uleb128 0x18
 997 0068 9742     		.uleb128 0x2117
 998 006a 19       		.uleb128 0x19
 999 006b 01       		.uleb128 0x1
 1000 006c 13       		.uleb128 0x13
 1001 006d 00       		.byte	0
 1002 006e 00       		.byte	0
 1003 006f 08       		.uleb128 0x8
 1004 0070 05       		.uleb128 0x5
 1005 0071 00       		.byte	0
 1006 0072 03       		.uleb128 0x3
 1007 0073 0E       		.uleb128 0xe
 1008 0074 3A       		.uleb128 0x3a
 1009 0075 0B       		.uleb128 0xb
 1010 0076 3B       		.uleb128 0x3b
 1011 0077 05       		.uleb128 0x5
 1012 0078 49       		.uleb128 0x49
 1013 0079 13       		.uleb128 0x13
 1014 007a 02       		.uleb128 0x2
 1015 007b 18       		.uleb128 0x18
 1016 007c 00       		.byte	0
 1017 007d 00       		.byte	0
 1018 007e 09       		.uleb128 0x9
 1019 007f 2E       		.uleb128 0x2e
 1020 0080 00       		.byte	0
 1021 0081 3F       		.uleb128 0x3f
 1022 0082 19       		.uleb128 0x19
ARM GAS  C:\Users\alvin\AppData\Local\Temp\ccg5AO67.s 			page 35


 1023 0083 03       		.uleb128 0x3
 1024 0084 0E       		.uleb128 0xe
 1025 0085 3A       		.uleb128 0x3a
 1026 0086 0B       		.uleb128 0xb
 1027 0087 3B       		.uleb128 0x3b
 1028 0088 05       		.uleb128 0x5
 1029 0089 27       		.uleb128 0x27
 1030 008a 19       		.uleb128 0x19
 1031 008b 49       		.uleb128 0x49
 1032 008c 13       		.uleb128 0x13
 1033 008d 11       		.uleb128 0x11
 1034 008e 01       		.uleb128 0x1
 1035 008f 12       		.uleb128 0x12
 1036 0090 06       		.uleb128 0x6
 1037 0091 40       		.uleb128 0x40
 1038 0092 18       		.uleb128 0x18
 1039 0093 9742     		.uleb128 0x2117
 1040 0095 19       		.uleb128 0x19
 1041 0096 00       		.byte	0
 1042 0097 00       		.byte	0
 1043 0098 0A       		.uleb128 0xa
 1044 0099 2E       		.uleb128 0x2e
 1045 009a 01       		.byte	0x1
 1046 009b 3F       		.uleb128 0x3f
 1047 009c 19       		.uleb128 0x19
 1048 009d 03       		.uleb128 0x3
 1049 009e 0E       		.uleb128 0xe
 1050 009f 3A       		.uleb128 0x3a
 1051 00a0 0B       		.uleb128 0xb
 1052 00a1 3B       		.uleb128 0x3b
 1053 00a2 05       		.uleb128 0x5
 1054 00a3 27       		.uleb128 0x27
 1055 00a4 19       		.uleb128 0x19
 1056 00a5 49       		.uleb128 0x49
 1057 00a6 13       		.uleb128 0x13
 1058 00a7 11       		.uleb128 0x11
 1059 00a8 01       		.uleb128 0x1
 1060 00a9 12       		.uleb128 0x12
 1061 00aa 06       		.uleb128 0x6
 1062 00ab 40       		.uleb128 0x40
 1063 00ac 18       		.uleb128 0x18
 1064 00ad 9742     		.uleb128 0x2117
 1065 00af 19       		.uleb128 0x19
 1066 00b0 01       		.uleb128 0x1
 1067 00b1 13       		.uleb128 0x13
 1068 00b2 00       		.byte	0
 1069 00b3 00       		.byte	0
 1070 00b4 0B       		.uleb128 0xb
 1071 00b5 34       		.uleb128 0x34
 1072 00b6 00       		.byte	0
 1073 00b7 03       		.uleb128 0x3
 1074 00b8 0E       		.uleb128 0xe
 1075 00b9 3A       		.uleb128 0x3a
 1076 00ba 0B       		.uleb128 0xb
 1077 00bb 3B       		.uleb128 0x3b
 1078 00bc 05       		.uleb128 0x5
 1079 00bd 49       		.uleb128 0x49
ARM GAS  C:\Users\alvin\AppData\Local\Temp\ccg5AO67.s 			page 36


 1080 00be 13       		.uleb128 0x13
 1081 00bf 02       		.uleb128 0x2
 1082 00c0 18       		.uleb128 0x18
 1083 00c1 00       		.byte	0
 1084 00c2 00       		.byte	0
 1085 00c3 0C       		.uleb128 0xc
 1086 00c4 898201   		.uleb128 0x4109
 1087 00c7 00       		.byte	0
 1088 00c8 11       		.uleb128 0x11
 1089 00c9 01       		.uleb128 0x1
 1090 00ca 31       		.uleb128 0x31
 1091 00cb 13       		.uleb128 0x13
 1092 00cc 00       		.byte	0
 1093 00cd 00       		.byte	0
 1094 00ce 0D       		.uleb128 0xd
 1095 00cf 2E       		.uleb128 0x2e
 1096 00d0 01       		.byte	0x1
 1097 00d1 3F       		.uleb128 0x3f
 1098 00d2 19       		.uleb128 0x19
 1099 00d3 03       		.uleb128 0x3
 1100 00d4 0E       		.uleb128 0xe
 1101 00d5 3A       		.uleb128 0x3a
 1102 00d6 0B       		.uleb128 0xb
 1103 00d7 3B       		.uleb128 0x3b
 1104 00d8 0B       		.uleb128 0xb
 1105 00d9 27       		.uleb128 0x27
 1106 00da 19       		.uleb128 0x19
 1107 00db 11       		.uleb128 0x11
 1108 00dc 01       		.uleb128 0x1
 1109 00dd 12       		.uleb128 0x12
 1110 00de 06       		.uleb128 0x6
 1111 00df 40       		.uleb128 0x40
 1112 00e0 18       		.uleb128 0x18
 1113 00e1 9742     		.uleb128 0x2117
 1114 00e3 19       		.uleb128 0x19
 1115 00e4 01       		.uleb128 0x1
 1116 00e5 13       		.uleb128 0x13
 1117 00e6 00       		.byte	0
 1118 00e7 00       		.byte	0
 1119 00e8 0E       		.uleb128 0xe
 1120 00e9 34       		.uleb128 0x34
 1121 00ea 00       		.byte	0
 1122 00eb 03       		.uleb128 0x3
 1123 00ec 0E       		.uleb128 0xe
 1124 00ed 3A       		.uleb128 0x3a
 1125 00ee 0B       		.uleb128 0xb
 1126 00ef 3B       		.uleb128 0x3b
 1127 00f0 0B       		.uleb128 0xb
 1128 00f1 49       		.uleb128 0x49
 1129 00f2 13       		.uleb128 0x13
 1130 00f3 02       		.uleb128 0x2
 1131 00f4 17       		.uleb128 0x17
 1132 00f5 00       		.byte	0
 1133 00f6 00       		.byte	0
 1134 00f7 0F       		.uleb128 0xf
 1135 00f8 898201   		.uleb128 0x4109
 1136 00fb 01       		.byte	0x1
ARM GAS  C:\Users\alvin\AppData\Local\Temp\ccg5AO67.s 			page 37


 1137 00fc 11       		.uleb128 0x11
 1138 00fd 01       		.uleb128 0x1
 1139 00fe 31       		.uleb128 0x31
 1140 00ff 13       		.uleb128 0x13
 1141 0100 01       		.uleb128 0x1
 1142 0101 13       		.uleb128 0x13
 1143 0102 00       		.byte	0
 1144 0103 00       		.byte	0
 1145 0104 10       		.uleb128 0x10
 1146 0105 8A8201   		.uleb128 0x410a
 1147 0108 00       		.byte	0
 1148 0109 02       		.uleb128 0x2
 1149 010a 18       		.uleb128 0x18
 1150 010b 9142     		.uleb128 0x2111
 1151 010d 18       		.uleb128 0x18
 1152 010e 00       		.byte	0
 1153 010f 00       		.byte	0
 1154 0110 11       		.uleb128 0x11
 1155 0111 34       		.uleb128 0x34
 1156 0112 00       		.byte	0
 1157 0113 03       		.uleb128 0x3
 1158 0114 0E       		.uleb128 0xe
 1159 0115 3A       		.uleb128 0x3a
 1160 0116 0B       		.uleb128 0xb
 1161 0117 3B       		.uleb128 0x3b
 1162 0118 0B       		.uleb128 0xb
 1163 0119 49       		.uleb128 0x49
 1164 011a 13       		.uleb128 0x13
 1165 011b 3F       		.uleb128 0x3f
 1166 011c 19       		.uleb128 0x19
 1167 011d 02       		.uleb128 0x2
 1168 011e 18       		.uleb128 0x18
 1169 011f 00       		.byte	0
 1170 0120 00       		.byte	0
 1171 0121 12       		.uleb128 0x12
 1172 0122 2E       		.uleb128 0x2e
 1173 0123 00       		.byte	0
 1174 0124 3F       		.uleb128 0x3f
 1175 0125 19       		.uleb128 0x19
 1176 0126 03       		.uleb128 0x3
 1177 0127 0E       		.uleb128 0xe
 1178 0128 3A       		.uleb128 0x3a
 1179 0129 0B       		.uleb128 0xb
 1180 012a 3B       		.uleb128 0x3b
 1181 012b 0B       		.uleb128 0xb
 1182 012c 27       		.uleb128 0x27
 1183 012d 19       		.uleb128 0x19
 1184 012e 49       		.uleb128 0x49
 1185 012f 13       		.uleb128 0x13
 1186 0130 3C       		.uleb128 0x3c
 1187 0131 19       		.uleb128 0x19
 1188 0132 00       		.byte	0
 1189 0133 00       		.byte	0
 1190 0134 13       		.uleb128 0x13
 1191 0135 2E       		.uleb128 0x2e
 1192 0136 01       		.byte	0x1
 1193 0137 3F       		.uleb128 0x3f
ARM GAS  C:\Users\alvin\AppData\Local\Temp\ccg5AO67.s 			page 38


 1194 0138 19       		.uleb128 0x19
 1195 0139 03       		.uleb128 0x3
 1196 013a 0E       		.uleb128 0xe
 1197 013b 3A       		.uleb128 0x3a
 1198 013c 0B       		.uleb128 0xb
 1199 013d 3B       		.uleb128 0x3b
 1200 013e 0B       		.uleb128 0xb
 1201 013f 27       		.uleb128 0x27
 1202 0140 19       		.uleb128 0x19
 1203 0141 3C       		.uleb128 0x3c
 1204 0142 19       		.uleb128 0x19
 1205 0143 00       		.byte	0
 1206 0144 00       		.byte	0
 1207 0145 14       		.uleb128 0x14
 1208 0146 05       		.uleb128 0x5
 1209 0147 00       		.byte	0
 1210 0148 49       		.uleb128 0x49
 1211 0149 13       		.uleb128 0x13
 1212 014a 00       		.byte	0
 1213 014b 00       		.byte	0
 1214 014c 00       		.byte	0
 1215              		.section	.debug_loc,"",%progbits
 1216              	.Ldebug_loc0:
 1217              	.LLST0:
 1218 0000 0A000000 		.4byte	.LVL8
 1219 0004 0E000000 		.4byte	.LVL9
 1220 0008 0100     		.2byte	0x1
 1221 000a 53       		.byte	0x53
 1222 000b 00000000 		.4byte	0
 1223 000f 00000000 		.4byte	0
 1224              	.LLST1:
 1225 0013 46000000 		.4byte	.LVL14
 1226 0017 51000000 		.4byte	.LVL15-1
 1227 001b 0100     		.2byte	0x1
 1228 001d 50       		.byte	0x50
 1229 001e 00000000 		.4byte	0
 1230 0022 00000000 		.4byte	0
 1231              		.section	.debug_aranges,"",%progbits
 1232 0000 94000000 		.4byte	0x94
 1233 0004 0200     		.2byte	0x2
 1234 0006 00000000 		.4byte	.Ldebug_info0
 1235 000a 04       		.byte	0x4
 1236 000b 00       		.byte	0
 1237 000c 0000     		.2byte	0
 1238 000e 0000     		.2byte	0
 1239 0010 00000000 		.4byte	.LFB4
 1240 0014 10000000 		.4byte	.LFE4-.LFB4
 1241 0018 00000000 		.4byte	.LFB5
 1242 001c 10000000 		.4byte	.LFE5-.LFB5
 1243 0020 00000000 		.4byte	.LFB6
 1244 0024 0C000000 		.4byte	.LFE6-.LFB6
 1245 0028 00000000 		.4byte	.LFB7
 1246 002c 14000000 		.4byte	.LFE7-.LFB7
 1247 0030 00000000 		.4byte	.LFB9
 1248 0034 0C000000 		.4byte	.LFE9-.LFB9
 1249 0038 00000000 		.4byte	.LFB10
 1250 003c 0C000000 		.4byte	.LFE10-.LFB10
ARM GAS  C:\Users\alvin\AppData\Local\Temp\ccg5AO67.s 			page 39


 1251 0040 00000000 		.4byte	.LFB11
 1252 0044 0C000000 		.4byte	.LFE11-.LFB11
 1253 0048 00000000 		.4byte	.LFB12
 1254 004c 0C000000 		.4byte	.LFE12-.LFB12
 1255 0050 00000000 		.4byte	.LFB13
 1256 0054 0C000000 		.4byte	.LFE13-.LFB13
 1257 0058 00000000 		.4byte	.LFB14
 1258 005c 0C000000 		.4byte	.LFE14-.LFB14
 1259 0060 00000000 		.4byte	.LFB15
 1260 0064 0C000000 		.4byte	.LFE15-.LFB15
 1261 0068 00000000 		.4byte	.LFB8
 1262 006c 12000000 		.4byte	.LFE8-.LFB8
 1263 0070 00000000 		.4byte	.LFB3
 1264 0074 68000000 		.4byte	.LFE3-.LFB3
 1265 0078 00000000 		.4byte	.LFB2
 1266 007c 20000000 		.4byte	.LFE2-.LFB2
 1267 0080 00000000 		.4byte	.LFB16
 1268 0084 0C000000 		.4byte	.LFE16-.LFB16
 1269 0088 00000000 		.4byte	.LFB17
 1270 008c 0C000000 		.4byte	.LFE17-.LFB17
 1271 0090 00000000 		.4byte	0
 1272 0094 00000000 		.4byte	0
 1273              		.section	.debug_ranges,"",%progbits
 1274              	.Ldebug_ranges0:
 1275 0000 00000000 		.4byte	.LFB4
 1276 0004 10000000 		.4byte	.LFE4
 1277 0008 00000000 		.4byte	.LFB5
 1278 000c 10000000 		.4byte	.LFE5
 1279 0010 00000000 		.4byte	.LFB6
 1280 0014 0C000000 		.4byte	.LFE6
 1281 0018 00000000 		.4byte	.LFB7
 1282 001c 14000000 		.4byte	.LFE7
 1283 0020 00000000 		.4byte	.LFB9
 1284 0024 0C000000 		.4byte	.LFE9
 1285 0028 00000000 		.4byte	.LFB10
 1286 002c 0C000000 		.4byte	.LFE10
 1287 0030 00000000 		.4byte	.LFB11
 1288 0034 0C000000 		.4byte	.LFE11
 1289 0038 00000000 		.4byte	.LFB12
 1290 003c 0C000000 		.4byte	.LFE12
 1291 0040 00000000 		.4byte	.LFB13
 1292 0044 0C000000 		.4byte	.LFE13
 1293 0048 00000000 		.4byte	.LFB14
 1294 004c 0C000000 		.4byte	.LFE14
 1295 0050 00000000 		.4byte	.LFB15
 1296 0054 0C000000 		.4byte	.LFE15
 1297 0058 00000000 		.4byte	.LFB8
 1298 005c 12000000 		.4byte	.LFE8
 1299 0060 00000000 		.4byte	.LFB3
 1300 0064 68000000 		.4byte	.LFE3
 1301 0068 00000000 		.4byte	.LFB2
 1302 006c 20000000 		.4byte	.LFE2
 1303 0070 00000000 		.4byte	.LFB16
 1304 0074 0C000000 		.4byte	.LFE16
 1305 0078 00000000 		.4byte	.LFB17
 1306 007c 0C000000 		.4byte	.LFE17
 1307 0080 00000000 		.4byte	0
ARM GAS  C:\Users\alvin\AppData\Local\Temp\ccg5AO67.s 			page 40


 1308 0084 00000000 		.4byte	0
 1309              		.section	.debug_line,"",%progbits
 1310              	.Ldebug_line0:
 1311 0000 8F010000 		.section	.debug_str,"MS",%progbits,1
 1311      02004D00 
 1311      00000201 
 1311      FB0E0D00 
 1311      01010101 
 1312              	.LASF15:
 1313 0000 72656731 		.ascii	"reg16\000"
 1313      3600
 1314              	.LASF38:
 1315 0006 70776D5F 		.ascii	"pwm_ReadCompare\000"
 1315      52656164 
 1315      436F6D70 
 1315      61726500 
 1316              	.LASF22:
 1317 0016 70657269 		.ascii	"period\000"
 1317      6F6400
 1318              	.LASF42:
 1319 001d 433A5C55 		.ascii	"C:\\Users\\alvin\\Desktop\\ece445\\deliverable\\rob"
 1319      73657273 
 1319      5C616C76 
 1319      696E5C44 
 1319      65736B74 
 1320 004a 6F745F6B 		.ascii	"ot_kit_firmware.cydsn\000"
 1320      69745F66 
 1320      69726D77 
 1320      6172652E 
 1320      63796473 
 1321              	.LASF32:
 1322 0060 70776D5F 		.ascii	"pwm_ClearFIFO\000"
 1322      436C6561 
 1322      72464946 
 1322      4F00
 1323              	.LASF28:
 1324 006e 70776D5F 		.ascii	"pwm_ReadStatusRegister\000"
 1324      52656164 
 1324      53746174 
 1324      75735265 
 1324      67697374 
 1325              	.LASF43:
 1326 0085 70776D5F 		.ascii	"pwm_ReadControlRegister\000"
 1326      52656164 
 1326      436F6E74 
 1326      726F6C52 
 1326      65676973 
 1327              	.LASF31:
 1328 009d 70776D5F 		.ascii	"pwm_ReadCapture\000"
 1328      52656164 
 1328      43617074 
 1328      75726500 
 1329              	.LASF11:
 1330 00ad 666C6F61 		.ascii	"float\000"
 1330      7400
 1331              	.LASF21:
 1332 00b3 636F756E 		.ascii	"counter\000"
ARM GAS  C:\Users\alvin\AppData\Local\Temp\ccg5AO67.s 			page 41


 1332      74657200 
 1333              	.LASF7:
 1334 00bb 6C6F6E67 		.ascii	"long long unsigned int\000"
 1334      206C6F6E 
 1334      6720756E 
 1334      7369676E 
 1334      65642069 
 1335              	.LASF23:
 1336 00d2 70776D5F 		.ascii	"pwm_WriteCompare\000"
 1336      57726974 
 1336      65436F6D 
 1336      70617265 
 1336      00
 1337              	.LASF1:
 1338 00e3 756E7369 		.ascii	"unsigned char\000"
 1338      676E6564 
 1338      20636861 
 1338      7200
 1339              	.LASF14:
 1340 00f1 72656738 		.ascii	"reg8\000"
 1340      00
 1341              	.LASF5:
 1342 00f6 6C6F6E67 		.ascii	"long unsigned int\000"
 1342      20756E73 
 1342      69676E65 
 1342      6420696E 
 1342      7400
 1343              	.LASF44:
 1344 0108 70776D5F 		.ascii	"pwm_initVar\000"
 1344      696E6974 
 1344      56617200 
 1345              	.LASF9:
 1346 0114 75696E74 		.ascii	"uint8\000"
 1346      3800
 1347              	.LASF30:
 1348 011a 636F6E74 		.ascii	"control\000"
 1348      726F6C00 
 1349              	.LASF27:
 1350 0122 70776D5F 		.ascii	"pwm_ReadCounter\000"
 1350      52656164 
 1350      436F756E 
 1350      74657200 
 1351              	.LASF33:
 1352 0132 70776D5F 		.ascii	"pwm_Init\000"
 1352      496E6974 
 1352      00
 1353              	.LASF12:
 1354 013b 646F7562 		.ascii	"double\000"
 1354      6C6500
 1355              	.LASF10:
 1356 0142 75696E74 		.ascii	"uint16\000"
 1356      313600
 1357              	.LASF45:
 1358 0149 4379456E 		.ascii	"CyEnterCriticalSection\000"
 1358      74657243 
 1358      72697469 
 1358      63616C53 
ARM GAS  C:\Users\alvin\AppData\Local\Temp\ccg5AO67.s 			page 42


 1358      65637469 
 1359              	.LASF8:
 1360 0160 756E7369 		.ascii	"unsigned int\000"
 1360      676E6564 
 1360      20696E74 
 1360      00
 1361              	.LASF46:
 1362 016d 43794578 		.ascii	"CyExitCriticalSection\000"
 1362      69744372 
 1362      69746963 
 1362      616C5365 
 1362      6374696F 
 1363              	.LASF34:
 1364 0183 72657375 		.ascii	"result\000"
 1364      6C7400
 1365              	.LASF41:
 1366 018a 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\pwm.c\000"
 1366      6E657261 
 1366      7465645F 
 1366      536F7572 
 1366      63655C50 
 1367              	.LASF19:
 1368 01a9 70776D5F 		.ascii	"pwm_WriteCounter\000"
 1368      57726974 
 1368      65436F75 
 1368      6E746572 
 1368      00
 1369              	.LASF29:
 1370 01ba 70776D5F 		.ascii	"pwm_WriteControlRegister\000"
 1370      57726974 
 1370      65436F6E 
 1370      74726F6C 
 1370      52656769 
 1371              	.LASF35:
 1372 01d3 6374726C 		.ascii	"ctrl\000"
 1372      00
 1373              	.LASF16:
 1374 01d8 73697A65 		.ascii	"sizetype\000"
 1374      74797065 
 1374      00
 1375              	.LASF6:
 1376 01e1 6C6F6E67 		.ascii	"long long int\000"
 1376      206C6F6E 
 1376      6720696E 
 1376      7400
 1377              	.LASF20:
 1378 01ef 70776D5F 		.ascii	"pwm_WritePeriod\000"
 1378      57726974 
 1378      65506572 
 1378      696F6400 
 1379              	.LASF26:
 1380 01ff 696E7465 		.ascii	"interruptMode\000"
 1380      72727570 
 1380      744D6F64 
 1380      6500
 1381              	.LASF40:
 1382 020d 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
ARM GAS  C:\Users\alvin\AppData\Local\Temp\ccg5AO67.s 			page 43


 1382      4320342E 
 1382      392E3320 
 1382      32303135 
 1382      30333033 
 1383 0240 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0 -mthumb -g -O"
 1383      20726576 
 1383      6973696F 
 1383      6E203232 
 1383      31323230 
 1384 0273 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 1384      66756E63 
 1384      74696F6E 
 1384      2D736563 
 1384      74696F6E 
 1385              	.LASF18:
 1386 029b 70776D5F 		.ascii	"pwm_Stop\000"
 1386      53746F70 
 1386      00
 1387              	.LASF2:
 1388 02a4 73686F72 		.ascii	"short int\000"
 1388      7420696E 
 1388      7400
 1389              	.LASF17:
 1390 02ae 70776D5F 		.ascii	"pwm_Enable\000"
 1390      456E6162 
 1390      6C6500
 1391              	.LASF39:
 1392 02b9 70776D5F 		.ascii	"pwm_ReadPeriod\000"
 1392      52656164 
 1392      50657269 
 1392      6F6400
 1393              	.LASF25:
 1394 02c8 70776D5F 		.ascii	"pwm_SetInterruptMode\000"
 1394      53657449 
 1394      6E746572 
 1394      72757074 
 1394      4D6F6465 
 1395              	.LASF4:
 1396 02dd 6C6F6E67 		.ascii	"long int\000"
 1396      20696E74 
 1396      00
 1397              	.LASF13:
 1398 02e6 63686172 		.ascii	"char\000"
 1398      00
 1399              	.LASF37:
 1400 02eb 70776D5F 		.ascii	"pwm_Start\000"
 1400      53746172 
 1400      7400
 1401              	.LASF0:
 1402 02f5 7369676E 		.ascii	"signed char\000"
 1402      65642063 
 1402      68617200 
 1403              	.LASF24:
 1404 0301 636F6D70 		.ascii	"compare\000"
 1404      61726500 
 1405              	.LASF3:
 1406 0309 73686F72 		.ascii	"short unsigned int\000"
ARM GAS  C:\Users\alvin\AppData\Local\Temp\ccg5AO67.s 			page 44


 1406      7420756E 
 1406      7369676E 
 1406      65642069 
 1406      6E7400
 1407              	.LASF36:
 1408 031c 70776D5F 		.ascii	"pwm_interruptState\000"
 1408      696E7465 
 1408      72727570 
 1408      74537461 
 1408      746500
 1409              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
