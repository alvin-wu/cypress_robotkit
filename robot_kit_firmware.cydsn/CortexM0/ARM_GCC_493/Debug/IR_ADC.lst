ARM GAS  C:\Users\alvin\AppData\Local\Temp\cc3v1X7c.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"IR_ADC.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.IR_ADC_Init,"ax",%progbits
  18              		.align	2
  19              		.global	IR_ADC_Init
  20              		.code	16
  21              		.thumb_func
  22              		.type	IR_ADC_Init, %function
  23              	IR_ADC_Init:
  24              	.LFB3:
  25              		.file 1 ".\\Generated_Source\\PSoC4\\IR_ADC.c"
   1:.\Generated_Source\PSoC4/IR_ADC.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC4/IR_ADC.c **** * File Name: IR_ADC.c
   3:.\Generated_Source\PSoC4/IR_ADC.c **** * Version 2.40
   4:.\Generated_Source\PSoC4/IR_ADC.c **** *
   5:.\Generated_Source\PSoC4/IR_ADC.c **** * Description:
   6:.\Generated_Source\PSoC4/IR_ADC.c **** *  This file provides the source code to the API for the Sequencing Successive
   7:.\Generated_Source\PSoC4/IR_ADC.c **** *  Approximation ADC Component Component.
   8:.\Generated_Source\PSoC4/IR_ADC.c **** *
   9:.\Generated_Source\PSoC4/IR_ADC.c **** * Note:
  10:.\Generated_Source\PSoC4/IR_ADC.c **** *
  11:.\Generated_Source\PSoC4/IR_ADC.c **** ********************************************************************************
  12:.\Generated_Source\PSoC4/IR_ADC.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  13:.\Generated_Source\PSoC4/IR_ADC.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:.\Generated_Source\PSoC4/IR_ADC.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:.\Generated_Source\PSoC4/IR_ADC.c **** * the software package with which this file was provided.
  16:.\Generated_Source\PSoC4/IR_ADC.c **** *******************************************************************************/
  17:.\Generated_Source\PSoC4/IR_ADC.c **** 
  18:.\Generated_Source\PSoC4/IR_ADC.c **** #include "IR_ADC.h"
  19:.\Generated_Source\PSoC4/IR_ADC.c **** 
  20:.\Generated_Source\PSoC4/IR_ADC.c **** 
  21:.\Generated_Source\PSoC4/IR_ADC.c **** /***************************************
  22:.\Generated_Source\PSoC4/IR_ADC.c **** * Global data allocation
  23:.\Generated_Source\PSoC4/IR_ADC.c **** ***************************************/
  24:.\Generated_Source\PSoC4/IR_ADC.c **** uint8 IR_ADC_initVar = 0u;
  25:.\Generated_Source\PSoC4/IR_ADC.c **** volatile int16 IR_ADC_offset[IR_ADC_TOTAL_CHANNELS_NUM];
  26:.\Generated_Source\PSoC4/IR_ADC.c **** volatile int32 IR_ADC_countsPer10Volt[IR_ADC_TOTAL_CHANNELS_NUM];   /* Gain compensation */
  27:.\Generated_Source\PSoC4/IR_ADC.c **** 
  28:.\Generated_Source\PSoC4/IR_ADC.c **** 
  29:.\Generated_Source\PSoC4/IR_ADC.c **** /***************************************
  30:.\Generated_Source\PSoC4/IR_ADC.c **** * Local data allocation
  31:.\Generated_Source\PSoC4/IR_ADC.c **** ***************************************/
  32:.\Generated_Source\PSoC4/IR_ADC.c **** /* Channels configuration generated by customiser */
ARM GAS  C:\Users\alvin\AppData\Local\Temp\cc3v1X7c.s 			page 2


  33:.\Generated_Source\PSoC4/IR_ADC.c **** static const uint32 CYCODE IR_ADC_channelsConfig[] = { 0x00000000u, 0x00000000u };
  34:.\Generated_Source\PSoC4/IR_ADC.c **** 
  35:.\Generated_Source\PSoC4/IR_ADC.c **** 
  36:.\Generated_Source\PSoC4/IR_ADC.c **** /*******************************************************************************
  37:.\Generated_Source\PSoC4/IR_ADC.c **** * Function Name: IR_ADC_Start
  38:.\Generated_Source\PSoC4/IR_ADC.c **** ********************************************************************************
  39:.\Generated_Source\PSoC4/IR_ADC.c **** *
  40:.\Generated_Source\PSoC4/IR_ADC.c **** * Summary:
  41:.\Generated_Source\PSoC4/IR_ADC.c **** *  Performs all required initialization for this component
  42:.\Generated_Source\PSoC4/IR_ADC.c **** *  and enables the power. The power will be set to the appropriate
  43:.\Generated_Source\PSoC4/IR_ADC.c **** *  power based on the clock frequency.
  44:.\Generated_Source\PSoC4/IR_ADC.c **** *
  45:.\Generated_Source\PSoC4/IR_ADC.c **** * Parameters:
  46:.\Generated_Source\PSoC4/IR_ADC.c **** *  None.
  47:.\Generated_Source\PSoC4/IR_ADC.c **** *
  48:.\Generated_Source\PSoC4/IR_ADC.c **** * Return:
  49:.\Generated_Source\PSoC4/IR_ADC.c **** *  None.
  50:.\Generated_Source\PSoC4/IR_ADC.c **** *
  51:.\Generated_Source\PSoC4/IR_ADC.c **** * Global variables:
  52:.\Generated_Source\PSoC4/IR_ADC.c **** *  The IR_ADC_initVar variable is used to indicate when/if initial
  53:.\Generated_Source\PSoC4/IR_ADC.c **** *  configuration of this component has happened. The variable is initialized to
  54:.\Generated_Source\PSoC4/IR_ADC.c **** *  zero and set to 1 the first time ADC_Start() is called. This allows for
  55:.\Generated_Source\PSoC4/IR_ADC.c **** *  component Re-Start without re-initialization in all subsequent calls to the
  56:.\Generated_Source\PSoC4/IR_ADC.c **** *  IR_ADC_Start() routine.
  57:.\Generated_Source\PSoC4/IR_ADC.c **** *  If re-initialization of the component is required the variable should be set
  58:.\Generated_Source\PSoC4/IR_ADC.c **** *  to zero before call of IR_ADC_Start() routine, or the user may call
  59:.\Generated_Source\PSoC4/IR_ADC.c **** *  IR_ADC_Init() and IR_ADC_Enable() as done in the
  60:.\Generated_Source\PSoC4/IR_ADC.c **** *  IR_ADC_Start() routine.
  61:.\Generated_Source\PSoC4/IR_ADC.c **** *
  62:.\Generated_Source\PSoC4/IR_ADC.c **** *******************************************************************************/
  63:.\Generated_Source\PSoC4/IR_ADC.c **** void IR_ADC_Start(void)
  64:.\Generated_Source\PSoC4/IR_ADC.c **** {
  65:.\Generated_Source\PSoC4/IR_ADC.c ****     /* If not Initialized then initialize all required hardware and software */
  66:.\Generated_Source\PSoC4/IR_ADC.c ****     if(IR_ADC_initVar == 0u)
  67:.\Generated_Source\PSoC4/IR_ADC.c ****     {
  68:.\Generated_Source\PSoC4/IR_ADC.c ****         IR_ADC_Init();
  69:.\Generated_Source\PSoC4/IR_ADC.c ****         IR_ADC_initVar = 1u;
  70:.\Generated_Source\PSoC4/IR_ADC.c ****     }
  71:.\Generated_Source\PSoC4/IR_ADC.c ****     IR_ADC_Enable();
  72:.\Generated_Source\PSoC4/IR_ADC.c **** }
  73:.\Generated_Source\PSoC4/IR_ADC.c **** 
  74:.\Generated_Source\PSoC4/IR_ADC.c **** 
  75:.\Generated_Source\PSoC4/IR_ADC.c **** /*******************************************************************************
  76:.\Generated_Source\PSoC4/IR_ADC.c **** * Function Name: IR_ADC_Init
  77:.\Generated_Source\PSoC4/IR_ADC.c **** ********************************************************************************
  78:.\Generated_Source\PSoC4/IR_ADC.c **** *
  79:.\Generated_Source\PSoC4/IR_ADC.c **** * Summary:
  80:.\Generated_Source\PSoC4/IR_ADC.c **** *  Initialize component's parameters to the parameters set by user in the
  81:.\Generated_Source\PSoC4/IR_ADC.c **** *  customizer of the component placed onto schematic. Usually called in
  82:.\Generated_Source\PSoC4/IR_ADC.c **** *  IR_ADC_Start().
  83:.\Generated_Source\PSoC4/IR_ADC.c **** *
  84:.\Generated_Source\PSoC4/IR_ADC.c **** * Parameters:
  85:.\Generated_Source\PSoC4/IR_ADC.c **** *  None.
  86:.\Generated_Source\PSoC4/IR_ADC.c **** *
  87:.\Generated_Source\PSoC4/IR_ADC.c **** * Return:
  88:.\Generated_Source\PSoC4/IR_ADC.c **** *  None.
  89:.\Generated_Source\PSoC4/IR_ADC.c **** *
ARM GAS  C:\Users\alvin\AppData\Local\Temp\cc3v1X7c.s 			page 3


  90:.\Generated_Source\PSoC4/IR_ADC.c **** * Global variables:
  91:.\Generated_Source\PSoC4/IR_ADC.c **** *  The IR_ADC_offset variable is initialized.
  92:.\Generated_Source\PSoC4/IR_ADC.c **** *
  93:.\Generated_Source\PSoC4/IR_ADC.c **** *******************************************************************************/
  94:.\Generated_Source\PSoC4/IR_ADC.c **** void IR_ADC_Init(void)
  95:.\Generated_Source\PSoC4/IR_ADC.c **** {
  26              		.loc 1 95 0
  27              		.cfi_startproc
  28 0000 10B5     		push	{r4, lr}
  29              		.cfi_def_cfa_offset 8
  30              		.cfi_offset 4, -8
  31              		.cfi_offset 14, -4
  96:.\Generated_Source\PSoC4/IR_ADC.c ****     uint32 chNum;
  97:.\Generated_Source\PSoC4/IR_ADC.c ****     uint32 tmpRegVal;
  98:.\Generated_Source\PSoC4/IR_ADC.c ****     int32 counts;
  99:.\Generated_Source\PSoC4/IR_ADC.c **** 
 100:.\Generated_Source\PSoC4/IR_ADC.c ****     #if(IR_ADC_TOTAL_CHANNELS_NUM > 1u)
 101:.\Generated_Source\PSoC4/IR_ADC.c ****         static const uint8 CYCODE IR_ADC_InputsPlacement[] =
 102:.\Generated_Source\PSoC4/IR_ADC.c ****         {
 103:.\Generated_Source\PSoC4/IR_ADC.c ****             (uint8)(IR_ADC_cy_psoc4_sarmux_8__CH_0_PORT << 4u) |
 104:.\Generated_Source\PSoC4/IR_ADC.c ****             (uint8)IR_ADC_cy_psoc4_sarmux_8__CH_0_PIN
 105:.\Generated_Source\PSoC4/IR_ADC.c ****             ,(uint8)(IR_ADC_cy_psoc4_sarmux_8__CH_1_PORT << 4u) |
 106:.\Generated_Source\PSoC4/IR_ADC.c ****              (uint8)IR_ADC_cy_psoc4_sarmux_8__CH_1_PIN
 107:.\Generated_Source\PSoC4/IR_ADC.c ****             #if(IR_ADC_TOTAL_CHANNELS_NUM > 2u)
 108:.\Generated_Source\PSoC4/IR_ADC.c ****                 ,(uint8)(IR_ADC_cy_psoc4_sarmux_8__CH_2_PORT << 4u) |
 109:.\Generated_Source\PSoC4/IR_ADC.c ****                  (uint8)IR_ADC_cy_psoc4_sarmux_8__CH_2_PIN
 110:.\Generated_Source\PSoC4/IR_ADC.c ****             #endif /* End IR_ADC_TOTAL_CHANNELS_NUM > 2u */
 111:.\Generated_Source\PSoC4/IR_ADC.c ****             #if(IR_ADC_TOTAL_CHANNELS_NUM > 3u)
 112:.\Generated_Source\PSoC4/IR_ADC.c ****                 ,(uint8)(IR_ADC_cy_psoc4_sarmux_8__CH_3_PORT << 4u) |
 113:.\Generated_Source\PSoC4/IR_ADC.c ****                  (uint8)IR_ADC_cy_psoc4_sarmux_8__CH_3_PIN
 114:.\Generated_Source\PSoC4/IR_ADC.c ****             #endif /* End IR_ADC_TOTAL_CHANNELS_NUM > 3u */
 115:.\Generated_Source\PSoC4/IR_ADC.c ****             #if(IR_ADC_TOTAL_CHANNELS_NUM > 4u)
 116:.\Generated_Source\PSoC4/IR_ADC.c ****                 ,(uint8)(IR_ADC_cy_psoc4_sarmux_8__CH_4_PORT << 4u) |
 117:.\Generated_Source\PSoC4/IR_ADC.c ****                  (uint8)IR_ADC_cy_psoc4_sarmux_8__CH_4_PIN
 118:.\Generated_Source\PSoC4/IR_ADC.c ****             #endif /* End IR_ADC_TOTAL_CHANNELS_NUM > 4u */
 119:.\Generated_Source\PSoC4/IR_ADC.c ****             #if(IR_ADC_TOTAL_CHANNELS_NUM > 5u)
 120:.\Generated_Source\PSoC4/IR_ADC.c ****                 ,(uint8)(IR_ADC_cy_psoc4_sarmux_8__CH_5_PORT << 4u) |
 121:.\Generated_Source\PSoC4/IR_ADC.c ****                  (uint8)IR_ADC_cy_psoc4_sarmux_8__CH_5_PIN
 122:.\Generated_Source\PSoC4/IR_ADC.c ****             #endif /* End IR_ADC_TOTAL_CHANNELS_NUM > 5u */
 123:.\Generated_Source\PSoC4/IR_ADC.c ****             #if(IR_ADC_TOTAL_CHANNELS_NUM > 6u)
 124:.\Generated_Source\PSoC4/IR_ADC.c ****                 ,(uint8)(IR_ADC_cy_psoc4_sarmux_8__CH_6_PORT << 4u) |
 125:.\Generated_Source\PSoC4/IR_ADC.c ****                  (uint8)IR_ADC_cy_psoc4_sarmux_8__CH_6_PIN
 126:.\Generated_Source\PSoC4/IR_ADC.c ****             #endif /* End IR_ADC_TOTAL_CHANNELS_NUM > 6u */
 127:.\Generated_Source\PSoC4/IR_ADC.c ****             #if(IR_ADC_TOTAL_CHANNELS_NUM > 7u)
 128:.\Generated_Source\PSoC4/IR_ADC.c ****                 ,(uint8)(IR_ADC_cy_psoc4_sarmux_8__CH_7_PORT << 4u) |
 129:.\Generated_Source\PSoC4/IR_ADC.c ****                  (uint8)IR_ADC_cy_psoc4_sarmux_8__CH_7_PIN
 130:.\Generated_Source\PSoC4/IR_ADC.c ****             #endif /* End IR_ADC_TOTAL_CHANNELS_NUM > 7u */
 131:.\Generated_Source\PSoC4/IR_ADC.c ****             #if(IR_ADC_TOTAL_CHANNELS_NUM > 8u)
 132:.\Generated_Source\PSoC4/IR_ADC.c ****                 ,(uint8)(IR_ADC_cy_psoc4_sarmux_8__CH_8_PORT << 4u) |
 133:.\Generated_Source\PSoC4/IR_ADC.c ****                  (uint8)IR_ADC_cy_psoc4_sarmux_8__CH_8_PIN
 134:.\Generated_Source\PSoC4/IR_ADC.c ****             #endif /* End IR_ADC_TOTAL_CHANNELS_NUM > 8u */
 135:.\Generated_Source\PSoC4/IR_ADC.c ****             #if(IR_ADC_TOTAL_CHANNELS_NUM > 9u)
 136:.\Generated_Source\PSoC4/IR_ADC.c ****                 ,(uint8)(IR_ADC_cy_psoc4_sarmux_8__CH_9_PORT << 4u) |
 137:.\Generated_Source\PSoC4/IR_ADC.c ****                  (uint8)IR_ADC_cy_psoc4_sarmux_8__CH_9_PIN
 138:.\Generated_Source\PSoC4/IR_ADC.c ****             #endif /* End IR_ADC_TOTAL_CHANNELS_NUM > 9u */
 139:.\Generated_Source\PSoC4/IR_ADC.c ****             #if(IR_ADC_TOTAL_CHANNELS_NUM > 10u)
 140:.\Generated_Source\PSoC4/IR_ADC.c ****                 ,(uint8)(IR_ADC_cy_psoc4_sarmux_8__CH_10_PORT << 4u) |
ARM GAS  C:\Users\alvin\AppData\Local\Temp\cc3v1X7c.s 			page 4


 141:.\Generated_Source\PSoC4/IR_ADC.c ****                  (uint8)IR_ADC_cy_psoc4_sarmux_8__CH_10_PIN
 142:.\Generated_Source\PSoC4/IR_ADC.c ****             #endif /* End IR_ADC_TOTAL_CHANNELS_NUM > 10u */
 143:.\Generated_Source\PSoC4/IR_ADC.c ****             #if(IR_ADC_TOTAL_CHANNELS_NUM > 11u)
 144:.\Generated_Source\PSoC4/IR_ADC.c ****                 ,(uint8)(IR_ADC_cy_psoc4_sarmux_8__CH_11_PORT << 4u) |
 145:.\Generated_Source\PSoC4/IR_ADC.c ****                  (uint8)IR_ADC_cy_psoc4_sarmux_8__CH_11_PIN
 146:.\Generated_Source\PSoC4/IR_ADC.c ****             #endif /* End IR_ADC_TOTAL_CHANNELS_NUM > 11u */
 147:.\Generated_Source\PSoC4/IR_ADC.c ****             #if(IR_ADC_TOTAL_CHANNELS_NUM > 12u)
 148:.\Generated_Source\PSoC4/IR_ADC.c ****                 ,(uint8)(IR_ADC_cy_psoc4_sarmux_8__CH_12_PORT << 4u) |
 149:.\Generated_Source\PSoC4/IR_ADC.c ****                  (uint8)IR_ADC_cy_psoc4_sarmux_8__CH_12_PIN
 150:.\Generated_Source\PSoC4/IR_ADC.c ****             #endif /* End IR_ADC_TOTAL_CHANNELS_NUM > 12u */
 151:.\Generated_Source\PSoC4/IR_ADC.c ****             #if(IR_ADC_TOTAL_CHANNELS_NUM > 13u)
 152:.\Generated_Source\PSoC4/IR_ADC.c ****                 ,(uint8)(IR_ADC_cy_psoc4_sarmux_8__CH_13_PORT << 4u) |
 153:.\Generated_Source\PSoC4/IR_ADC.c ****                  (uint8)IR_ADC_cy_psoc4_sarmux_8__CH_13_PIN
 154:.\Generated_Source\PSoC4/IR_ADC.c ****             #endif /* End IR_ADC_TOTAL_CHANNELS_NUM > 13u */
 155:.\Generated_Source\PSoC4/IR_ADC.c ****             #if(IR_ADC_TOTAL_CHANNELS_NUM > 14u)
 156:.\Generated_Source\PSoC4/IR_ADC.c ****                 ,(uint8)(IR_ADC_cy_psoc4_sarmux_8__CH_14_PORT << 4u) |
 157:.\Generated_Source\PSoC4/IR_ADC.c ****                  (uint8)IR_ADC_cy_psoc4_sarmux_8__CH_14_PIN
 158:.\Generated_Source\PSoC4/IR_ADC.c ****             #endif /* End IR_ADC_TOTAL_CHANNELS_NUM > 14u */
 159:.\Generated_Source\PSoC4/IR_ADC.c ****             #if(IR_ADC_TOTAL_CHANNELS_NUM > 15u)
 160:.\Generated_Source\PSoC4/IR_ADC.c ****                 ,(uint8)(IR_ADC_cy_psoc4_sarmux_8__CH_15_PORT << 4u) |
 161:.\Generated_Source\PSoC4/IR_ADC.c ****                  (uint8)IR_ADC_cy_psoc4_sarmux_8__CH_15_PIN
 162:.\Generated_Source\PSoC4/IR_ADC.c ****             #endif /* End IR_ADC_TOTAL_CHANNELS_NUM > 15u */
 163:.\Generated_Source\PSoC4/IR_ADC.c ****             #if(IR_ADC_TOTAL_CHANNELS_NUM > 16u)
 164:.\Generated_Source\PSoC4/IR_ADC.c ****                 ,(uint8)(IR_ADC_cy_psoc4_sarmux_8__CH_16_PORT << 4u) |
 165:.\Generated_Source\PSoC4/IR_ADC.c ****                  (uint8)IR_ADC_cy_psoc4_sarmux_8__CH_16_PIN
 166:.\Generated_Source\PSoC4/IR_ADC.c ****             #endif /* End IR_ADC_TOTAL_CHANNELS_NUM > 16u */
 167:.\Generated_Source\PSoC4/IR_ADC.c ****         };
 168:.\Generated_Source\PSoC4/IR_ADC.c ****     #endif /* End IR_ADC_TOTAL_CHANNELS_NUM > 1u */
 169:.\Generated_Source\PSoC4/IR_ADC.c **** 
 170:.\Generated_Source\PSoC4/IR_ADC.c ****     #if(IR_ADC_IRQ_REMOVE == 0u)
 171:.\Generated_Source\PSoC4/IR_ADC.c ****         /* Start and set interrupt vector */
 172:.\Generated_Source\PSoC4/IR_ADC.c ****         CyIntSetPriority(IR_ADC_INTC_NUMBER, IR_ADC_INTC_PRIOR_NUMBER);
  32              		.loc 1 172 0
  33 0002 0F20     		mov	r0, #15
  34 0004 0321     		mov	r1, #3
  35 0006 FFF7FEFF 		bl	CyIntSetPriority
  36              	.LVL0:
 173:.\Generated_Source\PSoC4/IR_ADC.c ****         (void)CyIntSetVector(IR_ADC_INTC_NUMBER, &IR_ADC_ISR);
  37              		.loc 1 173 0
  38 000a 0F20     		mov	r0, #15
  39 000c 4349     		ldr	r1, .L12
  40 000e FFF7FEFF 		bl	CyIntSetVector
  41              	.LVL1:
 174:.\Generated_Source\PSoC4/IR_ADC.c ****     #endif   /* End IR_ADC_IRQ_REMOVE */
 175:.\Generated_Source\PSoC4/IR_ADC.c **** 
 176:.\Generated_Source\PSoC4/IR_ADC.c ****     /* Init SAR and MUX registers */
 177:.\Generated_Source\PSoC4/IR_ADC.c ****     IR_ADC_SAR_CHAN_EN_REG = IR_ADC_DEFAULT_EN_CHANNELS;
  42              		.loc 1 177 0
  43 0012 0322     		mov	r2, #3
  44 0014 424B     		ldr	r3, .L12+4
  45 0016 1A60     		str	r2, [r3]
 178:.\Generated_Source\PSoC4/IR_ADC.c ****     IR_ADC_SAR_CTRL_REG |= IR_ADC_DEFAULT_CTRL_REG_CFG | 
 179:.\Generated_Source\PSoC4/IR_ADC.c ****         /* Enable the SAR internal pump when global pump is enabled */
 180:.\Generated_Source\PSoC4/IR_ADC.c ****         (((IR_ADC_PUMP_CTRL_REG & IR_ADC_PUMP_CTRL_ENABLED) != 0u) ? 
  46              		.loc 1 180 0
  47 0018 424B     		ldr	r3, .L12+8
  48 001a 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\alvin\AppData\Local\Temp\cc3v1X7c.s 			page 5


 178:.\Generated_Source\PSoC4/IR_ADC.c ****     IR_ADC_SAR_CTRL_REG |= IR_ADC_DEFAULT_CTRL_REG_CFG | 
  49              		.loc 1 178 0
  50 001c 002B     		cmp	r3, #0
  51 001e 01DA     		bge	.L10
  52 0020 4149     		ldr	r1, .L12+12
  53 0022 00E0     		b	.L2
  54              	.L10:
  55 0024 4149     		ldr	r1, .L12+16
  56              	.L2:
 178:.\Generated_Source\PSoC4/IR_ADC.c ****     IR_ADC_SAR_CTRL_REG |= IR_ADC_DEFAULT_CTRL_REG_CFG | 
  57              		.loc 1 178 0 is_stmt 0 discriminator 4
  58 0026 424A     		ldr	r2, .L12+20
  59 0028 1368     		ldr	r3, [r2]
  60 002a 0B43     		orr	r3, r1
  61 002c 1360     		str	r3, [r2]
 181:.\Generated_Source\PSoC4/IR_ADC.c ****         IR_ADC_BOOSTPUMP_EN : 0u);
 182:.\Generated_Source\PSoC4/IR_ADC.c ****     IR_ADC_SAR_SAMPLE_CTRL_REG = IR_ADC_DEFAULT_SAMPLE_CTRL_REG_CFG;
  62              		.loc 1 182 0 is_stmt 1 discriminator 4
  63 002e 414A     		ldr	r2, .L12+24
  64 0030 414B     		ldr	r3, .L12+28
  65 0032 1A60     		str	r2, [r3]
 183:.\Generated_Source\PSoC4/IR_ADC.c ****     IR_ADC_SAR_RANGE_THRES_REG = IR_ADC_DEFAULT_RANGE_THRES_REG_CFG;
  66              		.loc 1 183 0 discriminator 4
  67 0034 414A     		ldr	r2, .L12+32
  68 0036 424B     		ldr	r3, .L12+36
  69 0038 1A60     		str	r2, [r3]
 184:.\Generated_Source\PSoC4/IR_ADC.c ****     IR_ADC_SAR_RANGE_COND_REG  = IR_ADC_COMPARE_MODE;
  70              		.loc 1 184 0 discriminator 4
  71 003a 0023     		mov	r3, #0
  72 003c 414A     		ldr	r2, .L12+40
  73 003e 1360     		str	r3, [r2]
 185:.\Generated_Source\PSoC4/IR_ADC.c ****     IR_ADC_SAR_SAMPLE_TIME01_REG = IR_ADC_DEFAULT_SAMPLE_TIME01_REG_CFG;
  74              		.loc 1 185 0 discriminator 4
  75 0040 414A     		ldr	r2, .L12+44
  76 0042 4249     		ldr	r1, .L12+48
  77 0044 0A60     		str	r2, [r1]
 186:.\Generated_Source\PSoC4/IR_ADC.c ****     IR_ADC_SAR_SAMPLE_TIME23_REG = IR_ADC_DEFAULT_SAMPLE_TIME23_REG_CFG;
  78              		.loc 1 186 0 discriminator 4
  79 0046 4249     		ldr	r1, .L12+52
  80 0048 0A60     		str	r2, [r1]
 187:.\Generated_Source\PSoC4/IR_ADC.c ****     
 188:.\Generated_Source\PSoC4/IR_ADC.c ****     /* Connect Vm to VSSA when even one channel is single-ended or multiple channels configured */
 189:.\Generated_Source\PSoC4/IR_ADC.c ****     #if(IR_ADC_DEFAULT_MUX_SWITCH0 != 0u)
 190:.\Generated_Source\PSoC4/IR_ADC.c ****         IR_ADC_MUX_SWITCH0_REG |= IR_ADC_DEFAULT_MUX_SWITCH0;
  81              		.loc 1 190 0 discriminator 4
  82 004a 424A     		ldr	r2, .L12+56
  83 004c 1168     		ldr	r1, [r2]
  84 004e 8020     		mov	r0, #128
  85 0050 4002     		lsl	r0, r0, #9
  86 0052 0143     		orr	r1, r0
  87 0054 1160     		str	r1, [r2]
 191:.\Generated_Source\PSoC4/IR_ADC.c ****         /* Set MUX_HW_CTRL_VSSA in MUX_SWITCH_HW_CTRL when multiple channels enabled */
 192:.\Generated_Source\PSoC4/IR_ADC.c ****         #if(IR_ADC_TOTAL_CHANNELS_NUM > 1u)
 193:.\Generated_Source\PSoC4/IR_ADC.c ****             IR_ADC_MUX_SWITCH_HW_CTRL_REG |= IR_ADC_DEFAULT_MUX_SWITCH0;
  88              		.loc 1 193 0 discriminator 4
  89 0056 4049     		ldr	r1, .L12+60
  90 0058 0A68     		ldr	r2, [r1]
ARM GAS  C:\Users\alvin\AppData\Local\Temp\cc3v1X7c.s 			page 6


  91 005a 0243     		orr	r2, r0
  92 005c 0A60     		str	r2, [r1]
 194:.\Generated_Source\PSoC4/IR_ADC.c ****         #endif /* IR_ADC_TOTAL_CHANNELS_NUM > 1u */
 195:.\Generated_Source\PSoC4/IR_ADC.c ****     #endif /*IR_ADC_CHANNELS_MODE !=0 */
 196:.\Generated_Source\PSoC4/IR_ADC.c **** 
 197:.\Generated_Source\PSoC4/IR_ADC.c ****     IR_ADC_SAR_SATURATE_INTR_MASK_REG = 0u;
  93              		.loc 1 197 0 discriminator 4
  94 005e 3F4A     		ldr	r2, .L12+64
  95 0060 1360     		str	r3, [r2]
 198:.\Generated_Source\PSoC4/IR_ADC.c ****     IR_ADC_SAR_RANGE_INTR_MASK_REG = 0u;
  96              		.loc 1 198 0 discriminator 4
  97 0062 3F4A     		ldr	r2, .L12+68
  98 0064 1360     		str	r3, [r2]
 199:.\Generated_Source\PSoC4/IR_ADC.c ****     IR_ADC_SAR_INTR_MASK_REG = IR_ADC_SAR_INTR_MASK;
  99              		.loc 1 199 0 discriminator 4
 100 0066 0122     		mov	r2, #1
 101 0068 3E4B     		ldr	r3, .L12+72
 102 006a 1A60     		str	r2, [r3]
 200:.\Generated_Source\PSoC4/IR_ADC.c **** 
 201:.\Generated_Source\PSoC4/IR_ADC.c ****     #if(IR_ADC_CY_SAR_IP_VER == IR_ADC_CY_SAR_IP_VER0)
 202:.\Generated_Source\PSoC4/IR_ADC.c ****         IR_ADC_ANA_TRIM_REG = IR_ADC_TRIM_COEF;
 203:.\Generated_Source\PSoC4/IR_ADC.c ****     #endif /* (IR_ADC_CY_SAR_IP_VER == IR_ADC_CY_SAR_IP_VER0) */
 204:.\Generated_Source\PSoC4/IR_ADC.c **** 
 205:.\Generated_Source\PSoC4/IR_ADC.c ****     /* Read and modify default configuration based on characterization */
 206:.\Generated_Source\PSoC4/IR_ADC.c ****     tmpRegVal = IR_ADC_SAR_DFT_CTRL_REG;
 103              		.loc 1 206 0 discriminator 4
 104 006c 3E4A     		ldr	r2, .L12+76
 105 006e 1168     		ldr	r1, [r2]
 106              	.LVL2:
 207:.\Generated_Source\PSoC4/IR_ADC.c ****     tmpRegVal &= (uint32)~IR_ADC_DCEN;
 208:.\Generated_Source\PSoC4/IR_ADC.c ****     
 209:.\Generated_Source\PSoC4/IR_ADC.c ****     #if(IR_ADC_CY_SAR_IP_VER == IR_ADC_CY_SAR_IP_VER0)
 210:.\Generated_Source\PSoC4/IR_ADC.c ****         #if(IR_ADC_NOMINAL_CLOCK_FREQ > (IR_ADC_MAX_FREQUENCY / 2))
 211:.\Generated_Source\PSoC4/IR_ADC.c ****             tmpRegVal |= IR_ADC_SEL_CSEL_DFT_CHAR;
 212:.\Generated_Source\PSoC4/IR_ADC.c ****         #else  /* clock speed < 9 Mhz */
 213:.\Generated_Source\PSoC4/IR_ADC.c ****             tmpRegVal |= IR_ADC_DLY_INC;
 214:.\Generated_Source\PSoC4/IR_ADC.c ****         #endif /* clock speed > 9 Mhz */
 215:.\Generated_Source\PSoC4/IR_ADC.c ****     #else
 216:.\Generated_Source\PSoC4/IR_ADC.c ****         #if ((IR_ADC_DEFAULT_VREF_SEL == IR_ADC__INTERNAL1024) || \
 217:.\Generated_Source\PSoC4/IR_ADC.c ****              (IR_ADC_DEFAULT_VREF_SEL == IR_ADC__INTERNALVREF))
 218:.\Generated_Source\PSoC4/IR_ADC.c ****             tmpRegVal |= IR_ADC_DLY_INC;
 219:.\Generated_Source\PSoC4/IR_ADC.c ****         #else
 220:.\Generated_Source\PSoC4/IR_ADC.c ****             tmpRegVal |= IR_ADC_DCEN;
 221:.\Generated_Source\PSoC4/IR_ADC.c ****             tmpRegVal &= (uint32)~IR_ADC_DLY_INC;
 107              		.loc 1 221 0 discriminator 4
 108 0070 3E4B     		ldr	r3, .L12+80
 109 0072 0B40     		and	r3, r1
 110 0074 8021     		mov	r1, #128
 111              	.LVL3:
 112 0076 8905     		lsl	r1, r1, #22
 113 0078 0B43     		orr	r3, r1
 114              	.LVL4:
 222:.\Generated_Source\PSoC4/IR_ADC.c ****         #endif /* ((IR_ADC_DEFAULT_VREF_SEL == IR_ADC__INTERNAL1024) || \
 223:.\Generated_Source\PSoC4/IR_ADC.c ****                    (IR_ADC_DEFAULT_VREF_SEL == IR_ADC__INTERNALVREF)) */
 224:.\Generated_Source\PSoC4/IR_ADC.c ****     #endif /* (IR_ADC_CY_SAR_IP_VER == IR_ADC_CY_SAR_IP_VER0) */
 225:.\Generated_Source\PSoC4/IR_ADC.c ****     
 226:.\Generated_Source\PSoC4/IR_ADC.c ****     IR_ADC_SAR_DFT_CTRL_REG = tmpRegVal;
ARM GAS  C:\Users\alvin\AppData\Local\Temp\cc3v1X7c.s 			page 7


 115              		.loc 1 226 0 discriminator 4
 116 007a 1360     		str	r3, [r2]
 117              	.LVL5:
 227:.\Generated_Source\PSoC4/IR_ADC.c **** 
 228:.\Generated_Source\PSoC4/IR_ADC.c ****     #if(IR_ADC_MAX_RESOLUTION != IR_ADC_RESOLUTION_12)
 229:.\Generated_Source\PSoC4/IR_ADC.c ****         IR_ADC_WOUNDING_REG = IR_ADC_ALT_WOUNDING;
 230:.\Generated_Source\PSoC4/IR_ADC.c ****     #endif /* IR_ADC_MAX_RESOLUTION != IR_ADC_RESOLUTION_12 */
 231:.\Generated_Source\PSoC4/IR_ADC.c **** 
 232:.\Generated_Source\PSoC4/IR_ADC.c ****     for(chNum = 0u; chNum < IR_ADC_TOTAL_CHANNELS_NUM; chNum++)
 118              		.loc 1 232 0 discriminator 4
 119 007c 0022     		mov	r2, #0
 120 007e 49E0     		b	.L3
 121              	.LVL6:
 122              	.L9:
 233:.\Generated_Source\PSoC4/IR_ADC.c ****     {
 234:.\Generated_Source\PSoC4/IR_ADC.c ****         tmpRegVal = (IR_ADC_channelsConfig[chNum] & IR_ADC_CHANNEL_CONFIG_MASK);
 123              		.loc 1 234 0
 124 0080 3B48     		ldr	r0, .L12+84
 125 0082 9100     		lsl	r1, r2, #2
 126 0084 0C58     		ldr	r4, [r1, r0]
 127 0086 DC23     		mov	r3, #220
 128 0088 9B01     		lsl	r3, r3, #6
 129 008a 2340     		and	r3, r4
 130              	.LVL7:
 235:.\Generated_Source\PSoC4/IR_ADC.c ****         #if(IR_ADC_TOTAL_CHANNELS_NUM > 1u)
 236:.\Generated_Source\PSoC4/IR_ADC.c ****             tmpRegVal |= IR_ADC_InputsPlacement[chNum];
 131              		.loc 1 236 0
 132 008c 8018     		add	r0, r0, r2
 133 008e 007A     		ldrb	r0, [r0, #8]
 134 0090 0343     		orr	r3, r0
 135              	.LVL8:
 237:.\Generated_Source\PSoC4/IR_ADC.c ****         #endif /* End IR_ADC_TOTAL_CHANNELS_NUM > 1u */
 238:.\Generated_Source\PSoC4/IR_ADC.c ****         
 239:.\Generated_Source\PSoC4/IR_ADC.c ****         
 240:.\Generated_Source\PSoC4/IR_ADC.c ****         /* When the part is limited to 10-bit then the SUB_RESOLUTION bit
 241:.\Generated_Source\PSoC4/IR_ADC.c ****         *  will be ignored and the RESOLUTION bit selects between 10-bit
 242:.\Generated_Source\PSoC4/IR_ADC.c ****         *  (0) and 8-bit (1) resolution.
 243:.\Generated_Source\PSoC4/IR_ADC.c ****         */
 244:.\Generated_Source\PSoC4/IR_ADC.c ****         #if((IR_ADC_MAX_RESOLUTION != IR_ADC_RESOLUTION_12) && \
 245:.\Generated_Source\PSoC4/IR_ADC.c ****             (IR_ADC_ALT_WOUNDING == IR_ADC_WOUNDING_10BIT))
 246:.\Generated_Source\PSoC4/IR_ADC.c ****             tmpRegVal &= (uint32)(~IR_ADC_ALT_RESOLUTION_ON);
 247:.\Generated_Source\PSoC4/IR_ADC.c ****         #endif /* IR_ADC_MAX_RESOLUTION != IR_ADC_RESOLUTION_12 */
 248:.\Generated_Source\PSoC4/IR_ADC.c **** 
 249:.\Generated_Source\PSoC4/IR_ADC.c ****         #if(IR_ADC_INJ_CHANNEL_ENABLED)
 250:.\Generated_Source\PSoC4/IR_ADC.c ****         if(chNum < IR_ADC_SEQUENCED_CHANNELS_NUM)
 251:.\Generated_Source\PSoC4/IR_ADC.c ****         #endif /* IR_ADC_INJ_CHANNEL_ENABLED */
 252:.\Generated_Source\PSoC4/IR_ADC.c ****         {
 253:.\Generated_Source\PSoC4/IR_ADC.c ****             CY_SET_REG32((reg32 *)(IR_ADC_SAR_CHAN_CONFIG_IND + (uint32)(chNum << 2)), tmpRegVal);
 136              		.loc 1 253 0
 137 0092 3848     		ldr	r0, .L12+88
 138 0094 8446     		mov	ip, r0
 139 0096 6144     		add	r1, r1, ip
 140 0098 0B60     		str	r3, [r1]
 254:.\Generated_Source\PSoC4/IR_ADC.c **** 
 255:.\Generated_Source\PSoC4/IR_ADC.c ****             if((IR_ADC_channelsConfig[chNum] & IR_ADC_IS_SATURATE_EN_MASK) != 0u)
 141              		.loc 1 255 0
 142 009a E307     		lsl	r3, r4, #31
ARM GAS  C:\Users\alvin\AppData\Local\Temp\cc3v1X7c.s 			page 8


 143 009c 08D5     		bpl	.L4
 144              	.LVL9:
 256:.\Generated_Source\PSoC4/IR_ADC.c ****             {
 257:.\Generated_Source\PSoC4/IR_ADC.c ****                 IR_ADC_SAR_SATURATE_INTR_MASK_REG |= (uint16)((uint16)1 << chNum);
 145              		.loc 1 257 0
 146 009e 2F48     		ldr	r0, .L12+64
 147 00a0 0468     		ldr	r4, [r0]
 148 00a2 8021     		mov	r1, #128
 149              	.LVL10:
 150 00a4 4902     		lsl	r1, r1, #9
 151 00a6 0B1C     		mov	r3, r1
 152 00a8 9340     		lsl	r3, r3, r2
 153 00aa 1B0C     		lsr	r3, r3, #16
 154 00ac 2343     		orr	r3, r4
 155 00ae 0360     		str	r3, [r0]
 156              	.LVL11:
 157              	.L4:
 258:.\Generated_Source\PSoC4/IR_ADC.c ****             }
 259:.\Generated_Source\PSoC4/IR_ADC.c **** 
 260:.\Generated_Source\PSoC4/IR_ADC.c ****             if((IR_ADC_channelsConfig[chNum] & IR_ADC_IS_RANGE_CTRL_EN_MASK) != 0u)
 158              		.loc 1 260 0
 159 00b0 9300     		lsl	r3, r2, #2
 160 00b2 2F49     		ldr	r1, .L12+84
 161              	.LVL12:
 162 00b4 5B58     		ldr	r3, [r3, r1]
 163 00b6 9B07     		lsl	r3, r3, #30
 164 00b8 08D5     		bpl	.L5
 261:.\Generated_Source\PSoC4/IR_ADC.c ****             {
 262:.\Generated_Source\PSoC4/IR_ADC.c ****                 IR_ADC_SAR_RANGE_INTR_MASK_REG |= (uint16)((uint16)1 << chNum);
 165              		.loc 1 262 0
 166 00ba 2948     		ldr	r0, .L12+68
 167 00bc 0468     		ldr	r4, [r0]
 168 00be 8021     		mov	r1, #128
 169              	.LVL13:
 170 00c0 4902     		lsl	r1, r1, #9
 171 00c2 0B1C     		mov	r3, r1
 172 00c4 9340     		lsl	r3, r3, r2
 173 00c6 1B0C     		lsr	r3, r3, #16
 174 00c8 2343     		orr	r3, r4
 175 00ca 0360     		str	r3, [r0]
 176              	.L5:
 263:.\Generated_Source\PSoC4/IR_ADC.c ****             }
 264:.\Generated_Source\PSoC4/IR_ADC.c ****         }
 265:.\Generated_Source\PSoC4/IR_ADC.c ****         #if(IR_ADC_INJ_CHANNEL_ENABLED)
 266:.\Generated_Source\PSoC4/IR_ADC.c ****             else
 267:.\Generated_Source\PSoC4/IR_ADC.c ****             {
 268:.\Generated_Source\PSoC4/IR_ADC.c ****                 CY_SET_REG32(IR_ADC_SAR_INJ_CHAN_CONFIG_PTR, tmpRegVal | IR_ADC_INJ_TAILGATING);
 269:.\Generated_Source\PSoC4/IR_ADC.c **** 
 270:.\Generated_Source\PSoC4/IR_ADC.c ****                 if((IR_ADC_channelsConfig[chNum] & IR_ADC_IS_SATURATE_EN_MASK) != 0u)
 271:.\Generated_Source\PSoC4/IR_ADC.c ****                 {
 272:.\Generated_Source\PSoC4/IR_ADC.c ****                     IR_ADC_SAR_INTR_MASK_REG |= IR_ADC_INJ_SATURATE_MASK;
 273:.\Generated_Source\PSoC4/IR_ADC.c ****                 }
 274:.\Generated_Source\PSoC4/IR_ADC.c **** 
 275:.\Generated_Source\PSoC4/IR_ADC.c ****                 if((IR_ADC_channelsConfig[chNum] & IR_ADC_IS_RANGE_CTRL_EN_MASK) != 0u)
 276:.\Generated_Source\PSoC4/IR_ADC.c ****                 {
 277:.\Generated_Source\PSoC4/IR_ADC.c ****                     IR_ADC_SAR_INTR_MASK_REG |= IR_ADC_INJ_RANGE_MASK;
 278:.\Generated_Source\PSoC4/IR_ADC.c ****                 }
ARM GAS  C:\Users\alvin\AppData\Local\Temp\cc3v1X7c.s 			page 9


 279:.\Generated_Source\PSoC4/IR_ADC.c ****             }
 280:.\Generated_Source\PSoC4/IR_ADC.c ****         #endif /* IR_ADC_INJ_CHANNEL_ENABLED */
 281:.\Generated_Source\PSoC4/IR_ADC.c **** 
 282:.\Generated_Source\PSoC4/IR_ADC.c ****         if((IR_ADC_channelsConfig[chNum] & IR_ADC_ALT_RESOLUTION_ON) != 0u)
 177              		.loc 1 282 0
 178 00cc 9300     		lsl	r3, r2, #2
 179 00ce 2849     		ldr	r1, .L12+84
 180              	.LVL14:
 181 00d0 5958     		ldr	r1, [r3, r1]
 182              	.LVL15:
 183 00d2 8B05     		lsl	r3, r1, #22
 184 00d4 02D5     		bpl	.L11
 283:.\Generated_Source\PSoC4/IR_ADC.c ****         {
 284:.\Generated_Source\PSoC4/IR_ADC.c ****                counts = (int32)IR_ADC_DEFAULT_MAX_WRK_ALT;
 185              		.loc 1 284 0
 186 00d6 8020     		mov	r0, #128
 187 00d8 4000     		lsl	r0, r0, #1
 188 00da 01E0     		b	.L6
 189              	.L11:
 285:.\Generated_Source\PSoC4/IR_ADC.c ****         }
 286:.\Generated_Source\PSoC4/IR_ADC.c ****         else
 287:.\Generated_Source\PSoC4/IR_ADC.c ****         {
 288:.\Generated_Source\PSoC4/IR_ADC.c ****                counts = (int32)IR_ADC_SAR_WRK_MAX_12BIT;
 190              		.loc 1 288 0
 191 00dc 8020     		mov	r0, #128
 192 00de 4001     		lsl	r0, r0, #5
 193              	.L6:
 194              	.LVL16:
 289:.\Generated_Source\PSoC4/IR_ADC.c ****         }
 290:.\Generated_Source\PSoC4/IR_ADC.c **** 
 291:.\Generated_Source\PSoC4/IR_ADC.c ****         if((IR_ADC_channelsConfig[chNum] & IR_ADC_DIFFERENTIAL_EN) == 0u)
 195              		.loc 1 291 0
 196 00e0 CB05     		lsl	r3, r1, #23
 197 00e2 04D4     		bmi	.L7
 292:.\Generated_Source\PSoC4/IR_ADC.c ****         {
 293:.\Generated_Source\PSoC4/IR_ADC.c ****             #if((IR_ADC_DEFAULT_SE_RESULT_FORMAT_SEL == IR_ADC__FSIGNED) && \
 294:.\Generated_Source\PSoC4/IR_ADC.c ****                 (IR_ADC_DEFAULT_NEG_INPUT_SEL == IR_ADC__VREF))
 295:.\Generated_Source\PSoC4/IR_ADC.c ****                 /* Set offset to the minus half scale to convert results to unsigned format */
 296:.\Generated_Source\PSoC4/IR_ADC.c ****                 IR_ADC_offset[chNum] = (int16)(counts / -2);
 297:.\Generated_Source\PSoC4/IR_ADC.c ****             #else
 298:.\Generated_Source\PSoC4/IR_ADC.c ****                 IR_ADC_offset[chNum] = 0;
 198              		.loc 1 298 0
 199 00e4 5300     		lsl	r3, r2, #1
 200 00e6 0024     		mov	r4, #0
 201 00e8 2349     		ldr	r1, .L12+92
 202 00ea 5C52     		strh	r4, [r3, r1]
 203 00ec 03E0     		b	.L8
 204              	.L7:
 299:.\Generated_Source\PSoC4/IR_ADC.c ****             #endif /* end DEFAULT_SE_RESULT_FORMAT_SEL == IR_ADC__FSIGNED */
 300:.\Generated_Source\PSoC4/IR_ADC.c ****         }
 301:.\Generated_Source\PSoC4/IR_ADC.c ****         else    /* Differential channel */
 302:.\Generated_Source\PSoC4/IR_ADC.c ****         {
 303:.\Generated_Source\PSoC4/IR_ADC.c ****             #if(IR_ADC_DEFAULT_DIFF_RESULT_FORMAT_SEL == IR_ADC__FUNSIGNED)
 304:.\Generated_Source\PSoC4/IR_ADC.c ****                 /* Set offset to the half scale to convert results to signed format */
 305:.\Generated_Source\PSoC4/IR_ADC.c ****                 IR_ADC_offset[chNum] = (int16)(counts / 2);
 306:.\Generated_Source\PSoC4/IR_ADC.c ****             #else
 307:.\Generated_Source\PSoC4/IR_ADC.c ****                 IR_ADC_offset[chNum] = 0;
ARM GAS  C:\Users\alvin\AppData\Local\Temp\cc3v1X7c.s 			page 10


 205              		.loc 1 307 0
 206 00ee 5300     		lsl	r3, r2, #1
 207 00f0 0024     		mov	r4, #0
 208 00f2 2149     		ldr	r1, .L12+92
 209 00f4 5C52     		strh	r4, [r3, r1]
 210              	.L8:
 308:.\Generated_Source\PSoC4/IR_ADC.c ****             #endif /* end IR_ADC_DEFAULT_DIFF_RESULT_FORMAT_SEL == IR_ADC__FUNSIGNED */
 309:.\Generated_Source\PSoC4/IR_ADC.c ****         }
 310:.\Generated_Source\PSoC4/IR_ADC.c ****         /* Calculate gain in counts per 10 volts with rounding */
 311:.\Generated_Source\PSoC4/IR_ADC.c ****         IR_ADC_countsPer10Volt[chNum] = (int16)(((counts * IR_ADC_10MV_COUNTS) +
 211              		.loc 1 311 0 discriminator 2
 212 00f6 214B     		ldr	r3, .L12+96
 213 00f8 4343     		mul	r3, r0
 214 00fa 8021     		mov	r1, #128
 215 00fc C900     		lsl	r1, r1, #3
 216 00fe 8C46     		mov	ip, r1
 217 0100 6344     		add	r3, r3, ip
 312:.\Generated_Source\PSoC4/IR_ADC.c ****                             IR_ADC_DEFAULT_VREF_MV_VALUE) / (IR_ADC_DEFAULT_VREF_MV_VALUE * 2));
 218              		.loc 1 312 0 discriminator 2
 219 0102 D917     		asr	r1, r3, #31
 220 0104 490D     		lsr	r1, r1, #21
 221 0106 CB18     		add	r3, r1, r3
 222 0108 DB12     		asr	r3, r3, #11
 311:.\Generated_Source\PSoC4/IR_ADC.c ****                             IR_ADC_DEFAULT_VREF_MV_VALUE) / (IR_ADC_DEFAULT_VREF_MV_VALUE * 2));
 223              		.loc 1 311 0 discriminator 2
 224 010a 1BB2     		sxth	r3, r3
 225 010c 9000     		lsl	r0, r2, #2
 226              	.LVL17:
 227 010e 1C49     		ldr	r1, .L12+100
 228 0110 4350     		str	r3, [r0, r1]
 232:.\Generated_Source\PSoC4/IR_ADC.c ****     {
 229              		.loc 1 232 0 discriminator 2
 230 0112 0132     		add	r2, r2, #1
 231              	.LVL18:
 232              	.L3:
 232:.\Generated_Source\PSoC4/IR_ADC.c ****     {
 233              		.loc 1 232 0 is_stmt 0 discriminator 1
 234 0114 012A     		cmp	r2, #1
 235 0116 B3D9     		bls	.L9
 313:.\Generated_Source\PSoC4/IR_ADC.c ****     }
 314:.\Generated_Source\PSoC4/IR_ADC.c **** }
 236              		.loc 1 314 0 is_stmt 1
 237              		@ sp needed
 238 0118 10BD     		pop	{r4, pc}
 239              	.L13:
 240 011a C046     		.align	2
 241              	.L12:
 242 011c 00000000 		.word	IR_ADC_ISR
 243 0120 20003A40 		.word	1077542944
 244 0124 80033A40 		.word	1077543808
 245 0128 C0201010 		.word	269492416
 246 012c C0200010 		.word	268443840
 247 0130 00003A40 		.word	1077542912
 248 0134 8C000080 		.word	-2147483508
 249 0138 04003A40 		.word	1077542916
 250 013c 0000FF07 		.word	134152192
 251 0140 18003A40 		.word	1077542936
ARM GAS  C:\Users\alvin\AppData\Local\Temp\cc3v1X7c.s 			page 11


 252 0144 1C003A40 		.word	1077542940
 253 0148 04000400 		.word	262148
 254 014c 10003A40 		.word	1077542928
 255 0150 14003A40 		.word	1077542932
 256 0154 00033A40 		.word	1077543680
 257 0158 40033A40 		.word	1077543744
 258 015c 28023A40 		.word	1077543464
 259 0160 38023A40 		.word	1077543480
 260 0164 18023A40 		.word	1077543448
 261 0168 30003A40 		.word	1077542960
 262 016c FEFFFFDF 		.word	-536870914
 263 0170 00000000 		.word	.LANCHOR0
 264 0174 80003A40 		.word	1077543040
 265 0178 00000000 		.word	IR_ADC_offset
 266 017c 10270000 		.word	10000
 267 0180 00000000 		.word	IR_ADC_countsPer10Volt
 268              		.cfi_endproc
 269              	.LFE3:
 270              		.size	IR_ADC_Init, .-IR_ADC_Init
 271              		.section	.text.IR_ADC_Enable,"ax",%progbits
 272              		.align	2
 273              		.global	IR_ADC_Enable
 274              		.code	16
 275              		.thumb_func
 276              		.type	IR_ADC_Enable, %function
 277              	IR_ADC_Enable:
 278              	.LFB4:
 315:.\Generated_Source\PSoC4/IR_ADC.c **** 
 316:.\Generated_Source\PSoC4/IR_ADC.c **** /*******************************************************************************
 317:.\Generated_Source\PSoC4/IR_ADC.c **** * Function Name: ADC_SAR_1_Enable
 318:.\Generated_Source\PSoC4/IR_ADC.c **** ********************************************************************************
 319:.\Generated_Source\PSoC4/IR_ADC.c **** *
 320:.\Generated_Source\PSoC4/IR_ADC.c **** * Summary:
 321:.\Generated_Source\PSoC4/IR_ADC.c **** *  Enables the clock and analog power for SAR ADC.
 322:.\Generated_Source\PSoC4/IR_ADC.c **** *
 323:.\Generated_Source\PSoC4/IR_ADC.c **** * Parameters:
 324:.\Generated_Source\PSoC4/IR_ADC.c **** *  None.
 325:.\Generated_Source\PSoC4/IR_ADC.c **** *
 326:.\Generated_Source\PSoC4/IR_ADC.c **** * Return:
 327:.\Generated_Source\PSoC4/IR_ADC.c **** *  None.
 328:.\Generated_Source\PSoC4/IR_ADC.c **** *
 329:.\Generated_Source\PSoC4/IR_ADC.c **** *******************************************************************************/
 330:.\Generated_Source\PSoC4/IR_ADC.c **** void IR_ADC_Enable(void)
 331:.\Generated_Source\PSoC4/IR_ADC.c **** {
 279              		.loc 1 331 0
 280              		.cfi_startproc
 281 0000 08B5     		push	{r3, lr}
 282              		.cfi_def_cfa_offset 8
 283              		.cfi_offset 3, -8
 284              		.cfi_offset 14, -4
 332:.\Generated_Source\PSoC4/IR_ADC.c ****     if (0u == (IR_ADC_SAR_CTRL_REG & IR_ADC_ENABLE))
 285              		.loc 1 332 0
 286 0002 094B     		ldr	r3, .L17
 287 0004 1B68     		ldr	r3, [r3]
 288 0006 002B     		cmp	r3, #0
 289 0008 0CDB     		blt	.L14
 290              	.L16:
ARM GAS  C:\Users\alvin\AppData\Local\Temp\cc3v1X7c.s 			page 12


 333:.\Generated_Source\PSoC4/IR_ADC.c ****     {
 334:.\Generated_Source\PSoC4/IR_ADC.c ****         #if(IR_ADC_CY_SAR_IP_VER != IR_ADC_CY_SAR_IP_VER0)
 335:.\Generated_Source\PSoC4/IR_ADC.c **** 
 336:.\Generated_Source\PSoC4/IR_ADC.c ****             while (0u != (IR_ADC_SAR_STATUS_REG & IR_ADC_STATUS_BUSY))
 291              		.loc 1 336 0 discriminator 1
 292 000a 084B     		ldr	r3, .L17+4
 293 000c 1B68     		ldr	r3, [r3]
 294 000e 002B     		cmp	r3, #0
 295 0010 FBDB     		blt	.L16
 337:.\Generated_Source\PSoC4/IR_ADC.c ****             {
 338:.\Generated_Source\PSoC4/IR_ADC.c ****                 /* wait for SAR to go idle to avoid deadlock */
 339:.\Generated_Source\PSoC4/IR_ADC.c ****             }
 340:.\Generated_Source\PSoC4/IR_ADC.c ****         #endif /* (IR_ADC_CY_SAR_IP_VER != IR_ADC_CY_SAR_IP_VER0) */
 341:.\Generated_Source\PSoC4/IR_ADC.c ****         
 342:.\Generated_Source\PSoC4/IR_ADC.c ****         IR_ADC_SAR_CTRL_REG |= IR_ADC_ENABLE;
 296              		.loc 1 342 0
 297 0012 054A     		ldr	r2, .L17
 298 0014 1368     		ldr	r3, [r2]
 299 0016 8021     		mov	r1, #128
 300 0018 0906     		lsl	r1, r1, #24
 301 001a 0B43     		orr	r3, r1
 302 001c 1360     		str	r3, [r2]
 343:.\Generated_Source\PSoC4/IR_ADC.c ****         
 344:.\Generated_Source\PSoC4/IR_ADC.c ****         /* The block is ready to use 10 us after the enable signal is set high. */
 345:.\Generated_Source\PSoC4/IR_ADC.c ****         CyDelayUs(IR_ADC_10US_DELAY);         
 303              		.loc 1 345 0
 304 001e 0A20     		mov	r0, #10
 305 0020 FFF7FEFF 		bl	CyDelayUs
 306              	.LVL19:
 307              	.L14:
 346:.\Generated_Source\PSoC4/IR_ADC.c ****     }
 347:.\Generated_Source\PSoC4/IR_ADC.c **** }
 308              		.loc 1 347 0
 309              		@ sp needed
 310 0024 08BD     		pop	{r3, pc}
 311              	.L18:
 312 0026 C046     		.align	2
 313              	.L17:
 314 0028 00003A40 		.word	1077542912
 315 002c 08023A40 		.word	1077543432
 316              		.cfi_endproc
 317              	.LFE4:
 318              		.size	IR_ADC_Enable, .-IR_ADC_Enable
 319              		.section	.text.IR_ADC_Start,"ax",%progbits
 320              		.align	2
 321              		.global	IR_ADC_Start
 322              		.code	16
 323              		.thumb_func
 324              		.type	IR_ADC_Start, %function
 325              	IR_ADC_Start:
 326              	.LFB2:
  64:.\Generated_Source\PSoC4/IR_ADC.c ****     /* If not Initialized then initialize all required hardware and software */
 327              		.loc 1 64 0
 328              		.cfi_startproc
 329 0000 08B5     		push	{r3, lr}
 330              		.cfi_def_cfa_offset 8
 331              		.cfi_offset 3, -8
ARM GAS  C:\Users\alvin\AppData\Local\Temp\cc3v1X7c.s 			page 13


 332              		.cfi_offset 14, -4
  66:.\Generated_Source\PSoC4/IR_ADC.c ****     {
 333              		.loc 1 66 0
 334 0002 064B     		ldr	r3, .L21
 335 0004 1B78     		ldrb	r3, [r3]
 336 0006 002B     		cmp	r3, #0
 337 0008 04D1     		bne	.L20
  68:.\Generated_Source\PSoC4/IR_ADC.c ****         IR_ADC_initVar = 1u;
 338              		.loc 1 68 0
 339 000a FFF7FEFF 		bl	IR_ADC_Init
 340              	.LVL20:
  69:.\Generated_Source\PSoC4/IR_ADC.c ****     }
 341              		.loc 1 69 0
 342 000e 0122     		mov	r2, #1
 343 0010 024B     		ldr	r3, .L21
 344 0012 1A70     		strb	r2, [r3]
 345              	.L20:
  71:.\Generated_Source\PSoC4/IR_ADC.c **** }
 346              		.loc 1 71 0
 347 0014 FFF7FEFF 		bl	IR_ADC_Enable
 348              	.LVL21:
  72:.\Generated_Source\PSoC4/IR_ADC.c **** 
 349              		.loc 1 72 0
 350              		@ sp needed
 351 0018 08BD     		pop	{r3, pc}
 352              	.L22:
 353 001a C046     		.align	2
 354              	.L21:
 355 001c 00000000 		.word	.LANCHOR1
 356              		.cfi_endproc
 357              	.LFE2:
 358              		.size	IR_ADC_Start, .-IR_ADC_Start
 359              		.section	.text.IR_ADC_Stop,"ax",%progbits
 360              		.align	2
 361              		.global	IR_ADC_Stop
 362              		.code	16
 363              		.thumb_func
 364              		.type	IR_ADC_Stop, %function
 365              	IR_ADC_Stop:
 366              	.LFB5:
 348:.\Generated_Source\PSoC4/IR_ADC.c **** 
 349:.\Generated_Source\PSoC4/IR_ADC.c **** 
 350:.\Generated_Source\PSoC4/IR_ADC.c **** /*******************************************************************************
 351:.\Generated_Source\PSoC4/IR_ADC.c **** * Function Name: IR_ADC_Stop
 352:.\Generated_Source\PSoC4/IR_ADC.c **** ********************************************************************************
 353:.\Generated_Source\PSoC4/IR_ADC.c **** *
 354:.\Generated_Source\PSoC4/IR_ADC.c **** * Summary:
 355:.\Generated_Source\PSoC4/IR_ADC.c **** *  This function stops ADC conversions and puts the ADC into its lowest power
 356:.\Generated_Source\PSoC4/IR_ADC.c **** *  mode.
 357:.\Generated_Source\PSoC4/IR_ADC.c **** *
 358:.\Generated_Source\PSoC4/IR_ADC.c **** * Parameters:
 359:.\Generated_Source\PSoC4/IR_ADC.c **** *  None.
 360:.\Generated_Source\PSoC4/IR_ADC.c **** *
 361:.\Generated_Source\PSoC4/IR_ADC.c **** * Return:
 362:.\Generated_Source\PSoC4/IR_ADC.c **** *  None.
 363:.\Generated_Source\PSoC4/IR_ADC.c **** *
 364:.\Generated_Source\PSoC4/IR_ADC.c **** *******************************************************************************/
ARM GAS  C:\Users\alvin\AppData\Local\Temp\cc3v1X7c.s 			page 14


 365:.\Generated_Source\PSoC4/IR_ADC.c **** void IR_ADC_Stop(void)
 366:.\Generated_Source\PSoC4/IR_ADC.c **** {
 367              		.loc 1 366 0
 368              		.cfi_startproc
 367:.\Generated_Source\PSoC4/IR_ADC.c ****     IR_ADC_SAR_CTRL_REG &= (uint32)~IR_ADC_ENABLE;
 369              		.loc 1 367 0
 370 0000 024A     		ldr	r2, .L24
 371 0002 1368     		ldr	r3, [r2]
 372 0004 5B00     		lsl	r3, r3, #1
 373 0006 5B08     		lsr	r3, r3, #1
 374 0008 1360     		str	r3, [r2]
 368:.\Generated_Source\PSoC4/IR_ADC.c **** }
 375              		.loc 1 368 0
 376              		@ sp needed
 377 000a 7047     		bx	lr
 378              	.L25:
 379              		.align	2
 380              	.L24:
 381 000c 00003A40 		.word	1077542912
 382              		.cfi_endproc
 383              	.LFE5:
 384              		.size	IR_ADC_Stop, .-IR_ADC_Stop
 385              		.section	.text.IR_ADC_StartConvert,"ax",%progbits
 386              		.align	2
 387              		.global	IR_ADC_StartConvert
 388              		.code	16
 389              		.thumb_func
 390              		.type	IR_ADC_StartConvert, %function
 391              	IR_ADC_StartConvert:
 392              	.LFB6:
 369:.\Generated_Source\PSoC4/IR_ADC.c **** 
 370:.\Generated_Source\PSoC4/IR_ADC.c **** 
 371:.\Generated_Source\PSoC4/IR_ADC.c **** /*******************************************************************************
 372:.\Generated_Source\PSoC4/IR_ADC.c **** * Function Name: IR_ADC_StartConvert
 373:.\Generated_Source\PSoC4/IR_ADC.c **** ********************************************************************************
 374:.\Generated_Source\PSoC4/IR_ADC.c **** *
 375:.\Generated_Source\PSoC4/IR_ADC.c **** * Summary:
 376:.\Generated_Source\PSoC4/IR_ADC.c **** *  Description:
 377:.\Generated_Source\PSoC4/IR_ADC.c **** *  For free running mode, this API starts the conversion process and it
 378:.\Generated_Source\PSoC4/IR_ADC.c **** *  runs continuously.
 379:.\Generated_Source\PSoC4/IR_ADC.c **** *
 380:.\Generated_Source\PSoC4/IR_ADC.c **** *  In a triggered mode, this routine triggers every conversion by
 381:.\Generated_Source\PSoC4/IR_ADC.c **** *  writing into the FW_TRIGGER bit in SAR_START_CTRL reg. In triggered mode,
 382:.\Generated_Source\PSoC4/IR_ADC.c **** *  every conversion has to start by this API.
 383:.\Generated_Source\PSoC4/IR_ADC.c **** *
 384:.\Generated_Source\PSoC4/IR_ADC.c **** * Parameters:
 385:.\Generated_Source\PSoC4/IR_ADC.c **** *  None.
 386:.\Generated_Source\PSoC4/IR_ADC.c **** *
 387:.\Generated_Source\PSoC4/IR_ADC.c **** * Return:
 388:.\Generated_Source\PSoC4/IR_ADC.c **** *  None.
 389:.\Generated_Source\PSoC4/IR_ADC.c **** *
 390:.\Generated_Source\PSoC4/IR_ADC.c **** *******************************************************************************/
 391:.\Generated_Source\PSoC4/IR_ADC.c **** void IR_ADC_StartConvert(void)
 392:.\Generated_Source\PSoC4/IR_ADC.c **** {
 393              		.loc 1 392 0
 394              		.cfi_startproc
 393:.\Generated_Source\PSoC4/IR_ADC.c ****     #if(IR_ADC_DEFAULT_SAMPLE_MODE_SEL == IR_ADC__FREERUNNING)
ARM GAS  C:\Users\alvin\AppData\Local\Temp\cc3v1X7c.s 			page 15


 394:.\Generated_Source\PSoC4/IR_ADC.c ****         IR_ADC_SAR_SAMPLE_CTRL_REG |= IR_ADC_CONTINUOUS_EN;
 395              		.loc 1 394 0
 396 0000 034A     		ldr	r2, .L27
 397 0002 1368     		ldr	r3, [r2]
 398 0004 8021     		mov	r1, #128
 399 0006 4902     		lsl	r1, r1, #9
 400 0008 0B43     		orr	r3, r1
 401 000a 1360     		str	r3, [r2]
 395:.\Generated_Source\PSoC4/IR_ADC.c ****     #else /* Firmware trigger */
 396:.\Generated_Source\PSoC4/IR_ADC.c ****         IR_ADC_SAR_START_CTRL_REG = IR_ADC_FW_TRIGGER;
 397:.\Generated_Source\PSoC4/IR_ADC.c ****     #endif /* End IR_ADC_DEFAULT_SAMPLE_MODE == IR_ADC__FREERUNNING */
 398:.\Generated_Source\PSoC4/IR_ADC.c **** 
 399:.\Generated_Source\PSoC4/IR_ADC.c **** }
 402              		.loc 1 399 0
 403              		@ sp needed
 404 000c 7047     		bx	lr
 405              	.L28:
 406 000e C046     		.align	2
 407              	.L27:
 408 0010 04003A40 		.word	1077542916
 409              		.cfi_endproc
 410              	.LFE6:
 411              		.size	IR_ADC_StartConvert, .-IR_ADC_StartConvert
 412              		.section	.text.IR_ADC_StopConvert,"ax",%progbits
 413              		.align	2
 414              		.global	IR_ADC_StopConvert
 415              		.code	16
 416              		.thumb_func
 417              		.type	IR_ADC_StopConvert, %function
 418              	IR_ADC_StopConvert:
 419              	.LFB7:
 400:.\Generated_Source\PSoC4/IR_ADC.c **** 
 401:.\Generated_Source\PSoC4/IR_ADC.c **** 
 402:.\Generated_Source\PSoC4/IR_ADC.c **** /*******************************************************************************
 403:.\Generated_Source\PSoC4/IR_ADC.c **** * Function Name: IR_ADC_StopConvert
 404:.\Generated_Source\PSoC4/IR_ADC.c **** ********************************************************************************
 405:.\Generated_Source\PSoC4/IR_ADC.c **** *
 406:.\Generated_Source\PSoC4/IR_ADC.c **** * Summary:
 407:.\Generated_Source\PSoC4/IR_ADC.c **** *  Forces the ADC to stop all conversions.
 408:.\Generated_Source\PSoC4/IR_ADC.c **** *
 409:.\Generated_Source\PSoC4/IR_ADC.c **** * Parameters:
 410:.\Generated_Source\PSoC4/IR_ADC.c **** *  None.
 411:.\Generated_Source\PSoC4/IR_ADC.c **** *
 412:.\Generated_Source\PSoC4/IR_ADC.c **** * Return:
 413:.\Generated_Source\PSoC4/IR_ADC.c **** *  None.
 414:.\Generated_Source\PSoC4/IR_ADC.c **** *
 415:.\Generated_Source\PSoC4/IR_ADC.c **** *******************************************************************************/
 416:.\Generated_Source\PSoC4/IR_ADC.c **** void IR_ADC_StopConvert(void)
 417:.\Generated_Source\PSoC4/IR_ADC.c **** {
 420              		.loc 1 417 0
 421              		.cfi_startproc
 418:.\Generated_Source\PSoC4/IR_ADC.c ****     #if(IR_ADC_DEFAULT_SAMPLE_MODE_SEL == IR_ADC__FREERUNNING)
 419:.\Generated_Source\PSoC4/IR_ADC.c ****         IR_ADC_SAR_SAMPLE_CTRL_REG &= (uint32)(~IR_ADC_CONTINUOUS_EN);
 422              		.loc 1 419 0
 423 0000 024A     		ldr	r2, .L30
 424 0002 1168     		ldr	r1, [r2]
 425 0004 024B     		ldr	r3, .L30+4
ARM GAS  C:\Users\alvin\AppData\Local\Temp\cc3v1X7c.s 			page 16


 426 0006 0B40     		and	r3, r1
 427 0008 1360     		str	r3, [r2]
 420:.\Generated_Source\PSoC4/IR_ADC.c ****     #endif /* IR_ADC_DEFAULT_SAMPLE_MODE == IR_ADC__FREERUNNING */
 421:.\Generated_Source\PSoC4/IR_ADC.c **** }
 428              		.loc 1 421 0
 429              		@ sp needed
 430 000a 7047     		bx	lr
 431              	.L31:
 432              		.align	2
 433              	.L30:
 434 000c 04003A40 		.word	1077542916
 435 0010 FFFFFEFF 		.word	-65537
 436              		.cfi_endproc
 437              	.LFE7:
 438              		.size	IR_ADC_StopConvert, .-IR_ADC_StopConvert
 439              		.section	.text.IR_ADC_IsEndConversion,"ax",%progbits
 440              		.align	2
 441              		.global	IR_ADC_IsEndConversion
 442              		.code	16
 443              		.thumb_func
 444              		.type	IR_ADC_IsEndConversion, %function
 445              	IR_ADC_IsEndConversion:
 446              	.LFB8:
 422:.\Generated_Source\PSoC4/IR_ADC.c **** 
 423:.\Generated_Source\PSoC4/IR_ADC.c **** 
 424:.\Generated_Source\PSoC4/IR_ADC.c **** /*******************************************************************************
 425:.\Generated_Source\PSoC4/IR_ADC.c **** * Function Name: IR_ADC_IsEndConversion
 426:.\Generated_Source\PSoC4/IR_ADC.c **** ********************************************************************************
 427:.\Generated_Source\PSoC4/IR_ADC.c **** *
 428:.\Generated_Source\PSoC4/IR_ADC.c **** * Summary:
 429:.\Generated_Source\PSoC4/IR_ADC.c **** *  Description: Checks for ADC end of conversion for the case one
 430:.\Generated_Source\PSoC4/IR_ADC.c **** *  channel and end of scan for the case of multiple channels. It acts
 431:.\Generated_Source\PSoC4/IR_ADC.c **** *  as a software version of the EOC. This function provides the
 432:.\Generated_Source\PSoC4/IR_ADC.c **** *  programmer with two options. In one mode this function
 433:.\Generated_Source\PSoC4/IR_ADC.c **** *  immediately returns with the conversion status. In the other mode,
 434:.\Generated_Source\PSoC4/IR_ADC.c **** *  the function does not return (blocking) until the conversion has
 435:.\Generated_Source\PSoC4/IR_ADC.c **** *  completed.
 436:.\Generated_Source\PSoC4/IR_ADC.c **** *
 437:.\Generated_Source\PSoC4/IR_ADC.c **** * Parameters:
 438:.\Generated_Source\PSoC4/IR_ADC.c **** *  ADC_RETURN_STATUS        -> Immediately returns conversion result status
 439:.\Generated_Source\PSoC4/IR_ADC.c **** *  ADC_WAIT_FOR_RESULT      -> Does not return until ADC complete
 440:.\Generated_Source\PSoC4/IR_ADC.c **** *  ADC_RETURN_STATUS_INJ    -> Immediately returns conversion result status
 441:.\Generated_Source\PSoC4/IR_ADC.c **** *                              for injection channel
 442:.\Generated_Source\PSoC4/IR_ADC.c **** *  ADC_WAIT_FOR_RESULT_INJ  -> Does not return until ADC completes injection
 443:.\Generated_Source\PSoC4/IR_ADC.c **** *                              channel conversion
 444:.\Generated_Source\PSoC4/IR_ADC.c **** *
 445:.\Generated_Source\PSoC4/IR_ADC.c **** * Return:
 446:.\Generated_Source\PSoC4/IR_ADC.c **** *  If a non-zero value is returned, the last conversion or scan has completed.
 447:.\Generated_Source\PSoC4/IR_ADC.c **** *  If the returned value is zero, the ADC is still in the process of a scan.
 448:.\Generated_Source\PSoC4/IR_ADC.c **** *
 449:.\Generated_Source\PSoC4/IR_ADC.c **** *******************************************************************************/
 450:.\Generated_Source\PSoC4/IR_ADC.c **** uint32 IR_ADC_IsEndConversion(uint32 retMode)
 451:.\Generated_Source\PSoC4/IR_ADC.c **** {
 447              		.loc 1 451 0
 448              		.cfi_startproc
 449              	.LVL22:
 450 0000 021C     		mov	r2, r0
ARM GAS  C:\Users\alvin\AppData\Local\Temp\cc3v1X7c.s 			page 17


 451              	.LVL23:
 452:.\Generated_Source\PSoC4/IR_ADC.c ****     uint32 status = 0u;
 453:.\Generated_Source\PSoC4/IR_ADC.c **** 
 454:.\Generated_Source\PSoC4/IR_ADC.c ****     if((retMode & (IR_ADC_RETURN_STATUS | IR_ADC_WAIT_FOR_RESULT)) != 0u)
 452              		.loc 1 454 0
 453 0002 8307     		lsl	r3, r0, #30
 454 0004 0CD0     		beq	.L36
 455              	.LVL24:
 456              	.L35:
 455:.\Generated_Source\PSoC4/IR_ADC.c ****     {
 456:.\Generated_Source\PSoC4/IR_ADC.c ****         do
 457:.\Generated_Source\PSoC4/IR_ADC.c ****         {
 458:.\Generated_Source\PSoC4/IR_ADC.c ****             status = IR_ADC_SAR_INTR_REG & IR_ADC_EOS_MASK;
 457              		.loc 1 458 0 discriminator 2
 458 0006 074B     		ldr	r3, .L37
 459 0008 1B68     		ldr	r3, [r3]
 460 000a 0120     		mov	r0, #1
 461 000c 1840     		and	r0, r3
 462              	.LVL25:
 459:.\Generated_Source\PSoC4/IR_ADC.c ****         }while((status == 0u) && ((retMode & IR_ADC_WAIT_FOR_RESULT) != 0u));
 463              		.loc 1 459 0 discriminator 2
 464 000e 01D1     		bne	.L34
 465              		.loc 1 459 0 is_stmt 0 discriminator 1
 466 0010 9307     		lsl	r3, r2, #30
 467 0012 F8D4     		bmi	.L35
 468              	.L34:
 460:.\Generated_Source\PSoC4/IR_ADC.c **** 
 461:.\Generated_Source\PSoC4/IR_ADC.c ****         if(status != 0u)
 469              		.loc 1 461 0 is_stmt 1
 470 0014 0028     		cmp	r0, #0
 471 0016 04D0     		beq	.L33
 462:.\Generated_Source\PSoC4/IR_ADC.c ****         {
 463:.\Generated_Source\PSoC4/IR_ADC.c ****             /* Clear EOS bit */
 464:.\Generated_Source\PSoC4/IR_ADC.c ****             IR_ADC_SAR_INTR_REG = IR_ADC_EOS_MASK;
 472              		.loc 1 464 0
 473 0018 0122     		mov	r2, #1
 474              	.LVL26:
 475 001a 024B     		ldr	r3, .L37
 476 001c 1A60     		str	r2, [r3]
 477 001e 00E0     		b	.L33
 478              	.LVL27:
 479              	.L36:
 452:.\Generated_Source\PSoC4/IR_ADC.c **** 
 480              		.loc 1 452 0
 481 0020 0020     		mov	r0, #0
 482              	.LVL28:
 483              	.L33:
 465:.\Generated_Source\PSoC4/IR_ADC.c ****         }
 466:.\Generated_Source\PSoC4/IR_ADC.c ****     }
 467:.\Generated_Source\PSoC4/IR_ADC.c **** 
 468:.\Generated_Source\PSoC4/IR_ADC.c ****     #if(IR_ADC_INJ_CHANNEL_ENABLED)
 469:.\Generated_Source\PSoC4/IR_ADC.c ****         if((retMode & (IR_ADC_RETURN_STATUS_INJ | IR_ADC_WAIT_FOR_RESULT_INJ)) != 0u)
 470:.\Generated_Source\PSoC4/IR_ADC.c ****         {
 471:.\Generated_Source\PSoC4/IR_ADC.c ****             do
 472:.\Generated_Source\PSoC4/IR_ADC.c ****             {
 473:.\Generated_Source\PSoC4/IR_ADC.c ****                 status |= IR_ADC_SAR_INTR_REG & IR_ADC_INJ_EOC_MASK;
 474:.\Generated_Source\PSoC4/IR_ADC.c ****             }while(((status & IR_ADC_INJ_EOC_MASK) == 0u) &&
ARM GAS  C:\Users\alvin\AppData\Local\Temp\cc3v1X7c.s 			page 18


 475:.\Generated_Source\PSoC4/IR_ADC.c ****                    ((retMode & IR_ADC_WAIT_FOR_RESULT_INJ) != 0u));
 476:.\Generated_Source\PSoC4/IR_ADC.c **** 
 477:.\Generated_Source\PSoC4/IR_ADC.c ****             if((status & IR_ADC_INJ_EOC_MASK) != 0u)
 478:.\Generated_Source\PSoC4/IR_ADC.c ****             {
 479:.\Generated_Source\PSoC4/IR_ADC.c ****                 /* Clear Injection EOS bit */
 480:.\Generated_Source\PSoC4/IR_ADC.c ****                 IR_ADC_SAR_INTR_REG = IR_ADC_INJ_EOC_MASK;
 481:.\Generated_Source\PSoC4/IR_ADC.c ****             }
 482:.\Generated_Source\PSoC4/IR_ADC.c ****         }
 483:.\Generated_Source\PSoC4/IR_ADC.c ****     #endif /* IR_ADC_INJ_CHANNEL_ENABLED */
 484:.\Generated_Source\PSoC4/IR_ADC.c **** 
 485:.\Generated_Source\PSoC4/IR_ADC.c ****     return (status);
 486:.\Generated_Source\PSoC4/IR_ADC.c **** }
 484              		.loc 1 486 0
 485              		@ sp needed
 486 0022 7047     		bx	lr
 487              	.L38:
 488              		.align	2
 489              	.L37:
 490 0024 10023A40 		.word	1077543440
 491              		.cfi_endproc
 492              	.LFE8:
 493              		.size	IR_ADC_IsEndConversion, .-IR_ADC_IsEndConversion
 494              		.section	.text.IR_ADC_GetResult16,"ax",%progbits
 495              		.align	2
 496              		.global	IR_ADC_GetResult16
 497              		.code	16
 498              		.thumb_func
 499              		.type	IR_ADC_GetResult16, %function
 500              	IR_ADC_GetResult16:
 501              	.LFB9:
 487:.\Generated_Source\PSoC4/IR_ADC.c **** 
 488:.\Generated_Source\PSoC4/IR_ADC.c **** 
 489:.\Generated_Source\PSoC4/IR_ADC.c **** /*******************************************************************************
 490:.\Generated_Source\PSoC4/IR_ADC.c **** * Function Name: IR_ADC_GetResult16
 491:.\Generated_Source\PSoC4/IR_ADC.c **** ********************************************************************************
 492:.\Generated_Source\PSoC4/IR_ADC.c **** *
 493:.\Generated_Source\PSoC4/IR_ADC.c **** * Summary:
 494:.\Generated_Source\PSoC4/IR_ADC.c **** *  Gets the data available in the SAR DATA register.
 495:.\Generated_Source\PSoC4/IR_ADC.c **** *
 496:.\Generated_Source\PSoC4/IR_ADC.c **** * Parameters:
 497:.\Generated_Source\PSoC4/IR_ADC.c **** *  chan: The ADC channel in which to return the result. The first channel
 498:.\Generated_Source\PSoC4/IR_ADC.c **** *  is 0 and the injection channel if enabled is the number of valid channels.
 499:.\Generated_Source\PSoC4/IR_ADC.c **** *
 500:.\Generated_Source\PSoC4/IR_ADC.c **** * Return:
 501:.\Generated_Source\PSoC4/IR_ADC.c **** *  Returns converted data as a signed 16-bit integer
 502:.\Generated_Source\PSoC4/IR_ADC.c **** *
 503:.\Generated_Source\PSoC4/IR_ADC.c **** *******************************************************************************/
 504:.\Generated_Source\PSoC4/IR_ADC.c **** int16 IR_ADC_GetResult16(uint32 chan)
 505:.\Generated_Source\PSoC4/IR_ADC.c **** {
 502              		.loc 1 505 0
 503              		.cfi_startproc
 504              	.LVL29:
 505 0000 10B5     		push	{r4, lr}
 506              		.cfi_def_cfa_offset 8
 507              		.cfi_offset 4, -8
 508              		.cfi_offset 14, -4
 509 0002 041E     		sub	r4, r0, #0
ARM GAS  C:\Users\alvin\AppData\Local\Temp\cc3v1X7c.s 			page 19


 506:.\Generated_Source\PSoC4/IR_ADC.c ****     uint32 result;
 507:.\Generated_Source\PSoC4/IR_ADC.c **** 
 508:.\Generated_Source\PSoC4/IR_ADC.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 509:.\Generated_Source\PSoC4/IR_ADC.c ****     CYASSERT(chan < IR_ADC_TOTAL_CHANNELS_NUM);
 510              		.loc 1 509 0
 511 0004 012C     		cmp	r4, #1
 512 0006 02D9     		bls	.L40
 513              		.loc 1 509 0 is_stmt 0 discriminator 1
 514 0008 0020     		mov	r0, #0
 515              	.LVL30:
 516 000a FFF7FEFF 		bl	CyHalt
 517              	.LVL31:
 518              	.L40:
 510:.\Generated_Source\PSoC4/IR_ADC.c **** 
 511:.\Generated_Source\PSoC4/IR_ADC.c ****     if(chan < IR_ADC_SEQUENCED_CHANNELS_NUM)
 519              		.loc 1 511 0 is_stmt 1
 520 000e 012C     		cmp	r4, #1
 521 0010 07D8     		bhi	.L42
 512:.\Generated_Source\PSoC4/IR_ADC.c ****     {
 513:.\Generated_Source\PSoC4/IR_ADC.c ****         result = CY_GET_REG32((reg32 *)(IR_ADC_SAR_CHAN_RESULT_IND + (uint32)(chan << 2u))) &
 522              		.loc 1 513 0
 523 0012 A400     		lsl	r4, r4, #2
 524              	.LVL32:
 525 0014 044B     		ldr	r3, .L43
 526 0016 9C46     		mov	ip, r3
 527 0018 6444     		add	r4, r4, ip
 528 001a 2068     		ldr	r0, [r4]
 529 001c 0004     		lsl	r0, r0, #16
 530 001e 000C     		lsr	r0, r0, #16
 531              	.LVL33:
 532 0020 00E0     		b	.L41
 533              	.LVL34:
 534              	.L42:
 514:.\Generated_Source\PSoC4/IR_ADC.c ****                 IR_ADC_RESULT_MASK;
 515:.\Generated_Source\PSoC4/IR_ADC.c ****     }
 516:.\Generated_Source\PSoC4/IR_ADC.c ****     else
 517:.\Generated_Source\PSoC4/IR_ADC.c ****     {
 518:.\Generated_Source\PSoC4/IR_ADC.c ****         #if(IR_ADC_INJ_CHANNEL_ENABLED)
 519:.\Generated_Source\PSoC4/IR_ADC.c ****             result = IR_ADC_SAR_INJ_RESULT_REG & IR_ADC_RESULT_MASK;
 520:.\Generated_Source\PSoC4/IR_ADC.c ****         #else
 521:.\Generated_Source\PSoC4/IR_ADC.c ****             result = 0u;
 535              		.loc 1 521 0
 536 0022 0020     		mov	r0, #0
 537              	.LVL35:
 538              	.L41:
 522:.\Generated_Source\PSoC4/IR_ADC.c ****         #endif /* IR_ADC_INJ_CHANNEL_ENABLED */
 523:.\Generated_Source\PSoC4/IR_ADC.c ****     }
 524:.\Generated_Source\PSoC4/IR_ADC.c **** 
 525:.\Generated_Source\PSoC4/IR_ADC.c ****     return ( (int16)result );
 539              		.loc 1 525 0
 540 0024 00B2     		sxth	r0, r0
 541              	.LVL36:
 526:.\Generated_Source\PSoC4/IR_ADC.c **** }
 542              		.loc 1 526 0
 543              		@ sp needed
 544 0026 10BD     		pop	{r4, pc}
 545              	.L44:
ARM GAS  C:\Users\alvin\AppData\Local\Temp\cc3v1X7c.s 			page 20


 546              		.align	2
 547              	.L43:
 548 0028 80013A40 		.word	1077543296
 549              		.cfi_endproc
 550              	.LFE9:
 551              		.size	IR_ADC_GetResult16, .-IR_ADC_GetResult16
 552              		.section	.text.IR_ADC_SetChanMask,"ax",%progbits
 553              		.align	2
 554              		.global	IR_ADC_SetChanMask
 555              		.code	16
 556              		.thumb_func
 557              		.type	IR_ADC_SetChanMask, %function
 558              	IR_ADC_SetChanMask:
 559              	.LFB10:
 527:.\Generated_Source\PSoC4/IR_ADC.c **** 
 528:.\Generated_Source\PSoC4/IR_ADC.c **** 
 529:.\Generated_Source\PSoC4/IR_ADC.c **** /*******************************************************************************
 530:.\Generated_Source\PSoC4/IR_ADC.c **** * Function Name: IR_ADC_SetChanMask
 531:.\Generated_Source\PSoC4/IR_ADC.c **** ********************************************************************************
 532:.\Generated_Source\PSoC4/IR_ADC.c **** *
 533:.\Generated_Source\PSoC4/IR_ADC.c **** * Summary:
 534:.\Generated_Source\PSoC4/IR_ADC.c **** *  Sets the channel enable mask.
 535:.\Generated_Source\PSoC4/IR_ADC.c **** *
 536:.\Generated_Source\PSoC4/IR_ADC.c **** * Parameters:
 537:.\Generated_Source\PSoC4/IR_ADC.c **** *  mask: Sets which channels that will be
 538:.\Generated_Source\PSoC4/IR_ADC.c **** *  scanned. Setting bits for channels that do not exist will have no
 539:.\Generated_Source\PSoC4/IR_ADC.c **** *  effect. For example, if only 6 channels were enabled, setting a
 540:.\Generated_Source\PSoC4/IR_ADC.c **** *  mask of 0x0103 would only enable the last two channels (0 and 1).
 541:.\Generated_Source\PSoC4/IR_ADC.c **** *  This API will not enable the injection channel.
 542:.\Generated_Source\PSoC4/IR_ADC.c **** *  Examples: If the component is setup to sequence through 8
 543:.\Generated_Source\PSoC4/IR_ADC.c **** *  channels, a mask of 0x000F would enable channels 0, 1, 2, and 3.
 544:.\Generated_Source\PSoC4/IR_ADC.c **** *
 545:.\Generated_Source\PSoC4/IR_ADC.c **** * Return:
 546:.\Generated_Source\PSoC4/IR_ADC.c **** *  None.
 547:.\Generated_Source\PSoC4/IR_ADC.c **** *
 548:.\Generated_Source\PSoC4/IR_ADC.c **** *******************************************************************************/
 549:.\Generated_Source\PSoC4/IR_ADC.c **** void IR_ADC_SetChanMask(uint32 mask)
 550:.\Generated_Source\PSoC4/IR_ADC.c **** {
 560              		.loc 1 550 0
 561              		.cfi_startproc
 562              	.LVL37:
 551:.\Generated_Source\PSoC4/IR_ADC.c ****     IR_ADC_SAR_CHAN_EN_REG = mask & IR_ADC_MAX_CHANNELS_EN_MASK;
 563              		.loc 1 551 0
 564 0000 0323     		mov	r3, #3
 565 0002 1840     		and	r0, r3
 566              	.LVL38:
 567 0004 014B     		ldr	r3, .L46
 568 0006 1860     		str	r0, [r3]
 552:.\Generated_Source\PSoC4/IR_ADC.c **** }
 569              		.loc 1 552 0
 570              		@ sp needed
 571 0008 7047     		bx	lr
 572              	.L47:
 573 000a C046     		.align	2
 574              	.L46:
 575 000c 20003A40 		.word	1077542944
 576              		.cfi_endproc
ARM GAS  C:\Users\alvin\AppData\Local\Temp\cc3v1X7c.s 			page 21


 577              	.LFE10:
 578              		.size	IR_ADC_SetChanMask, .-IR_ADC_SetChanMask
 579              		.section	.text.IR_ADC_SetLowLimit,"ax",%progbits
 580              		.align	2
 581              		.global	IR_ADC_SetLowLimit
 582              		.code	16
 583              		.thumb_func
 584              		.type	IR_ADC_SetLowLimit, %function
 585              	IR_ADC_SetLowLimit:
 586              	.LFB11:
 553:.\Generated_Source\PSoC4/IR_ADC.c **** 
 554:.\Generated_Source\PSoC4/IR_ADC.c **** #if(IR_ADC_INJ_CHANNEL_ENABLED)
 555:.\Generated_Source\PSoC4/IR_ADC.c **** 
 556:.\Generated_Source\PSoC4/IR_ADC.c **** 
 557:.\Generated_Source\PSoC4/IR_ADC.c ****     /*******************************************************************************
 558:.\Generated_Source\PSoC4/IR_ADC.c ****     * Function Name: IR_ADC_EnableInjection
 559:.\Generated_Source\PSoC4/IR_ADC.c ****     ********************************************************************************
 560:.\Generated_Source\PSoC4/IR_ADC.c ****     *
 561:.\Generated_Source\PSoC4/IR_ADC.c ****     * Summary:
 562:.\Generated_Source\PSoC4/IR_ADC.c ****     *  Enables the injection channel for the next scan only.
 563:.\Generated_Source\PSoC4/IR_ADC.c ****     *
 564:.\Generated_Source\PSoC4/IR_ADC.c ****     * Parameters:
 565:.\Generated_Source\PSoC4/IR_ADC.c ****     *  None.
 566:.\Generated_Source\PSoC4/IR_ADC.c ****     *
 567:.\Generated_Source\PSoC4/IR_ADC.c ****     * Return:
 568:.\Generated_Source\PSoC4/IR_ADC.c ****     *  None.
 569:.\Generated_Source\PSoC4/IR_ADC.c ****     *
 570:.\Generated_Source\PSoC4/IR_ADC.c ****     *******************************************************************************/
 571:.\Generated_Source\PSoC4/IR_ADC.c ****     void IR_ADC_EnableInjection(void)
 572:.\Generated_Source\PSoC4/IR_ADC.c ****     {
 573:.\Generated_Source\PSoC4/IR_ADC.c ****         IR_ADC_SAR_INJ_CHAN_CONFIG_REG |= IR_ADC_INJ_CHAN_EN;
 574:.\Generated_Source\PSoC4/IR_ADC.c ****     }
 575:.\Generated_Source\PSoC4/IR_ADC.c **** 
 576:.\Generated_Source\PSoC4/IR_ADC.c **** #endif /* IR_ADC_INJ_CHANNEL_ENABLED */
 577:.\Generated_Source\PSoC4/IR_ADC.c **** 
 578:.\Generated_Source\PSoC4/IR_ADC.c **** 
 579:.\Generated_Source\PSoC4/IR_ADC.c **** /*******************************************************************************
 580:.\Generated_Source\PSoC4/IR_ADC.c **** * Function Name: IR_ADC_SetLowLimit
 581:.\Generated_Source\PSoC4/IR_ADC.c **** ********************************************************************************
 582:.\Generated_Source\PSoC4/IR_ADC.c **** *
 583:.\Generated_Source\PSoC4/IR_ADC.c **** * Summary:
 584:.\Generated_Source\PSoC4/IR_ADC.c **** *  Sets the low limit parameter for a limit condition.
 585:.\Generated_Source\PSoC4/IR_ADC.c **** *
 586:.\Generated_Source\PSoC4/IR_ADC.c **** * Parameters:
 587:.\Generated_Source\PSoC4/IR_ADC.c **** *  lowLimit: The low limit for a limit condition.
 588:.\Generated_Source\PSoC4/IR_ADC.c **** *
 589:.\Generated_Source\PSoC4/IR_ADC.c **** * Return:
 590:.\Generated_Source\PSoC4/IR_ADC.c **** *  None.
 591:.\Generated_Source\PSoC4/IR_ADC.c **** *
 592:.\Generated_Source\PSoC4/IR_ADC.c **** *******************************************************************************/
 593:.\Generated_Source\PSoC4/IR_ADC.c **** void IR_ADC_SetLowLimit(uint32 lowLimit)
 594:.\Generated_Source\PSoC4/IR_ADC.c **** {
 587              		.loc 1 594 0
 588              		.cfi_startproc
 589              	.LVL39:
 595:.\Generated_Source\PSoC4/IR_ADC.c ****     IR_ADC_SAR_RANGE_THRES_REG &= (uint32)(~IR_ADC_RANGE_LOW_MASK);
 590              		.loc 1 595 0
ARM GAS  C:\Users\alvin\AppData\Local\Temp\cc3v1X7c.s 			page 22


 591 0000 054A     		ldr	r2, .L49
 592 0002 1368     		ldr	r3, [r2]
 593 0004 1B0C     		lsr	r3, r3, #16
 594 0006 1B04     		lsl	r3, r3, #16
 595 0008 1360     		str	r3, [r2]
 596:.\Generated_Source\PSoC4/IR_ADC.c ****     IR_ADC_SAR_RANGE_THRES_REG |= lowLimit & IR_ADC_RANGE_LOW_MASK;
 596              		.loc 1 596 0
 597 000a 1368     		ldr	r3, [r2]
 598 000c 0004     		lsl	r0, r0, #16
 599              	.LVL40:
 600 000e 000C     		lsr	r0, r0, #16
 601 0010 1843     		orr	r0, r3
 602 0012 1060     		str	r0, [r2]
 597:.\Generated_Source\PSoC4/IR_ADC.c **** }
 603              		.loc 1 597 0
 604              		@ sp needed
 605 0014 7047     		bx	lr
 606              	.L50:
 607 0016 C046     		.align	2
 608              	.L49:
 609 0018 18003A40 		.word	1077542936
 610              		.cfi_endproc
 611              	.LFE11:
 612              		.size	IR_ADC_SetLowLimit, .-IR_ADC_SetLowLimit
 613              		.section	.text.IR_ADC_SetHighLimit,"ax",%progbits
 614              		.align	2
 615              		.global	IR_ADC_SetHighLimit
 616              		.code	16
 617              		.thumb_func
 618              		.type	IR_ADC_SetHighLimit, %function
 619              	IR_ADC_SetHighLimit:
 620              	.LFB12:
 598:.\Generated_Source\PSoC4/IR_ADC.c **** 
 599:.\Generated_Source\PSoC4/IR_ADC.c **** 
 600:.\Generated_Source\PSoC4/IR_ADC.c **** /*******************************************************************************
 601:.\Generated_Source\PSoC4/IR_ADC.c **** * Function Name: IR_ADC_SetHighLimit
 602:.\Generated_Source\PSoC4/IR_ADC.c **** ********************************************************************************
 603:.\Generated_Source\PSoC4/IR_ADC.c **** *
 604:.\Generated_Source\PSoC4/IR_ADC.c **** * Summary:
 605:.\Generated_Source\PSoC4/IR_ADC.c **** *  Sets the low limit parameter for a limit condition.
 606:.\Generated_Source\PSoC4/IR_ADC.c **** *
 607:.\Generated_Source\PSoC4/IR_ADC.c **** * Parameters:
 608:.\Generated_Source\PSoC4/IR_ADC.c **** *  highLimit: The high limit for a limit condition.
 609:.\Generated_Source\PSoC4/IR_ADC.c **** *
 610:.\Generated_Source\PSoC4/IR_ADC.c **** * Return:
 611:.\Generated_Source\PSoC4/IR_ADC.c **** *  None.
 612:.\Generated_Source\PSoC4/IR_ADC.c **** *
 613:.\Generated_Source\PSoC4/IR_ADC.c **** *******************************************************************************/
 614:.\Generated_Source\PSoC4/IR_ADC.c **** void IR_ADC_SetHighLimit(uint32 highLimit)
 615:.\Generated_Source\PSoC4/IR_ADC.c **** {
 621              		.loc 1 615 0
 622              		.cfi_startproc
 623              	.LVL41:
 616:.\Generated_Source\PSoC4/IR_ADC.c ****     IR_ADC_SAR_RANGE_THRES_REG &= (uint32)(~IR_ADC_RANGE_HIGH_MASK);
 624              		.loc 1 616 0
 625 0000 044A     		ldr	r2, .L52
 626 0002 1368     		ldr	r3, [r2]
ARM GAS  C:\Users\alvin\AppData\Local\Temp\cc3v1X7c.s 			page 23


 627 0004 1B04     		lsl	r3, r3, #16
 628 0006 1B0C     		lsr	r3, r3, #16
 629 0008 1360     		str	r3, [r2]
 617:.\Generated_Source\PSoC4/IR_ADC.c ****     IR_ADC_SAR_RANGE_THRES_REG |= (uint32)(highLimit << IR_ADC_RANGE_HIGH_OFFSET);
 630              		.loc 1 617 0
 631 000a 1368     		ldr	r3, [r2]
 632 000c 0004     		lsl	r0, r0, #16
 633              	.LVL42:
 634 000e 1843     		orr	r0, r3
 635 0010 1060     		str	r0, [r2]
 618:.\Generated_Source\PSoC4/IR_ADC.c **** }
 636              		.loc 1 618 0
 637              		@ sp needed
 638 0012 7047     		bx	lr
 639              	.L53:
 640              		.align	2
 641              	.L52:
 642 0014 18003A40 		.word	1077542936
 643              		.cfi_endproc
 644              	.LFE12:
 645              		.size	IR_ADC_SetHighLimit, .-IR_ADC_SetHighLimit
 646              		.section	.text.IR_ADC_SetLimitMask,"ax",%progbits
 647              		.align	2
 648              		.global	IR_ADC_SetLimitMask
 649              		.code	16
 650              		.thumb_func
 651              		.type	IR_ADC_SetLimitMask, %function
 652              	IR_ADC_SetLimitMask:
 653              	.LFB13:
 619:.\Generated_Source\PSoC4/IR_ADC.c **** 
 620:.\Generated_Source\PSoC4/IR_ADC.c **** 
 621:.\Generated_Source\PSoC4/IR_ADC.c **** /*******************************************************************************
 622:.\Generated_Source\PSoC4/IR_ADC.c **** * Function Name: IR_ADC_SetLimitMask
 623:.\Generated_Source\PSoC4/IR_ADC.c **** ********************************************************************************
 624:.\Generated_Source\PSoC4/IR_ADC.c **** *
 625:.\Generated_Source\PSoC4/IR_ADC.c **** * Summary:
 626:.\Generated_Source\PSoC4/IR_ADC.c **** *  Sets the channel limit condition mask.
 627:.\Generated_Source\PSoC4/IR_ADC.c **** *
 628:.\Generated_Source\PSoC4/IR_ADC.c **** * Parameters:
 629:.\Generated_Source\PSoC4/IR_ADC.c **** *  mask: Sets which channels that may cause a
 630:.\Generated_Source\PSoC4/IR_ADC.c **** *  limit condition interrupt. Setting bits for channels that do not exist
 631:.\Generated_Source\PSoC4/IR_ADC.c **** *  will have no effect. For example, if only 6 channels were enabled,
 632:.\Generated_Source\PSoC4/IR_ADC.c **** *  setting a mask of 0x0103 would only enable the last two channels (0 and 1).
 633:.\Generated_Source\PSoC4/IR_ADC.c **** *
 634:.\Generated_Source\PSoC4/IR_ADC.c **** * Return:
 635:.\Generated_Source\PSoC4/IR_ADC.c **** *  None.
 636:.\Generated_Source\PSoC4/IR_ADC.c **** *
 637:.\Generated_Source\PSoC4/IR_ADC.c **** *******************************************************************************/
 638:.\Generated_Source\PSoC4/IR_ADC.c **** void IR_ADC_SetLimitMask(uint32 mask)
 639:.\Generated_Source\PSoC4/IR_ADC.c **** {
 654              		.loc 1 639 0
 655              		.cfi_startproc
 656              	.LVL43:
 640:.\Generated_Source\PSoC4/IR_ADC.c ****     IR_ADC_SAR_RANGE_INTR_MASK_REG = mask & IR_ADC_MAX_CHANNELS_EN_MASK;
 657              		.loc 1 640 0
 658 0000 0323     		mov	r3, #3
 659 0002 1840     		and	r0, r3
ARM GAS  C:\Users\alvin\AppData\Local\Temp\cc3v1X7c.s 			page 24


 660              	.LVL44:
 661 0004 014B     		ldr	r3, .L55
 662 0006 1860     		str	r0, [r3]
 641:.\Generated_Source\PSoC4/IR_ADC.c **** }
 663              		.loc 1 641 0
 664              		@ sp needed
 665 0008 7047     		bx	lr
 666              	.L56:
 667 000a C046     		.align	2
 668              	.L55:
 669 000c 38023A40 		.word	1077543480
 670              		.cfi_endproc
 671              	.LFE13:
 672              		.size	IR_ADC_SetLimitMask, .-IR_ADC_SetLimitMask
 673              		.section	.text.IR_ADC_SetSatMask,"ax",%progbits
 674              		.align	2
 675              		.global	IR_ADC_SetSatMask
 676              		.code	16
 677              		.thumb_func
 678              		.type	IR_ADC_SetSatMask, %function
 679              	IR_ADC_SetSatMask:
 680              	.LFB14:
 642:.\Generated_Source\PSoC4/IR_ADC.c **** 
 643:.\Generated_Source\PSoC4/IR_ADC.c **** 
 644:.\Generated_Source\PSoC4/IR_ADC.c **** /*******************************************************************************
 645:.\Generated_Source\PSoC4/IR_ADC.c **** * Function Name: IR_ADC_SetSatMask
 646:.\Generated_Source\PSoC4/IR_ADC.c **** ********************************************************************************
 647:.\Generated_Source\PSoC4/IR_ADC.c **** *
 648:.\Generated_Source\PSoC4/IR_ADC.c **** * Summary:
 649:.\Generated_Source\PSoC4/IR_ADC.c **** *  Sets the channel saturation event mask.
 650:.\Generated_Source\PSoC4/IR_ADC.c **** *
 651:.\Generated_Source\PSoC4/IR_ADC.c **** * Parameters:
 652:.\Generated_Source\PSoC4/IR_ADC.c **** *  mask: Sets which channels that may cause a
 653:.\Generated_Source\PSoC4/IR_ADC.c **** *  saturation event interrupt. Setting bits for channels that do not exist
 654:.\Generated_Source\PSoC4/IR_ADC.c **** *  will have no effect. For example, if only 8 channels were enabled,
 655:.\Generated_Source\PSoC4/IR_ADC.c **** *  setting a mask of 0x01C0 would only enable two channels (6 and 7).
 656:.\Generated_Source\PSoC4/IR_ADC.c **** *
 657:.\Generated_Source\PSoC4/IR_ADC.c **** * Return:
 658:.\Generated_Source\PSoC4/IR_ADC.c **** *  None.
 659:.\Generated_Source\PSoC4/IR_ADC.c **** *
 660:.\Generated_Source\PSoC4/IR_ADC.c **** *******************************************************************************/
 661:.\Generated_Source\PSoC4/IR_ADC.c **** void IR_ADC_SetSatMask(uint32 mask)
 662:.\Generated_Source\PSoC4/IR_ADC.c **** {
 681              		.loc 1 662 0
 682              		.cfi_startproc
 683              	.LVL45:
 663:.\Generated_Source\PSoC4/IR_ADC.c ****     IR_ADC_SAR_SATURATE_INTR_MASK_REG = mask & IR_ADC_MAX_CHANNELS_EN_MASK;
 684              		.loc 1 663 0
 685 0000 0323     		mov	r3, #3
 686 0002 1840     		and	r0, r3
 687              	.LVL46:
 688 0004 014B     		ldr	r3, .L58
 689 0006 1860     		str	r0, [r3]
 664:.\Generated_Source\PSoC4/IR_ADC.c **** }
 690              		.loc 1 664 0
 691              		@ sp needed
 692 0008 7047     		bx	lr
ARM GAS  C:\Users\alvin\AppData\Local\Temp\cc3v1X7c.s 			page 25


 693              	.L59:
 694 000a C046     		.align	2
 695              	.L58:
 696 000c 28023A40 		.word	1077543464
 697              		.cfi_endproc
 698              	.LFE14:
 699              		.size	IR_ADC_SetSatMask, .-IR_ADC_SetSatMask
 700              		.section	.text.IR_ADC_SetOffset,"ax",%progbits
 701              		.align	2
 702              		.global	IR_ADC_SetOffset
 703              		.code	16
 704              		.thumb_func
 705              		.type	IR_ADC_SetOffset, %function
 706              	IR_ADC_SetOffset:
 707              	.LFB15:
 665:.\Generated_Source\PSoC4/IR_ADC.c **** 
 666:.\Generated_Source\PSoC4/IR_ADC.c **** 
 667:.\Generated_Source\PSoC4/IR_ADC.c **** /*******************************************************************************
 668:.\Generated_Source\PSoC4/IR_ADC.c **** * Function Name: IR_ADC_SetOffset
 669:.\Generated_Source\PSoC4/IR_ADC.c **** ********************************************************************************
 670:.\Generated_Source\PSoC4/IR_ADC.c **** *
 671:.\Generated_Source\PSoC4/IR_ADC.c **** * Summary:
 672:.\Generated_Source\PSoC4/IR_ADC.c **** *   Description: Sets the ADC offset which is used by the functions
 673:.\Generated_Source\PSoC4/IR_ADC.c **** *   ADC_CountsTo_uVolts, ADC_CountsTo_mVolts and ADC_CountsTo_Volts
 674:.\Generated_Source\PSoC4/IR_ADC.c **** *   to substract the offset from the given reading
 675:.\Generated_Source\PSoC4/IR_ADC.c **** *   before calculating the voltage conversion.
 676:.\Generated_Source\PSoC4/IR_ADC.c **** *
 677:.\Generated_Source\PSoC4/IR_ADC.c **** * Parameters:
 678:.\Generated_Source\PSoC4/IR_ADC.c **** *  chan: ADC channel number.
 679:.\Generated_Source\PSoC4/IR_ADC.c **** *  offset: This value is a measured value when the
 680:.\Generated_Source\PSoC4/IR_ADC.c **** *          inputs are shorted or connected to the same input voltage.
 681:.\Generated_Source\PSoC4/IR_ADC.c **** *
 682:.\Generated_Source\PSoC4/IR_ADC.c **** * Return:
 683:.\Generated_Source\PSoC4/IR_ADC.c **** *  None.
 684:.\Generated_Source\PSoC4/IR_ADC.c **** *
 685:.\Generated_Source\PSoC4/IR_ADC.c **** * Global variables:
 686:.\Generated_Source\PSoC4/IR_ADC.c **** *  IR_ADC_Offset:  Modified to set the user provided offset.
 687:.\Generated_Source\PSoC4/IR_ADC.c **** *
 688:.\Generated_Source\PSoC4/IR_ADC.c **** *******************************************************************************/
 689:.\Generated_Source\PSoC4/IR_ADC.c **** void IR_ADC_SetOffset(uint32 chan, int16 offset)
 690:.\Generated_Source\PSoC4/IR_ADC.c **** {
 708              		.loc 1 690 0
 709              		.cfi_startproc
 710              	.LVL47:
 711 0000 38B5     		push	{r3, r4, r5, lr}
 712              		.cfi_def_cfa_offset 16
 713              		.cfi_offset 3, -16
 714              		.cfi_offset 4, -12
 715              		.cfi_offset 5, -8
 716              		.cfi_offset 14, -4
 717 0002 041C     		mov	r4, r0
 718 0004 0D1C     		mov	r5, r1
 691:.\Generated_Source\PSoC4/IR_ADC.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 692:.\Generated_Source\PSoC4/IR_ADC.c ****     CYASSERT(chan < IR_ADC_TOTAL_CHANNELS_NUM);
 719              		.loc 1 692 0
 720 0006 0128     		cmp	r0, #1
 721 0008 02D9     		bls	.L61
ARM GAS  C:\Users\alvin\AppData\Local\Temp\cc3v1X7c.s 			page 26


 722              		.loc 1 692 0 is_stmt 0 discriminator 1
 723 000a 0020     		mov	r0, #0
 724              	.LVL48:
 725 000c FFF7FEFF 		bl	CyHalt
 726              	.LVL49:
 727              	.L61:
 693:.\Generated_Source\PSoC4/IR_ADC.c **** 
 694:.\Generated_Source\PSoC4/IR_ADC.c ****     IR_ADC_offset[chan] = offset;
 728              		.loc 1 694 0 is_stmt 1
 729 0010 6400     		lsl	r4, r4, #1
 730              	.LVL50:
 731 0012 014B     		ldr	r3, .L62
 732 0014 E552     		strh	r5, [r4, r3]
 695:.\Generated_Source\PSoC4/IR_ADC.c **** }
 733              		.loc 1 695 0
 734              		@ sp needed
 735 0016 38BD     		pop	{r3, r4, r5, pc}
 736              	.L63:
 737              		.align	2
 738              	.L62:
 739 0018 00000000 		.word	IR_ADC_offset
 740              		.cfi_endproc
 741              	.LFE15:
 742              		.size	IR_ADC_SetOffset, .-IR_ADC_SetOffset
 743              		.section	.text.IR_ADC_SetGain,"ax",%progbits
 744              		.align	2
 745              		.global	IR_ADC_SetGain
 746              		.code	16
 747              		.thumb_func
 748              		.type	IR_ADC_SetGain, %function
 749              	IR_ADC_SetGain:
 750              	.LFB16:
 696:.\Generated_Source\PSoC4/IR_ADC.c **** 
 697:.\Generated_Source\PSoC4/IR_ADC.c **** 
 698:.\Generated_Source\PSoC4/IR_ADC.c **** /*******************************************************************************
 699:.\Generated_Source\PSoC4/IR_ADC.c **** * Function Name: IR_ADC_SetGain
 700:.\Generated_Source\PSoC4/IR_ADC.c **** ********************************************************************************
 701:.\Generated_Source\PSoC4/IR_ADC.c **** *
 702:.\Generated_Source\PSoC4/IR_ADC.c **** * Summary:
 703:.\Generated_Source\PSoC4/IR_ADC.c **** *  Description: Sets the ADC gain in counts per 10 volt for the voltage
 704:.\Generated_Source\PSoC4/IR_ADC.c **** *  conversion functions below. This value is set by default by the
 705:.\Generated_Source\PSoC4/IR_ADC.c **** *  reference and input range settings. It should only be used to further
 706:.\Generated_Source\PSoC4/IR_ADC.c **** *  calibrate the ADC with a known input or if an external reference is
 707:.\Generated_Source\PSoC4/IR_ADC.c **** *  used. Affects the ADC_CountsTo_uVolts, ADC_CountsTo_mVolts
 708:.\Generated_Source\PSoC4/IR_ADC.c **** *  and ADC_CountsTo_Volts functions by supplying the correct
 709:.\Generated_Source\PSoC4/IR_ADC.c **** *  conversion between ADC counts and voltage.
 710:.\Generated_Source\PSoC4/IR_ADC.c **** *
 711:.\Generated_Source\PSoC4/IR_ADC.c **** * Parameters:
 712:.\Generated_Source\PSoC4/IR_ADC.c **** *  chan: ADC channel number.
 713:.\Generated_Source\PSoC4/IR_ADC.c **** *  adcGain: ADC gain in counts per 10 volts.
 714:.\Generated_Source\PSoC4/IR_ADC.c **** *
 715:.\Generated_Source\PSoC4/IR_ADC.c **** * Return:
 716:.\Generated_Source\PSoC4/IR_ADC.c **** *  None.
 717:.\Generated_Source\PSoC4/IR_ADC.c **** *
 718:.\Generated_Source\PSoC4/IR_ADC.c **** * Global variables:
 719:.\Generated_Source\PSoC4/IR_ADC.c **** *  IR_ADC_CountsPer10Volt:  modified to set the ADC gain in counts
 720:.\Generated_Source\PSoC4/IR_ADC.c **** *   per 10 volt.
ARM GAS  C:\Users\alvin\AppData\Local\Temp\cc3v1X7c.s 			page 27


 721:.\Generated_Source\PSoC4/IR_ADC.c **** *
 722:.\Generated_Source\PSoC4/IR_ADC.c **** *******************************************************************************/
 723:.\Generated_Source\PSoC4/IR_ADC.c **** void IR_ADC_SetGain(uint32 chan, int32 adcGain)
 724:.\Generated_Source\PSoC4/IR_ADC.c **** {
 751              		.loc 1 724 0
 752              		.cfi_startproc
 753              	.LVL51:
 754 0000 38B5     		push	{r3, r4, r5, lr}
 755              		.cfi_def_cfa_offset 16
 756              		.cfi_offset 3, -16
 757              		.cfi_offset 4, -12
 758              		.cfi_offset 5, -8
 759              		.cfi_offset 14, -4
 760 0002 041C     		mov	r4, r0
 761 0004 0D1C     		mov	r5, r1
 725:.\Generated_Source\PSoC4/IR_ADC.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 726:.\Generated_Source\PSoC4/IR_ADC.c ****     CYASSERT(chan < IR_ADC_TOTAL_CHANNELS_NUM);
 762              		.loc 1 726 0
 763 0006 0128     		cmp	r0, #1
 764 0008 02D9     		bls	.L65
 765              		.loc 1 726 0 is_stmt 0 discriminator 1
 766 000a 0020     		mov	r0, #0
 767              	.LVL52:
 768 000c FFF7FEFF 		bl	CyHalt
 769              	.LVL53:
 770              	.L65:
 727:.\Generated_Source\PSoC4/IR_ADC.c **** 
 728:.\Generated_Source\PSoC4/IR_ADC.c ****     IR_ADC_countsPer10Volt[chan] = adcGain;
 771              		.loc 1 728 0 is_stmt 1
 772 0010 A400     		lsl	r4, r4, #2
 773              	.LVL54:
 774 0012 014B     		ldr	r3, .L66
 775 0014 E550     		str	r5, [r4, r3]
 729:.\Generated_Source\PSoC4/IR_ADC.c **** }
 776              		.loc 1 729 0
 777              		@ sp needed
 778              	.LVL55:
 779 0016 38BD     		pop	{r3, r4, r5, pc}
 780              	.L67:
 781              		.align	2
 782              	.L66:
 783 0018 00000000 		.word	IR_ADC_countsPer10Volt
 784              		.cfi_endproc
 785              	.LFE16:
 786              		.size	IR_ADC_SetGain, .-IR_ADC_SetGain
 787              		.global	__aeabi_idiv
 788              		.section	.text.IR_ADC_CountsTo_mVolts,"ax",%progbits
 789              		.align	2
 790              		.global	IR_ADC_CountsTo_mVolts
 791              		.code	16
 792              		.thumb_func
 793              		.type	IR_ADC_CountsTo_mVolts, %function
 794              	IR_ADC_CountsTo_mVolts:
 795              	.LFB17:
 730:.\Generated_Source\PSoC4/IR_ADC.c **** 
 731:.\Generated_Source\PSoC4/IR_ADC.c **** 
 732:.\Generated_Source\PSoC4/IR_ADC.c **** #if(IR_ADC_DEFAULT_JUSTIFICATION_SEL == IR_ADC__RIGHT)
ARM GAS  C:\Users\alvin\AppData\Local\Temp\cc3v1X7c.s 			page 28


 733:.\Generated_Source\PSoC4/IR_ADC.c **** 
 734:.\Generated_Source\PSoC4/IR_ADC.c **** 
 735:.\Generated_Source\PSoC4/IR_ADC.c ****     /*******************************************************************************
 736:.\Generated_Source\PSoC4/IR_ADC.c ****     * Function Name: IR_ADC_CountsTo_mVolts
 737:.\Generated_Source\PSoC4/IR_ADC.c ****     ********************************************************************************
 738:.\Generated_Source\PSoC4/IR_ADC.c ****     *
 739:.\Generated_Source\PSoC4/IR_ADC.c ****     * Summary:
 740:.\Generated_Source\PSoC4/IR_ADC.c ****     *  This function converts ADC counts to mVolts
 741:.\Generated_Source\PSoC4/IR_ADC.c ****     *  This function is not available when left data format justification selected.
 742:.\Generated_Source\PSoC4/IR_ADC.c ****     *
 743:.\Generated_Source\PSoC4/IR_ADC.c ****     * Parameters:
 744:.\Generated_Source\PSoC4/IR_ADC.c ****     *  chan: The ADC channel number.
 745:.\Generated_Source\PSoC4/IR_ADC.c ****     *  adcCounts: Result from the ADC conversion
 746:.\Generated_Source\PSoC4/IR_ADC.c ****     *
 747:.\Generated_Source\PSoC4/IR_ADC.c ****     * Return:
 748:.\Generated_Source\PSoC4/IR_ADC.c ****     *  Results in mVolts
 749:.\Generated_Source\PSoC4/IR_ADC.c ****     *
 750:.\Generated_Source\PSoC4/IR_ADC.c ****     * Global variables:
 751:.\Generated_Source\PSoC4/IR_ADC.c ****     *  IR_ADC_countsPer10Volt:  used to convert ADC counts to mVolts.
 752:.\Generated_Source\PSoC4/IR_ADC.c ****     *  IR_ADC_Offset:  Used as the offset while converting ADC counts
 753:.\Generated_Source\PSoC4/IR_ADC.c ****     *   to mVolts.
 754:.\Generated_Source\PSoC4/IR_ADC.c ****     *
 755:.\Generated_Source\PSoC4/IR_ADC.c ****     *******************************************************************************/
 756:.\Generated_Source\PSoC4/IR_ADC.c ****     int16 IR_ADC_CountsTo_mVolts(uint32 chan, int16 adcCounts)
 757:.\Generated_Source\PSoC4/IR_ADC.c ****     {
 796              		.loc 1 757 0
 797              		.cfi_startproc
 798              	.LVL56:
 799 0000 38B5     		push	{r3, r4, r5, lr}
 800              		.cfi_def_cfa_offset 16
 801              		.cfi_offset 3, -16
 802              		.cfi_offset 4, -12
 803              		.cfi_offset 5, -8
 804              		.cfi_offset 14, -4
 805 0002 041C     		mov	r4, r0
 806 0004 0D1C     		mov	r5, r1
 758:.\Generated_Source\PSoC4/IR_ADC.c ****         int16 mVolts;
 759:.\Generated_Source\PSoC4/IR_ADC.c **** 
 760:.\Generated_Source\PSoC4/IR_ADC.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 761:.\Generated_Source\PSoC4/IR_ADC.c ****         CYASSERT(chan < IR_ADC_TOTAL_CHANNELS_NUM);
 807              		.loc 1 761 0
 808 0006 0128     		cmp	r0, #1
 809 0008 02D9     		bls	.L69
 810              		.loc 1 761 0 is_stmt 0 discriminator 1
 811 000a 0020     		mov	r0, #0
 812              	.LVL57:
 813 000c FFF7FEFF 		bl	CyHalt
 814              	.LVL58:
 815              	.L69:
 762:.\Generated_Source\PSoC4/IR_ADC.c **** 
 763:.\Generated_Source\PSoC4/IR_ADC.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 764:.\Generated_Source\PSoC4/IR_ADC.c ****         #if(IR_ADC_DEFAULT_AVG_MODE == IR_ADC__ACCUMULATE)
 765:.\Generated_Source\PSoC4/IR_ADC.c ****             if((IR_ADC_channelsConfig[chan] & IR_ADC_AVERAGING_EN) != 0u)
 766:.\Generated_Source\PSoC4/IR_ADC.c ****             {
 767:.\Generated_Source\PSoC4/IR_ADC.c ****                 adcCounts /= IR_ADC_DEFAULT_AVG_SAMPLES_DIV;
 768:.\Generated_Source\PSoC4/IR_ADC.c ****             }
 769:.\Generated_Source\PSoC4/IR_ADC.c ****         #endif /* IR_ADC_DEFAULT_AVG_MODE == IR_ADC__ACCUMULATE */
ARM GAS  C:\Users\alvin\AppData\Local\Temp\cc3v1X7c.s 			page 29


 770:.\Generated_Source\PSoC4/IR_ADC.c **** 
 771:.\Generated_Source\PSoC4/IR_ADC.c ****         /* Subtract ADC offset */
 772:.\Generated_Source\PSoC4/IR_ADC.c ****         adcCounts -= IR_ADC_offset[chan];
 816              		.loc 1 772 0 is_stmt 1
 817 0010 6300     		lsl	r3, r4, #1
 818 0012 0F4A     		ldr	r2, .L72
 819 0014 995A     		ldrh	r1, [r3, r2]
 820 0016 691A     		sub	r1, r5, r1
 821 0018 09B2     		sxth	r1, r1
 822              	.LVL59:
 773:.\Generated_Source\PSoC4/IR_ADC.c **** 
 774:.\Generated_Source\PSoC4/IR_ADC.c ****         mVolts = (int16)((((int32)adcCounts * IR_ADC_10MV_COUNTS) + ( (adcCounts > 0) ?
 823              		.loc 1 774 0
 824 001a 0E48     		ldr	r0, .L72+4
 825 001c 021C     		mov	r2, r0
 826 001e 4A43     		mul	r2, r1
 775:.\Generated_Source\PSoC4/IR_ADC.c ****                  (IR_ADC_countsPer10Volt[chan] / 2) : (-(IR_ADC_countsPer10Volt[chan] / 2)) ))
 827              		.loc 1 775 0
 828 0020 0029     		cmp	r1, #0
 829 0022 06DD     		ble	.L70
 830              		.loc 1 775 0 is_stmt 0 discriminator 1
 831 0024 A300     		lsl	r3, r4, #2
 832 0026 0C49     		ldr	r1, .L72+8
 833              	.LVL60:
 834 0028 5B58     		ldr	r3, [r3, r1]
 835 002a D80F     		lsr	r0, r3, #31
 836 002c C018     		add	r0, r0, r3
 837 002e 4310     		asr	r3, r0, #1
 838 0030 06E0     		b	.L71
 839              	.LVL61:
 840              	.L70:
 841              		.loc 1 775 0 discriminator 2
 842 0032 A300     		lsl	r3, r4, #2
 843 0034 0849     		ldr	r1, .L72+8
 844              	.LVL62:
 845 0036 5B58     		ldr	r3, [r3, r1]
 846 0038 D80F     		lsr	r0, r3, #31
 847 003a C318     		add	r3, r0, r3
 848 003c 5B10     		asr	r3, r3, #1
 849 003e 5B42     		neg	r3, r3
 850              	.L71:
 774:.\Generated_Source\PSoC4/IR_ADC.c ****                  (IR_ADC_countsPer10Volt[chan] / 2) : (-(IR_ADC_countsPer10Volt[chan] / 2)) ))
 851              		.loc 1 774 0 is_stmt 1
 852 0040 D018     		add	r0, r2, r3
 776:.\Generated_Source\PSoC4/IR_ADC.c ****                  / IR_ADC_countsPer10Volt[chan]);
 853              		.loc 1 776 0
 854 0042 A400     		lsl	r4, r4, #2
 855              	.LVL63:
 856 0044 044B     		ldr	r3, .L72+8
 857 0046 E158     		ldr	r1, [r4, r3]
 858 0048 FFF7FEFF 		bl	__aeabi_idiv
 859              	.LVL64:
 777:.\Generated_Source\PSoC4/IR_ADC.c **** 
 778:.\Generated_Source\PSoC4/IR_ADC.c ****         return( mVolts );
 860              		.loc 1 778 0
 861 004c 00B2     		sxth	r0, r0
 779:.\Generated_Source\PSoC4/IR_ADC.c ****     }
ARM GAS  C:\Users\alvin\AppData\Local\Temp\cc3v1X7c.s 			page 30


 862              		.loc 1 779 0
 863              		@ sp needed
 864 004e 38BD     		pop	{r3, r4, r5, pc}
 865              	.L73:
 866              		.align	2
 867              	.L72:
 868 0050 00000000 		.word	IR_ADC_offset
 869 0054 10270000 		.word	10000
 870 0058 00000000 		.word	IR_ADC_countsPer10Volt
 871              		.cfi_endproc
 872              	.LFE17:
 873              		.size	IR_ADC_CountsTo_mVolts, .-IR_ADC_CountsTo_mVolts
 874              		.global	__aeabi_lmul
 875              		.global	__aeabi_ldivmod
 876              		.section	.text.IR_ADC_CountsTo_uVolts,"ax",%progbits
 877              		.align	2
 878              		.global	IR_ADC_CountsTo_uVolts
 879              		.code	16
 880              		.thumb_func
 881              		.type	IR_ADC_CountsTo_uVolts, %function
 882              	IR_ADC_CountsTo_uVolts:
 883              	.LFB18:
 780:.\Generated_Source\PSoC4/IR_ADC.c **** 
 781:.\Generated_Source\PSoC4/IR_ADC.c **** 
 782:.\Generated_Source\PSoC4/IR_ADC.c ****     /*******************************************************************************
 783:.\Generated_Source\PSoC4/IR_ADC.c ****     * Function Name: IR_ADC_CountsTo_uVolts
 784:.\Generated_Source\PSoC4/IR_ADC.c ****     ********************************************************************************
 785:.\Generated_Source\PSoC4/IR_ADC.c ****     *
 786:.\Generated_Source\PSoC4/IR_ADC.c ****     * Summary:
 787:.\Generated_Source\PSoC4/IR_ADC.c ****     *  This function converts ADC counts to micro Volts
 788:.\Generated_Source\PSoC4/IR_ADC.c ****     *  This function is not available when left data format justification selected.
 789:.\Generated_Source\PSoC4/IR_ADC.c ****     *
 790:.\Generated_Source\PSoC4/IR_ADC.c ****     * Parameters:
 791:.\Generated_Source\PSoC4/IR_ADC.c ****     *  chan: The ADC channel number.
 792:.\Generated_Source\PSoC4/IR_ADC.c ****     *  adcCounts: Result from the ADC conversion
 793:.\Generated_Source\PSoC4/IR_ADC.c ****     *
 794:.\Generated_Source\PSoC4/IR_ADC.c ****     * Return:
 795:.\Generated_Source\PSoC4/IR_ADC.c ****     *  Results in uVolts
 796:.\Generated_Source\PSoC4/IR_ADC.c ****     *
 797:.\Generated_Source\PSoC4/IR_ADC.c ****     * Global variables:
 798:.\Generated_Source\PSoC4/IR_ADC.c ****     *  IR_ADC_countsPer10Volt:  used to convert ADC counts to uVolts.
 799:.\Generated_Source\PSoC4/IR_ADC.c ****     *  IR_ADC_Offset:  Used as the offset while converting ADC counts
 800:.\Generated_Source\PSoC4/IR_ADC.c ****     *   to mVolts.
 801:.\Generated_Source\PSoC4/IR_ADC.c ****     *
 802:.\Generated_Source\PSoC4/IR_ADC.c ****     * Theory:
 803:.\Generated_Source\PSoC4/IR_ADC.c ****     *  Care must be taken to not exceed the maximum value for a 31 bit signed
 804:.\Generated_Source\PSoC4/IR_ADC.c ****     *  number in the conversion to uVolts and at the same time not loose
 805:.\Generated_Source\PSoC4/IR_ADC.c ****     *  resolution.
 806:.\Generated_Source\PSoC4/IR_ADC.c ****     *  To convert adcCounts to microVolts it is required to be multiplied
 807:.\Generated_Source\PSoC4/IR_ADC.c ****     *  on 10 million and later divide on gain in counts per 10V.
 808:.\Generated_Source\PSoC4/IR_ADC.c ****     *
 809:.\Generated_Source\PSoC4/IR_ADC.c ****     *******************************************************************************/
 810:.\Generated_Source\PSoC4/IR_ADC.c ****     int32 IR_ADC_CountsTo_uVolts(uint32 chan, int16 adcCounts)
 811:.\Generated_Source\PSoC4/IR_ADC.c ****     {
 884              		.loc 1 811 0
 885              		.cfi_startproc
 886              	.LVL65:
ARM GAS  C:\Users\alvin\AppData\Local\Temp\cc3v1X7c.s 			page 31


 887 0000 38B5     		push	{r3, r4, r5, lr}
 888              		.cfi_def_cfa_offset 16
 889              		.cfi_offset 3, -16
 890              		.cfi_offset 4, -12
 891              		.cfi_offset 5, -8
 892              		.cfi_offset 14, -4
 893 0002 051C     		mov	r5, r0
 894 0004 0C1C     		mov	r4, r1
 812:.\Generated_Source\PSoC4/IR_ADC.c ****         int64 uVolts;
 813:.\Generated_Source\PSoC4/IR_ADC.c **** 
 814:.\Generated_Source\PSoC4/IR_ADC.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 815:.\Generated_Source\PSoC4/IR_ADC.c ****         CYASSERT(chan < IR_ADC_TOTAL_CHANNELS_NUM);
 895              		.loc 1 815 0
 896 0006 0128     		cmp	r0, #1
 897 0008 02D9     		bls	.L75
 898              		.loc 1 815 0 is_stmt 0 discriminator 1
 899 000a 0020     		mov	r0, #0
 900              	.LVL66:
 901 000c FFF7FEFF 		bl	CyHalt
 902              	.LVL67:
 903              	.L75:
 816:.\Generated_Source\PSoC4/IR_ADC.c **** 
 817:.\Generated_Source\PSoC4/IR_ADC.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 818:.\Generated_Source\PSoC4/IR_ADC.c ****         #if(IR_ADC_DEFAULT_AVG_MODE == IR_ADC__ACCUMULATE)
 819:.\Generated_Source\PSoC4/IR_ADC.c ****             if((IR_ADC_channelsConfig[chan] & IR_ADC_AVERAGING_EN) != 0u)
 820:.\Generated_Source\PSoC4/IR_ADC.c ****             {
 821:.\Generated_Source\PSoC4/IR_ADC.c ****                 adcCounts /= IR_ADC_DEFAULT_AVG_SAMPLES_DIV;
 822:.\Generated_Source\PSoC4/IR_ADC.c ****             }
 823:.\Generated_Source\PSoC4/IR_ADC.c ****         #endif /* IR_ADC_DEFAULT_AVG_MODE == IR_ADC__ACCUMULATE */
 824:.\Generated_Source\PSoC4/IR_ADC.c **** 
 825:.\Generated_Source\PSoC4/IR_ADC.c ****         /* Subtract ADC offset */
 826:.\Generated_Source\PSoC4/IR_ADC.c ****         adcCounts -= IR_ADC_offset[chan];
 904              		.loc 1 826 0 is_stmt 1
 905 0010 6A00     		lsl	r2, r5, #1
 906 0012 084B     		ldr	r3, .L76
 907 0014 D05A     		ldrh	r0, [r2, r3]
 908 0016 201A     		sub	r0, r4, r0
 909 0018 00B2     		sxth	r0, r0
 910              	.LVL68:
 827:.\Generated_Source\PSoC4/IR_ADC.c **** 
 828:.\Generated_Source\PSoC4/IR_ADC.c ****         uVolts = ((int64)adcCounts * IR_ADC_10UV_COUNTS) / IR_ADC_countsPer10Volt[chan];
 911              		.loc 1 828 0
 912 001a C117     		asr	r1, r0, #31
 913 001c 064A     		ldr	r2, .L76+4
 914 001e 0023     		mov	r3, #0
 915 0020 FFF7FEFF 		bl	__aeabi_lmul
 916              	.LVL69:
 917 0024 AD00     		lsl	r5, r5, #2
 918              	.LVL70:
 919 0026 054B     		ldr	r3, .L76+8
 920 0028 EA58     		ldr	r2, [r5, r3]
 921 002a D317     		asr	r3, r2, #31
 922 002c FFF7FEFF 		bl	__aeabi_ldivmod
 923              	.LVL71:
 829:.\Generated_Source\PSoC4/IR_ADC.c **** 
 830:.\Generated_Source\PSoC4/IR_ADC.c ****         return( (int32)uVolts );
 831:.\Generated_Source\PSoC4/IR_ADC.c ****     }
ARM GAS  C:\Users\alvin\AppData\Local\Temp\cc3v1X7c.s 			page 32


 924              		.loc 1 831 0
 925              		@ sp needed
 926 0030 38BD     		pop	{r3, r4, r5, pc}
 927              	.L77:
 928 0032 C046     		.align	2
 929              	.L76:
 930 0034 00000000 		.word	IR_ADC_offset
 931 0038 80969800 		.word	10000000
 932 003c 00000000 		.word	IR_ADC_countsPer10Volt
 933              		.cfi_endproc
 934              	.LFE18:
 935              		.size	IR_ADC_CountsTo_uVolts, .-IR_ADC_CountsTo_uVolts
 936              		.global	__aeabi_i2f
 937              		.global	__aeabi_fmul
 938              		.global	__aeabi_fdiv
 939              		.section	.text.IR_ADC_CountsTo_Volts,"ax",%progbits
 940              		.align	2
 941              		.global	IR_ADC_CountsTo_Volts
 942              		.code	16
 943              		.thumb_func
 944              		.type	IR_ADC_CountsTo_Volts, %function
 945              	IR_ADC_CountsTo_Volts:
 946              	.LFB19:
 832:.\Generated_Source\PSoC4/IR_ADC.c **** 
 833:.\Generated_Source\PSoC4/IR_ADC.c **** 
 834:.\Generated_Source\PSoC4/IR_ADC.c ****     /*******************************************************************************
 835:.\Generated_Source\PSoC4/IR_ADC.c ****     * Function Name: IR_ADC_CountsTo_Volts
 836:.\Generated_Source\PSoC4/IR_ADC.c ****     ********************************************************************************
 837:.\Generated_Source\PSoC4/IR_ADC.c ****     *
 838:.\Generated_Source\PSoC4/IR_ADC.c ****     * Summary:
 839:.\Generated_Source\PSoC4/IR_ADC.c ****     *  Converts the ADC output to Volts as a floating point number.
 840:.\Generated_Source\PSoC4/IR_ADC.c ****     *  This function is not available when left data format justification selected.
 841:.\Generated_Source\PSoC4/IR_ADC.c ****     *
 842:.\Generated_Source\PSoC4/IR_ADC.c ****     * Parameters:
 843:.\Generated_Source\PSoC4/IR_ADC.c ****     *  chan: The ADC channel number.
 844:.\Generated_Source\PSoC4/IR_ADC.c ****     *  Result from the ADC conversion
 845:.\Generated_Source\PSoC4/IR_ADC.c ****     *
 846:.\Generated_Source\PSoC4/IR_ADC.c ****     * Return:
 847:.\Generated_Source\PSoC4/IR_ADC.c ****     *  Results in Volts
 848:.\Generated_Source\PSoC4/IR_ADC.c ****     *
 849:.\Generated_Source\PSoC4/IR_ADC.c ****     * Global variables:
 850:.\Generated_Source\PSoC4/IR_ADC.c ****     *  IR_ADC_countsPer10Volt:  used to convert ADC counts to Volts.
 851:.\Generated_Source\PSoC4/IR_ADC.c ****     *  IR_ADC_Offset:  Used as the offset while converting ADC counts
 852:.\Generated_Source\PSoC4/IR_ADC.c ****     *   to mVolts.
 853:.\Generated_Source\PSoC4/IR_ADC.c ****     *
 854:.\Generated_Source\PSoC4/IR_ADC.c ****     *******************************************************************************/
 855:.\Generated_Source\PSoC4/IR_ADC.c ****     float32 IR_ADC_CountsTo_Volts(uint32 chan, int16 adcCounts)
 856:.\Generated_Source\PSoC4/IR_ADC.c ****     {
 947              		.loc 1 856 0
 948              		.cfi_startproc
 949              	.LVL72:
 950 0000 38B5     		push	{r3, r4, r5, lr}
 951              		.cfi_def_cfa_offset 16
 952              		.cfi_offset 3, -16
 953              		.cfi_offset 4, -12
 954              		.cfi_offset 5, -8
 955              		.cfi_offset 14, -4
ARM GAS  C:\Users\alvin\AppData\Local\Temp\cc3v1X7c.s 			page 33


 956 0002 041C     		mov	r4, r0
 957 0004 0D1C     		mov	r5, r1
 857:.\Generated_Source\PSoC4/IR_ADC.c ****         float32 volts;
 858:.\Generated_Source\PSoC4/IR_ADC.c **** 
 859:.\Generated_Source\PSoC4/IR_ADC.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 860:.\Generated_Source\PSoC4/IR_ADC.c ****         CYASSERT(chan < IR_ADC_TOTAL_CHANNELS_NUM);
 958              		.loc 1 860 0
 959 0006 0128     		cmp	r0, #1
 960 0008 02D9     		bls	.L79
 961              		.loc 1 860 0 is_stmt 0 discriminator 1
 962 000a 0020     		mov	r0, #0
 963              	.LVL73:
 964 000c FFF7FEFF 		bl	CyHalt
 965              	.LVL74:
 966              	.L79:
 861:.\Generated_Source\PSoC4/IR_ADC.c **** 
 862:.\Generated_Source\PSoC4/IR_ADC.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 863:.\Generated_Source\PSoC4/IR_ADC.c ****         #if(IR_ADC_DEFAULT_AVG_MODE == IR_ADC__ACCUMULATE)
 864:.\Generated_Source\PSoC4/IR_ADC.c ****             if((IR_ADC_channelsConfig[chan] & IR_ADC_AVERAGING_EN) != 0u)
 865:.\Generated_Source\PSoC4/IR_ADC.c ****             {
 866:.\Generated_Source\PSoC4/IR_ADC.c ****                 adcCounts /= IR_ADC_DEFAULT_AVG_SAMPLES_DIV;
 867:.\Generated_Source\PSoC4/IR_ADC.c ****             }
 868:.\Generated_Source\PSoC4/IR_ADC.c ****         #endif /* IR_ADC_DEFAULT_AVG_MODE == IR_ADC__ACCUMULATE */
 869:.\Generated_Source\PSoC4/IR_ADC.c **** 
 870:.\Generated_Source\PSoC4/IR_ADC.c ****         /* Subtract ADC offset */
 871:.\Generated_Source\PSoC4/IR_ADC.c ****         adcCounts -= IR_ADC_offset[chan];
 967              		.loc 1 871 0 is_stmt 1
 968 0010 6200     		lsl	r2, r4, #1
 969 0012 0A4B     		ldr	r3, .L80
 970 0014 D05A     		ldrh	r0, [r2, r3]
 971 0016 281A     		sub	r0, r5, r0
 972 0018 00B2     		sxth	r0, r0
 973              	.LVL75:
 872:.\Generated_Source\PSoC4/IR_ADC.c **** 
 873:.\Generated_Source\PSoC4/IR_ADC.c ****         volts = ((float32)adcCounts * IR_ADC_10V_COUNTS) / (float32)IR_ADC_countsPer10Volt[chan];
 974              		.loc 1 873 0
 975 001a FFF7FEFF 		bl	__aeabi_i2f
 976              	.LVL76:
 977 001e 0849     		ldr	r1, .L80+4
 978 0020 FFF7FEFF 		bl	__aeabi_fmul
 979              	.LVL77:
 980 0024 051C     		add	r5, r0, #0
 981 0026 A400     		lsl	r4, r4, #2
 982              	.LVL78:
 983 0028 064B     		ldr	r3, .L80+8
 984 002a E058     		ldr	r0, [r4, r3]
 985 002c FFF7FEFF 		bl	__aeabi_i2f
 986              	.LVL79:
 987 0030 011C     		add	r1, r0, #0
 988 0032 281C     		add	r0, r5, #0
 989 0034 FFF7FEFF 		bl	__aeabi_fdiv
 990              	.LVL80:
 874:.\Generated_Source\PSoC4/IR_ADC.c **** 
 875:.\Generated_Source\PSoC4/IR_ADC.c ****         return( volts );
 876:.\Generated_Source\PSoC4/IR_ADC.c ****     }
 991              		.loc 1 876 0
 992              		@ sp needed
ARM GAS  C:\Users\alvin\AppData\Local\Temp\cc3v1X7c.s 			page 34


 993 0038 38BD     		pop	{r3, r4, r5, pc}
 994              	.L81:
 995 003a C046     		.align	2
 996              	.L80:
 997 003c 00000000 		.word	IR_ADC_offset
 998 0040 00002041 		.word	1092616192
 999 0044 00000000 		.word	IR_ADC_countsPer10Volt
 1000              		.cfi_endproc
 1001              	.LFE19:
 1002              		.size	IR_ADC_CountsTo_Volts, .-IR_ADC_CountsTo_Volts
 1003              		.comm	IR_ADC_countsPer10Volt,8,4
 1004              		.comm	IR_ADC_offset,4,4
 1005              		.global	IR_ADC_initVar
 1006              		.section	.rodata
 1007              		.align	2
 1008              		.set	.LANCHOR0,. + 0
 1009              		.type	IR_ADC_channelsConfig, %object
 1010              		.size	IR_ADC_channelsConfig, 8
 1011              	IR_ADC_channelsConfig:
 1012 0000 00000000 		.space	8
 1012      00000000 
 1013              		.type	IR_ADC_InputsPlacement.4793, %object
 1014              		.size	IR_ADC_InputsPlacement.4793, 2
 1015              	IR_ADC_InputsPlacement.4793:
 1016 0008 05       		.byte	5
 1017 0009 01       		.byte	1
 1018 000a 0000     		.bss
 1019              		.set	.LANCHOR1,. + 0
 1020              		.type	IR_ADC_initVar, %object
 1021              		.size	IR_ADC_initVar, 1
 1022              	IR_ADC_initVar:
 1023 0000 00       		.space	1
 1024              		.text
 1025              	.Letext0:
 1026              		.file 2 ".\\Generated_Source\\PSoC4\\cytypes.h"
 1027              		.file 3 ".\\Generated_Source\\PSoC4\\CyLib.h"
 1028              		.section	.debug_info,"",%progbits
 1029              	.Ldebug_info0:
 1030 0000 BB050000 		.4byte	0x5bb
 1031 0004 0400     		.2byte	0x4
 1032 0006 00000000 		.4byte	.Ldebug_abbrev0
 1033 000a 04       		.byte	0x4
 1034 000b 01       		.uleb128 0x1
 1035 000c 2F020000 		.4byte	.LASF62
 1036 0010 01       		.byte	0x1
 1037 0011 64000000 		.4byte	.LASF63
 1038 0015 E5000000 		.4byte	.LASF64
 1039 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1040 001d 00000000 		.4byte	0
 1041 0021 00000000 		.4byte	.Ldebug_line0
 1042 0025 02       		.uleb128 0x2
 1043 0026 01       		.byte	0x1
 1044 0027 06       		.byte	0x6
 1045 0028 52000000 		.4byte	.LASF0
 1046 002c 02       		.uleb128 0x2
 1047 002d 01       		.byte	0x1
 1048 002e 08       		.byte	0x8
ARM GAS  C:\Users\alvin\AppData\Local\Temp\cc3v1X7c.s 			page 35


 1049 002f 1B030000 		.4byte	.LASF1
 1050 0033 02       		.uleb128 0x2
 1051 0034 02       		.byte	0x2
 1052 0035 05       		.byte	0x5
 1053 0036 40030000 		.4byte	.LASF2
 1054 003a 02       		.uleb128 0x2
 1055 003b 02       		.byte	0x2
 1056 003c 07       		.byte	0x7
 1057 003d A7010000 		.4byte	.LASF3
 1058 0041 02       		.uleb128 0x2
 1059 0042 04       		.byte	0x4
 1060 0043 05       		.byte	0x5
 1061 0044 86000000 		.4byte	.LASF4
 1062 0048 02       		.uleb128 0x2
 1063 0049 04       		.byte	0x4
 1064 004a 07       		.byte	0x7
 1065 004b 85010000 		.4byte	.LASF5
 1066 004f 02       		.uleb128 0x2
 1067 0050 08       		.byte	0x8
 1068 0051 05       		.byte	0x5
 1069 0052 44000000 		.4byte	.LASF6
 1070 0056 02       		.uleb128 0x2
 1071 0057 08       		.byte	0x8
 1072 0058 07       		.byte	0x7
 1073 0059 2D000000 		.4byte	.LASF7
 1074 005d 03       		.uleb128 0x3
 1075 005e 04       		.byte	0x4
 1076 005f 05       		.byte	0x5
 1077 0060 696E7400 		.ascii	"int\000"
 1078 0064 02       		.uleb128 0x2
 1079 0065 04       		.byte	0x4
 1080 0066 07       		.byte	0x7
 1081 0067 5A010000 		.4byte	.LASF8
 1082 006b 04       		.uleb128 0x4
 1083 006c 8F000000 		.4byte	.LASF9
 1084 0070 02       		.byte	0x2
 1085 0071 9801     		.2byte	0x198
 1086 0073 2C000000 		.4byte	0x2c
 1087 0077 04       		.uleb128 0x4
 1088 0078 00000000 		.4byte	.LASF10
 1089 007c 02       		.byte	0x2
 1090 007d 9901     		.2byte	0x199
 1091 007f 3A000000 		.4byte	0x3a
 1092 0083 04       		.uleb128 0x4
 1093 0084 D9000000 		.4byte	.LASF11
 1094 0088 02       		.byte	0x2
 1095 0089 9A01     		.2byte	0x19a
 1096 008b 48000000 		.4byte	0x48
 1097 008f 04       		.uleb128 0x4
 1098 0090 DF030000 		.4byte	.LASF12
 1099 0094 02       		.byte	0x2
 1100 0095 9C01     		.2byte	0x19c
 1101 0097 33000000 		.4byte	0x33
 1102 009b 04       		.uleb128 0x4
 1103 009c 5E000000 		.4byte	.LASF13
 1104 00a0 02       		.byte	0x2
 1105 00a1 9D01     		.2byte	0x19d
ARM GAS  C:\Users\alvin\AppData\Local\Temp\cc3v1X7c.s 			page 36


 1106 00a3 41000000 		.4byte	0x41
 1107 00a7 04       		.uleb128 0x4
 1108 00a8 02020000 		.4byte	.LASF14
 1109 00ac 02       		.byte	0x2
 1110 00ad 9E01     		.2byte	0x19e
 1111 00af B3000000 		.4byte	0xb3
 1112 00b3 02       		.uleb128 0x2
 1113 00b4 04       		.byte	0x4
 1114 00b5 04       		.byte	0x4
 1115 00b6 EB020000 		.4byte	.LASF15
 1116 00ba 02       		.uleb128 0x2
 1117 00bb 08       		.byte	0x8
 1118 00bc 04       		.byte	0x4
 1119 00bd AB000000 		.4byte	.LASF16
 1120 00c1 04       		.uleb128 0x4
 1121 00c2 BD020000 		.4byte	.LASF17
 1122 00c6 02       		.byte	0x2
 1123 00c7 A301     		.2byte	0x1a3
 1124 00c9 4F000000 		.4byte	0x4f
 1125 00cd 02       		.uleb128 0x2
 1126 00ce 01       		.byte	0x1
 1127 00cf 08       		.byte	0x8
 1128 00d0 7C030000 		.4byte	.LASF18
 1129 00d4 04       		.uleb128 0x4
 1130 00d5 ED010000 		.4byte	.LASF19
 1131 00d9 02       		.byte	0x2
 1132 00da 4402     		.2byte	0x244
 1133 00dc E0000000 		.4byte	0xe0
 1134 00e0 05       		.uleb128 0x5
 1135 00e1 83000000 		.4byte	0x83
 1136 00e5 04       		.uleb128 0x4
 1137 00e6 81030000 		.4byte	.LASF20
 1138 00ea 02       		.byte	0x2
 1139 00eb 5402     		.2byte	0x254
 1140 00ed F1000000 		.4byte	0xf1
 1141 00f1 06       		.uleb128 0x6
 1142 00f2 04       		.byte	0x4
 1143 00f3 F7000000 		.4byte	0xf7
 1144 00f7 07       		.uleb128 0x7
 1145 00f8 02       		.uleb128 0x2
 1146 00f9 04       		.byte	0x4
 1147 00fa 07       		.byte	0x7
 1148 00fb 0A020000 		.4byte	.LASF21
 1149 00ff 08       		.uleb128 0x8
 1150 0100 08030000 		.4byte	.LASF26
 1151 0104 01       		.byte	0x1
 1152 0105 5E       		.byte	0x5e
 1153 0106 00000000 		.4byte	.LFB3
 1154 010a 84010000 		.4byte	.LFE3-.LFB3
 1155 010e 01       		.uleb128 0x1
 1156 010f 9C       		.byte	0x9c
 1157 0110 7A010000 		.4byte	0x17a
 1158 0114 09       		.uleb128 0x9
 1159 0115 5D030000 		.4byte	.LASF22
 1160 0119 01       		.byte	0x1
 1161 011a 60       		.byte	0x60
 1162 011b 83000000 		.4byte	0x83
ARM GAS  C:\Users\alvin\AppData\Local\Temp\cc3v1X7c.s 			page 37


 1163 011f 00000000 		.4byte	.LLST0
 1164 0123 09       		.uleb128 0x9
 1165 0124 9D010000 		.4byte	.LASF23
 1166 0128 01       		.byte	0x1
 1167 0129 61       		.byte	0x61
 1168 012a 83000000 		.4byte	0x83
 1169 012e 1F000000 		.4byte	.LLST1
 1170 0132 09       		.uleb128 0x9
 1171 0133 0F000000 		.4byte	.LASF24
 1172 0137 01       		.byte	0x1
 1173 0138 62       		.byte	0x62
 1174 0139 9B000000 		.4byte	0x9b
 1175 013d 2B010000 		.4byte	.LLST2
 1176 0141 0A       		.uleb128 0xa
 1177 0142 C3020000 		.4byte	.LASF25
 1178 0146 01       		.byte	0x1
 1179 0147 65       		.byte	0x65
 1180 0148 8A010000 		.4byte	0x18a
 1181 014c 05       		.uleb128 0x5
 1182 014d 03       		.byte	0x3
 1183 014e 08000000 		.4byte	IR_ADC_InputsPlacement.4793
 1184 0152 0B       		.uleb128 0xb
 1185 0153 0A000000 		.4byte	.LVL0
 1186 0157 70050000 		.4byte	0x570
 1187 015b 6A010000 		.4byte	0x16a
 1188 015f 0C       		.uleb128 0xc
 1189 0160 01       		.uleb128 0x1
 1190 0161 51       		.byte	0x51
 1191 0162 01       		.uleb128 0x1
 1192 0163 33       		.byte	0x33
 1193 0164 0C       		.uleb128 0xc
 1194 0165 01       		.uleb128 0x1
 1195 0166 50       		.byte	0x50
 1196 0167 01       		.uleb128 0x1
 1197 0168 3F       		.byte	0x3f
 1198 0169 00       		.byte	0
 1199 016a 0D       		.uleb128 0xd
 1200 016b 12000000 		.4byte	.LVL1
 1201 016f 86050000 		.4byte	0x586
 1202 0173 0C       		.uleb128 0xc
 1203 0174 01       		.uleb128 0x1
 1204 0175 50       		.byte	0x50
 1205 0176 01       		.uleb128 0x1
 1206 0177 3F       		.byte	0x3f
 1207 0178 00       		.byte	0
 1208 0179 00       		.byte	0
 1209 017a 0E       		.uleb128 0xe
 1210 017b 6B000000 		.4byte	0x6b
 1211 017f 8A010000 		.4byte	0x18a
 1212 0183 0F       		.uleb128 0xf
 1213 0184 F8000000 		.4byte	0xf8
 1214 0188 01       		.byte	0x1
 1215 0189 00       		.byte	0
 1216 018a 10       		.uleb128 0x10
 1217 018b 7A010000 		.4byte	0x17a
 1218 018f 11       		.uleb128 0x11
 1219 0190 E5030000 		.4byte	.LASF27
ARM GAS  C:\Users\alvin\AppData\Local\Temp\cc3v1X7c.s 			page 38


 1220 0194 01       		.byte	0x1
 1221 0195 4A01     		.2byte	0x14a
 1222 0197 00000000 		.4byte	.LFB4
 1223 019b 30000000 		.4byte	.LFE4-.LFB4
 1224 019f 01       		.uleb128 0x1
 1225 01a0 9C       		.byte	0x9c
 1226 01a1 B5010000 		.4byte	0x1b5
 1227 01a5 0D       		.uleb128 0xd
 1228 01a6 24000000 		.4byte	.LVL19
 1229 01aa A0050000 		.4byte	0x5a0
 1230 01ae 0C       		.uleb128 0xc
 1231 01af 01       		.uleb128 0x1
 1232 01b0 50       		.byte	0x50
 1233 01b1 01       		.uleb128 0x1
 1234 01b2 3A       		.byte	0x3a
 1235 01b3 00       		.byte	0
 1236 01b4 00       		.byte	0
 1237 01b5 08       		.uleb128 0x8
 1238 01b6 F1020000 		.4byte	.LASF28
 1239 01ba 01       		.byte	0x1
 1240 01bb 3F       		.byte	0x3f
 1241 01bc 00000000 		.4byte	.LFB2
 1242 01c0 20000000 		.4byte	.LFE2-.LFB2
 1243 01c4 01       		.uleb128 0x1
 1244 01c5 9C       		.byte	0x9c
 1245 01c6 DD010000 		.4byte	0x1dd
 1246 01ca 12       		.uleb128 0x12
 1247 01cb 0E000000 		.4byte	.LVL20
 1248 01cf FF000000 		.4byte	0xff
 1249 01d3 12       		.uleb128 0x12
 1250 01d4 18000000 		.4byte	.LVL21
 1251 01d8 8F010000 		.4byte	0x18f
 1252 01dc 00       		.byte	0
 1253 01dd 13       		.uleb128 0x13
 1254 01de 95000000 		.4byte	.LASF29
 1255 01e2 01       		.byte	0x1
 1256 01e3 6D01     		.2byte	0x16d
 1257 01e5 00000000 		.4byte	.LFB5
 1258 01e9 10000000 		.4byte	.LFE5-.LFB5
 1259 01ed 01       		.uleb128 0x1
 1260 01ee 9C       		.byte	0x9c
 1261 01ef 13       		.uleb128 0x13
 1262 01f0 B1030000 		.4byte	.LASF30
 1263 01f4 01       		.byte	0x1
 1264 01f5 8701     		.2byte	0x187
 1265 01f7 00000000 		.4byte	.LFB6
 1266 01fb 14000000 		.4byte	.LFE6-.LFB6
 1267 01ff 01       		.uleb128 0x1
 1268 0200 9C       		.byte	0x9c
 1269 0201 13       		.uleb128 0x13
 1270 0202 47010000 		.4byte	.LASF31
 1271 0206 01       		.byte	0x1
 1272 0207 A001     		.2byte	0x1a0
 1273 0209 00000000 		.4byte	.LFB7
 1274 020d 14000000 		.4byte	.LFE7-.LFB7
 1275 0211 01       		.uleb128 0x1
 1276 0212 9C       		.byte	0x9c
ARM GAS  C:\Users\alvin\AppData\Local\Temp\cc3v1X7c.s 			page 39


 1277 0213 14       		.uleb128 0x14
 1278 0214 28010000 		.4byte	.LASF33
 1279 0218 01       		.byte	0x1
 1280 0219 C201     		.2byte	0x1c2
 1281 021b 83000000 		.4byte	0x83
 1282 021f 00000000 		.4byte	.LFB8
 1283 0223 28000000 		.4byte	.LFE8-.LFB8
 1284 0227 01       		.uleb128 0x1
 1285 0228 9C       		.byte	0x9c
 1286 0229 4E020000 		.4byte	0x24e
 1287 022d 15       		.uleb128 0x15
 1288 022e 3F010000 		.4byte	.LASF35
 1289 0232 01       		.byte	0x1
 1290 0233 C201     		.2byte	0x1c2
 1291 0235 83000000 		.4byte	0x83
 1292 0239 3E010000 		.4byte	.LLST3
 1293 023d 16       		.uleb128 0x16
 1294 023e C5030000 		.4byte	.LASF32
 1295 0242 01       		.byte	0x1
 1296 0243 C401     		.2byte	0x1c4
 1297 0245 83000000 		.4byte	0x83
 1298 0249 83010000 		.4byte	.LLST4
 1299 024d 00       		.byte	0
 1300 024e 14       		.uleb128 0x14
 1301 024f CC030000 		.4byte	.LASF34
 1302 0253 01       		.byte	0x1
 1303 0254 F801     		.2byte	0x1f8
 1304 0256 8F000000 		.4byte	0x8f
 1305 025a 00000000 		.4byte	.LFB9
 1306 025e 2C000000 		.4byte	.LFE9-.LFB9
 1307 0262 01       		.uleb128 0x1
 1308 0263 9C       		.byte	0x9c
 1309 0264 98020000 		.4byte	0x298
 1310 0268 15       		.uleb128 0x15
 1311 0269 77030000 		.4byte	.LASF36
 1312 026d 01       		.byte	0x1
 1313 026e F801     		.2byte	0x1f8
 1314 0270 83000000 		.4byte	0x83
 1315 0274 B9010000 		.4byte	.LLST5
 1316 0278 16       		.uleb128 0x16
 1317 0279 07040000 		.4byte	.LASF37
 1318 027d 01       		.byte	0x1
 1319 027e FA01     		.2byte	0x1fa
 1320 0280 83000000 		.4byte	0x83
 1321 0284 FE010000 		.4byte	.LLST6
 1322 0288 0D       		.uleb128 0xd
 1323 0289 0E000000 		.4byte	.LVL31
 1324 028d B1050000 		.4byte	0x5b1
 1325 0291 0C       		.uleb128 0xc
 1326 0292 01       		.uleb128 0x1
 1327 0293 50       		.byte	0x50
 1328 0294 01       		.uleb128 0x1
 1329 0295 30       		.byte	0x30
 1330 0296 00       		.byte	0
 1331 0297 00       		.byte	0
 1332 0298 11       		.uleb128 0x11
 1333 0299 4A030000 		.4byte	.LASF38
ARM GAS  C:\Users\alvin\AppData\Local\Temp\cc3v1X7c.s 			page 40


 1334 029d 01       		.byte	0x1
 1335 029e 2502     		.2byte	0x225
 1336 02a0 00000000 		.4byte	.LFB10
 1337 02a4 10000000 		.4byte	.LFE10-.LFB10
 1338 02a8 01       		.uleb128 0x1
 1339 02a9 9C       		.byte	0x9c
 1340 02aa BF020000 		.4byte	0x2bf
 1341 02ae 15       		.uleb128 0x15
 1342 02af E0000000 		.4byte	.LASF39
 1343 02b3 01       		.byte	0x1
 1344 02b4 2502     		.2byte	0x225
 1345 02b6 83000000 		.4byte	0x83
 1346 02ba 1C020000 		.4byte	.LLST7
 1347 02be 00       		.byte	0
 1348 02bf 11       		.uleb128 0x11
 1349 02c0 1C020000 		.4byte	.LASF40
 1350 02c4 01       		.byte	0x1
 1351 02c5 5102     		.2byte	0x251
 1352 02c7 00000000 		.4byte	.LFB11
 1353 02cb 1C000000 		.4byte	.LFE11-.LFB11
 1354 02cf 01       		.uleb128 0x1
 1355 02d0 9C       		.byte	0x9c
 1356 02d1 E6020000 		.4byte	0x2e6
 1357 02d5 15       		.uleb128 0x15
 1358 02d6 13020000 		.4byte	.LASF41
 1359 02da 01       		.byte	0x1
 1360 02db 5102     		.2byte	0x251
 1361 02dd 83000000 		.4byte	0x83
 1362 02e1 3D020000 		.4byte	.LLST8
 1363 02e5 00       		.byte	0
 1364 02e6 11       		.uleb128 0x11
 1365 02e7 F3030000 		.4byte	.LASF42
 1366 02eb 01       		.byte	0x1
 1367 02ec 6602     		.2byte	0x266
 1368 02ee 00000000 		.4byte	.LFB12
 1369 02f2 18000000 		.4byte	.LFE12-.LFB12
 1370 02f6 01       		.uleb128 0x1
 1371 02f7 9C       		.byte	0x9c
 1372 02f8 0D030000 		.4byte	0x30d
 1373 02fc 15       		.uleb128 0x15
 1374 02fd FE020000 		.4byte	.LASF43
 1375 0301 01       		.byte	0x1
 1376 0302 6602     		.2byte	0x266
 1377 0304 83000000 		.4byte	0x83
 1378 0308 5E020000 		.4byte	.LLST9
 1379 030c 00       		.byte	0
 1380 030d 11       		.uleb128 0x11
 1381 030e 63030000 		.4byte	.LASF44
 1382 0312 01       		.byte	0x1
 1383 0313 7E02     		.2byte	0x27e
 1384 0315 00000000 		.4byte	.LFB13
 1385 0319 10000000 		.4byte	.LFE13-.LFB13
 1386 031d 01       		.uleb128 0x1
 1387 031e 9C       		.byte	0x9c
 1388 031f 34030000 		.4byte	0x334
 1389 0323 15       		.uleb128 0x15
 1390 0324 E0000000 		.4byte	.LASF39
ARM GAS  C:\Users\alvin\AppData\Local\Temp\cc3v1X7c.s 			page 41


 1391 0328 01       		.byte	0x1
 1392 0329 7E02     		.2byte	0x27e
 1393 032b 83000000 		.4byte	0x83
 1394 032f 7F020000 		.4byte	.LLST10
 1395 0333 00       		.byte	0
 1396 0334 11       		.uleb128 0x11
 1397 0335 8E030000 		.4byte	.LASF45
 1398 0339 01       		.byte	0x1
 1399 033a 9502     		.2byte	0x295
 1400 033c 00000000 		.4byte	.LFB14
 1401 0340 10000000 		.4byte	.LFE14-.LFB14
 1402 0344 01       		.uleb128 0x1
 1403 0345 9C       		.byte	0x9c
 1404 0346 5B030000 		.4byte	0x35b
 1405 034a 15       		.uleb128 0x15
 1406 034b E0000000 		.4byte	.LASF39
 1407 034f 01       		.byte	0x1
 1408 0350 9502     		.2byte	0x295
 1409 0352 83000000 		.4byte	0x83
 1410 0356 A0020000 		.4byte	.LLST11
 1411 035a 00       		.byte	0
 1412 035b 11       		.uleb128 0x11
 1413 035c C8000000 		.4byte	.LASF46
 1414 0360 01       		.byte	0x1
 1415 0361 B102     		.2byte	0x2b1
 1416 0363 00000000 		.4byte	.LFB15
 1417 0367 1C000000 		.4byte	.LFE15-.LFB15
 1418 036b 01       		.uleb128 0x1
 1419 036c 9C       		.byte	0x9c
 1420 036d A1030000 		.4byte	0x3a1
 1421 0371 15       		.uleb128 0x15
 1422 0372 77030000 		.4byte	.LASF36
 1423 0376 01       		.byte	0x1
 1424 0377 B102     		.2byte	0x2b1
 1425 0379 83000000 		.4byte	0x83
 1426 037d C1020000 		.4byte	.LLST12
 1427 0381 15       		.uleb128 0x15
 1428 0382 A0030000 		.4byte	.LASF47
 1429 0386 01       		.byte	0x1
 1430 0387 B102     		.2byte	0x2b1
 1431 0389 8F000000 		.4byte	0x8f
 1432 038d ED020000 		.4byte	.LLST13
 1433 0391 0D       		.uleb128 0xd
 1434 0392 10000000 		.4byte	.LVL49
 1435 0396 B1050000 		.4byte	0x5b1
 1436 039a 0C       		.uleb128 0xc
 1437 039b 01       		.uleb128 0x1
 1438 039c 50       		.byte	0x50
 1439 039d 01       		.uleb128 0x1
 1440 039e 30       		.byte	0x30
 1441 039f 00       		.byte	0
 1442 03a0 00       		.byte	0
 1443 03a1 11       		.uleb128 0x11
 1444 03a2 DE010000 		.4byte	.LASF48
 1445 03a6 01       		.byte	0x1
 1446 03a7 D302     		.2byte	0x2d3
 1447 03a9 00000000 		.4byte	.LFB16
ARM GAS  C:\Users\alvin\AppData\Local\Temp\cc3v1X7c.s 			page 42


 1448 03ad 1C000000 		.4byte	.LFE16-.LFB16
 1449 03b1 01       		.uleb128 0x1
 1450 03b2 9C       		.byte	0x9c
 1451 03b3 E7030000 		.4byte	0x3e7
 1452 03b7 15       		.uleb128 0x15
 1453 03b8 77030000 		.4byte	.LASF36
 1454 03bc 01       		.byte	0x1
 1455 03bd D302     		.2byte	0x2d3
 1456 03bf 83000000 		.4byte	0x83
 1457 03c3 0E030000 		.4byte	.LLST14
 1458 03c7 15       		.uleb128 0x15
 1459 03c8 07000000 		.4byte	.LASF49
 1460 03cc 01       		.byte	0x1
 1461 03cd D302     		.2byte	0x2d3
 1462 03cf 9B000000 		.4byte	0x9b
 1463 03d3 3A030000 		.4byte	.LLST15
 1464 03d7 0D       		.uleb128 0xd
 1465 03d8 10000000 		.4byte	.LVL53
 1466 03dc B1050000 		.4byte	0x5b1
 1467 03e0 0C       		.uleb128 0xc
 1468 03e1 01       		.uleb128 0x1
 1469 03e2 50       		.byte	0x50
 1470 03e3 01       		.uleb128 0x1
 1471 03e4 30       		.byte	0x30
 1472 03e5 00       		.byte	0
 1473 03e6 00       		.byte	0
 1474 03e7 17       		.uleb128 0x17
 1475 03e8 16000000 		.4byte	.LASF50
 1476 03ec 01       		.byte	0x1
 1477 03ed F402     		.2byte	0x2f4
 1478 03ef 8F000000 		.4byte	0x8f
 1479 03f3 00000000 		.4byte	.LFB17
 1480 03f7 5C000000 		.4byte	.LFE17-.LFB17
 1481 03fb 01       		.uleb128 0x1
 1482 03fc 9C       		.byte	0x9c
 1483 03fd 3F040000 		.4byte	0x43f
 1484 0401 15       		.uleb128 0x15
 1485 0402 77030000 		.4byte	.LASF36
 1486 0406 01       		.byte	0x1
 1487 0407 F402     		.2byte	0x2f4
 1488 0409 83000000 		.4byte	0x83
 1489 040d 6A030000 		.4byte	.LLST16
 1490 0411 15       		.uleb128 0x15
 1491 0412 A7030000 		.4byte	.LASF51
 1492 0416 01       		.byte	0x1
 1493 0417 F402     		.2byte	0x2f4
 1494 0419 8F000000 		.4byte	0x8f
 1495 041d 96030000 		.4byte	.LLST17
 1496 0421 18       		.uleb128 0x18
 1497 0422 D7010000 		.4byte	.LASF52
 1498 0426 01       		.byte	0x1
 1499 0427 F602     		.2byte	0x2f6
 1500 0429 8F000000 		.4byte	0x8f
 1501 042d 01       		.uleb128 0x1
 1502 042e 50       		.byte	0x50
 1503 042f 0D       		.uleb128 0xd
 1504 0430 10000000 		.4byte	.LVL58
ARM GAS  C:\Users\alvin\AppData\Local\Temp\cc3v1X7c.s 			page 43


 1505 0434 B1050000 		.4byte	0x5b1
 1506 0438 0C       		.uleb128 0xc
 1507 0439 01       		.uleb128 0x1
 1508 043a 50       		.byte	0x50
 1509 043b 01       		.uleb128 0x1
 1510 043c 30       		.byte	0x30
 1511 043d 00       		.byte	0
 1512 043e 00       		.byte	0
 1513 043f 17       		.uleb128 0x17
 1514 0440 29030000 		.4byte	.LASF53
 1515 0444 01       		.byte	0x1
 1516 0445 2A03     		.2byte	0x32a
 1517 0447 9B000000 		.4byte	0x9b
 1518 044b 00000000 		.4byte	.LFB18
 1519 044f 40000000 		.4byte	.LFE18-.LFB18
 1520 0453 01       		.uleb128 0x1
 1521 0454 9C       		.byte	0x9c
 1522 0455 95040000 		.4byte	0x495
 1523 0459 15       		.uleb128 0x15
 1524 045a 77030000 		.4byte	.LASF36
 1525 045e 01       		.byte	0x1
 1526 045f 2A03     		.2byte	0x32a
 1527 0461 83000000 		.4byte	0x83
 1528 0465 CD030000 		.4byte	.LLST18
 1529 0469 15       		.uleb128 0x15
 1530 046a A7030000 		.4byte	.LASF51
 1531 046e 01       		.byte	0x1
 1532 046f 2A03     		.2byte	0x32a
 1533 0471 8F000000 		.4byte	0x8f
 1534 0475 F9030000 		.4byte	.LLST19
 1535 0479 19       		.uleb128 0x19
 1536 047a 7E010000 		.4byte	.LASF65
 1537 047e 01       		.byte	0x1
 1538 047f 2C03     		.2byte	0x32c
 1539 0481 C1000000 		.4byte	0xc1
 1540 0485 0D       		.uleb128 0xd
 1541 0486 10000000 		.4byte	.LVL67
 1542 048a B1050000 		.4byte	0x5b1
 1543 048e 0C       		.uleb128 0xc
 1544 048f 01       		.uleb128 0x1
 1545 0490 50       		.byte	0x50
 1546 0491 01       		.uleb128 0x1
 1547 0492 30       		.byte	0x30
 1548 0493 00       		.byte	0
 1549 0494 00       		.byte	0
 1550 0495 17       		.uleb128 0x17
 1551 0496 B2000000 		.4byte	.LASF54
 1552 049a 01       		.byte	0x1
 1553 049b 5703     		.2byte	0x357
 1554 049d A7000000 		.4byte	0xa7
 1555 04a1 00000000 		.4byte	.LFB19
 1556 04a5 48000000 		.4byte	.LFE19-.LFB19
 1557 04a9 01       		.uleb128 0x1
 1558 04aa 9C       		.byte	0x9c
 1559 04ab ED040000 		.4byte	0x4ed
 1560 04af 15       		.uleb128 0x15
 1561 04b0 77030000 		.4byte	.LASF36
ARM GAS  C:\Users\alvin\AppData\Local\Temp\cc3v1X7c.s 			page 44


 1562 04b4 01       		.byte	0x1
 1563 04b5 5703     		.2byte	0x357
 1564 04b7 83000000 		.4byte	0x83
 1565 04bb 25040000 		.4byte	.LLST20
 1566 04bf 15       		.uleb128 0x15
 1567 04c0 A7030000 		.4byte	.LASF51
 1568 04c4 01       		.byte	0x1
 1569 04c5 5703     		.2byte	0x357
 1570 04c7 8F000000 		.4byte	0x8f
 1571 04cb 51040000 		.4byte	.LLST21
 1572 04cf 18       		.uleb128 0x18
 1573 04d0 97010000 		.4byte	.LASF55
 1574 04d4 01       		.byte	0x1
 1575 04d5 5903     		.2byte	0x359
 1576 04d7 A7000000 		.4byte	0xa7
 1577 04db 01       		.uleb128 0x1
 1578 04dc 50       		.byte	0x50
 1579 04dd 0D       		.uleb128 0xd
 1580 04de 10000000 		.4byte	.LVL74
 1581 04e2 B1050000 		.4byte	0x5b1
 1582 04e6 0C       		.uleb128 0xc
 1583 04e7 01       		.uleb128 0x1
 1584 04e8 50       		.byte	0x50
 1585 04e9 01       		.uleb128 0x1
 1586 04ea 30       		.byte	0x30
 1587 04eb 00       		.byte	0
 1588 04ec 00       		.byte	0
 1589 04ed 0E       		.uleb128 0xe
 1590 04ee 83000000 		.4byte	0x83
 1591 04f2 FD040000 		.4byte	0x4fd
 1592 04f6 0F       		.uleb128 0xf
 1593 04f7 F8000000 		.4byte	0xf8
 1594 04fb 01       		.byte	0x1
 1595 04fc 00       		.byte	0
 1596 04fd 0A       		.uleb128 0xa
 1597 04fe 0E040000 		.4byte	.LASF56
 1598 0502 01       		.byte	0x1
 1599 0503 21       		.byte	0x21
 1600 0504 0E050000 		.4byte	0x50e
 1601 0508 05       		.uleb128 0x5
 1602 0509 03       		.byte	0x3
 1603 050a 00000000 		.4byte	IR_ADC_channelsConfig
 1604 050e 10       		.uleb128 0x10
 1605 050f ED040000 		.4byte	0x4ed
 1606 0513 1A       		.uleb128 0x1a
 1607 0514 F3010000 		.4byte	.LASF57
 1608 0518 01       		.byte	0x1
 1609 0519 18       		.byte	0x18
 1610 051a 6B000000 		.4byte	0x6b
 1611 051e 05       		.uleb128 0x5
 1612 051f 03       		.byte	0x3
 1613 0520 00000000 		.4byte	IR_ADC_initVar
 1614 0524 0E       		.uleb128 0xe
 1615 0525 8F000000 		.4byte	0x8f
 1616 0529 34050000 		.4byte	0x534
 1617 052d 0F       		.uleb128 0xf
 1618 052e F8000000 		.4byte	0xf8
ARM GAS  C:\Users\alvin\AppData\Local\Temp\cc3v1X7c.s 			page 45


 1619 0532 01       		.byte	0x1
 1620 0533 00       		.byte	0
 1621 0534 1A       		.uleb128 0x1a
 1622 0535 C9010000 		.4byte	.LASF58
 1623 0539 01       		.byte	0x1
 1624 053a 19       		.byte	0x19
 1625 053b 45050000 		.4byte	0x545
 1626 053f 05       		.uleb128 0x5
 1627 0540 03       		.byte	0x3
 1628 0541 00000000 		.4byte	IR_ADC_offset
 1629 0545 05       		.uleb128 0x5
 1630 0546 24050000 		.4byte	0x524
 1631 054a 0E       		.uleb128 0xe
 1632 054b 9B000000 		.4byte	0x9b
 1633 054f 5A050000 		.4byte	0x55a
 1634 0553 0F       		.uleb128 0xf
 1635 0554 F8000000 		.4byte	0xf8
 1636 0558 01       		.byte	0x1
 1637 0559 00       		.byte	0
 1638 055a 1A       		.uleb128 0x1a
 1639 055b 67010000 		.4byte	.LASF59
 1640 055f 01       		.byte	0x1
 1641 0560 1A       		.byte	0x1a
 1642 0561 6B050000 		.4byte	0x56b
 1643 0565 05       		.uleb128 0x5
 1644 0566 03       		.byte	0x3
 1645 0567 00000000 		.4byte	IR_ADC_countsPer10Volt
 1646 056b 05       		.uleb128 0x5
 1647 056c 4A050000 		.4byte	0x54a
 1648 0570 1B       		.uleb128 0x1b
 1649 0571 DA020000 		.4byte	.LASF60
 1650 0575 03       		.byte	0x3
 1651 0576 BE       		.byte	0xbe
 1652 0577 86050000 		.4byte	0x586
 1653 057b 1C       		.uleb128 0x1c
 1654 057c 6B000000 		.4byte	0x6b
 1655 0580 1C       		.uleb128 0x1c
 1656 0581 6B000000 		.4byte	0x6b
 1657 0585 00       		.byte	0
 1658 0586 1D       		.uleb128 0x1d
 1659 0587 BA010000 		.4byte	.LASF66
 1660 058b 03       		.byte	0x3
 1661 058c BB       		.byte	0xbb
 1662 058d E5000000 		.4byte	0xe5
 1663 0591 A0050000 		.4byte	0x5a0
 1664 0595 1C       		.uleb128 0x1c
 1665 0596 6B000000 		.4byte	0x6b
 1666 059a 1C       		.uleb128 0x1c
 1667 059b E5000000 		.4byte	0xe5
 1668 059f 00       		.byte	0
 1669 05a0 1B       		.uleb128 0x1b
 1670 05a1 A1000000 		.4byte	.LASF61
 1671 05a5 03       		.byte	0x3
 1672 05a6 D8       		.byte	0xd8
 1673 05a7 B1050000 		.4byte	0x5b1
 1674 05ab 1C       		.uleb128 0x1c
 1675 05ac 77000000 		.4byte	0x77
ARM GAS  C:\Users\alvin\AppData\Local\Temp\cc3v1X7c.s 			page 46


 1676 05b0 00       		.byte	0
 1677 05b1 1E       		.uleb128 0x1e
 1678 05b2 14030000 		.4byte	.LASF67
 1679 05b6 03       		.byte	0x3
 1680 05b7 E5       		.byte	0xe5
 1681 05b8 1C       		.uleb128 0x1c
 1682 05b9 6B000000 		.4byte	0x6b
 1683 05bd 00       		.byte	0
 1684 05be 00       		.byte	0
 1685              		.section	.debug_abbrev,"",%progbits
 1686              	.Ldebug_abbrev0:
 1687 0000 01       		.uleb128 0x1
 1688 0001 11       		.uleb128 0x11
 1689 0002 01       		.byte	0x1
 1690 0003 25       		.uleb128 0x25
 1691 0004 0E       		.uleb128 0xe
 1692 0005 13       		.uleb128 0x13
 1693 0006 0B       		.uleb128 0xb
 1694 0007 03       		.uleb128 0x3
 1695 0008 0E       		.uleb128 0xe
 1696 0009 1B       		.uleb128 0x1b
 1697 000a 0E       		.uleb128 0xe
 1698 000b 55       		.uleb128 0x55
 1699 000c 17       		.uleb128 0x17
 1700 000d 11       		.uleb128 0x11
 1701 000e 01       		.uleb128 0x1
 1702 000f 10       		.uleb128 0x10
 1703 0010 17       		.uleb128 0x17
 1704 0011 00       		.byte	0
 1705 0012 00       		.byte	0
 1706 0013 02       		.uleb128 0x2
 1707 0014 24       		.uleb128 0x24
 1708 0015 00       		.byte	0
 1709 0016 0B       		.uleb128 0xb
 1710 0017 0B       		.uleb128 0xb
 1711 0018 3E       		.uleb128 0x3e
 1712 0019 0B       		.uleb128 0xb
 1713 001a 03       		.uleb128 0x3
 1714 001b 0E       		.uleb128 0xe
 1715 001c 00       		.byte	0
 1716 001d 00       		.byte	0
 1717 001e 03       		.uleb128 0x3
 1718 001f 24       		.uleb128 0x24
 1719 0020 00       		.byte	0
 1720 0021 0B       		.uleb128 0xb
 1721 0022 0B       		.uleb128 0xb
 1722 0023 3E       		.uleb128 0x3e
 1723 0024 0B       		.uleb128 0xb
 1724 0025 03       		.uleb128 0x3
 1725 0026 08       		.uleb128 0x8
 1726 0027 00       		.byte	0
 1727 0028 00       		.byte	0
 1728 0029 04       		.uleb128 0x4
 1729 002a 16       		.uleb128 0x16
 1730 002b 00       		.byte	0
 1731 002c 03       		.uleb128 0x3
 1732 002d 0E       		.uleb128 0xe
ARM GAS  C:\Users\alvin\AppData\Local\Temp\cc3v1X7c.s 			page 47


 1733 002e 3A       		.uleb128 0x3a
 1734 002f 0B       		.uleb128 0xb
 1735 0030 3B       		.uleb128 0x3b
 1736 0031 05       		.uleb128 0x5
 1737 0032 49       		.uleb128 0x49
 1738 0033 13       		.uleb128 0x13
 1739 0034 00       		.byte	0
 1740 0035 00       		.byte	0
 1741 0036 05       		.uleb128 0x5
 1742 0037 35       		.uleb128 0x35
 1743 0038 00       		.byte	0
 1744 0039 49       		.uleb128 0x49
 1745 003a 13       		.uleb128 0x13
 1746 003b 00       		.byte	0
 1747 003c 00       		.byte	0
 1748 003d 06       		.uleb128 0x6
 1749 003e 0F       		.uleb128 0xf
 1750 003f 00       		.byte	0
 1751 0040 0B       		.uleb128 0xb
 1752 0041 0B       		.uleb128 0xb
 1753 0042 49       		.uleb128 0x49
 1754 0043 13       		.uleb128 0x13
 1755 0044 00       		.byte	0
 1756 0045 00       		.byte	0
 1757 0046 07       		.uleb128 0x7
 1758 0047 15       		.uleb128 0x15
 1759 0048 00       		.byte	0
 1760 0049 27       		.uleb128 0x27
 1761 004a 19       		.uleb128 0x19
 1762 004b 00       		.byte	0
 1763 004c 00       		.byte	0
 1764 004d 08       		.uleb128 0x8
 1765 004e 2E       		.uleb128 0x2e
 1766 004f 01       		.byte	0x1
 1767 0050 3F       		.uleb128 0x3f
 1768 0051 19       		.uleb128 0x19
 1769 0052 03       		.uleb128 0x3
 1770 0053 0E       		.uleb128 0xe
 1771 0054 3A       		.uleb128 0x3a
 1772 0055 0B       		.uleb128 0xb
 1773 0056 3B       		.uleb128 0x3b
 1774 0057 0B       		.uleb128 0xb
 1775 0058 27       		.uleb128 0x27
 1776 0059 19       		.uleb128 0x19
 1777 005a 11       		.uleb128 0x11
 1778 005b 01       		.uleb128 0x1
 1779 005c 12       		.uleb128 0x12
 1780 005d 06       		.uleb128 0x6
 1781 005e 40       		.uleb128 0x40
 1782 005f 18       		.uleb128 0x18
 1783 0060 9742     		.uleb128 0x2117
 1784 0062 19       		.uleb128 0x19
 1785 0063 01       		.uleb128 0x1
 1786 0064 13       		.uleb128 0x13
 1787 0065 00       		.byte	0
 1788 0066 00       		.byte	0
 1789 0067 09       		.uleb128 0x9
ARM GAS  C:\Users\alvin\AppData\Local\Temp\cc3v1X7c.s 			page 48


 1790 0068 34       		.uleb128 0x34
 1791 0069 00       		.byte	0
 1792 006a 03       		.uleb128 0x3
 1793 006b 0E       		.uleb128 0xe
 1794 006c 3A       		.uleb128 0x3a
 1795 006d 0B       		.uleb128 0xb
 1796 006e 3B       		.uleb128 0x3b
 1797 006f 0B       		.uleb128 0xb
 1798 0070 49       		.uleb128 0x49
 1799 0071 13       		.uleb128 0x13
 1800 0072 02       		.uleb128 0x2
 1801 0073 17       		.uleb128 0x17
 1802 0074 00       		.byte	0
 1803 0075 00       		.byte	0
 1804 0076 0A       		.uleb128 0xa
 1805 0077 34       		.uleb128 0x34
 1806 0078 00       		.byte	0
 1807 0079 03       		.uleb128 0x3
 1808 007a 0E       		.uleb128 0xe
 1809 007b 3A       		.uleb128 0x3a
 1810 007c 0B       		.uleb128 0xb
 1811 007d 3B       		.uleb128 0x3b
 1812 007e 0B       		.uleb128 0xb
 1813 007f 49       		.uleb128 0x49
 1814 0080 13       		.uleb128 0x13
 1815 0081 02       		.uleb128 0x2
 1816 0082 18       		.uleb128 0x18
 1817 0083 00       		.byte	0
 1818 0084 00       		.byte	0
 1819 0085 0B       		.uleb128 0xb
 1820 0086 898201   		.uleb128 0x4109
 1821 0089 01       		.byte	0x1
 1822 008a 11       		.uleb128 0x11
 1823 008b 01       		.uleb128 0x1
 1824 008c 31       		.uleb128 0x31
 1825 008d 13       		.uleb128 0x13
 1826 008e 01       		.uleb128 0x1
 1827 008f 13       		.uleb128 0x13
 1828 0090 00       		.byte	0
 1829 0091 00       		.byte	0
 1830 0092 0C       		.uleb128 0xc
 1831 0093 8A8201   		.uleb128 0x410a
 1832 0096 00       		.byte	0
 1833 0097 02       		.uleb128 0x2
 1834 0098 18       		.uleb128 0x18
 1835 0099 9142     		.uleb128 0x2111
 1836 009b 18       		.uleb128 0x18
 1837 009c 00       		.byte	0
 1838 009d 00       		.byte	0
 1839 009e 0D       		.uleb128 0xd
 1840 009f 898201   		.uleb128 0x4109
 1841 00a2 01       		.byte	0x1
 1842 00a3 11       		.uleb128 0x11
 1843 00a4 01       		.uleb128 0x1
 1844 00a5 31       		.uleb128 0x31
 1845 00a6 13       		.uleb128 0x13
 1846 00a7 00       		.byte	0
ARM GAS  C:\Users\alvin\AppData\Local\Temp\cc3v1X7c.s 			page 49


 1847 00a8 00       		.byte	0
 1848 00a9 0E       		.uleb128 0xe
 1849 00aa 01       		.uleb128 0x1
 1850 00ab 01       		.byte	0x1
 1851 00ac 49       		.uleb128 0x49
 1852 00ad 13       		.uleb128 0x13
 1853 00ae 01       		.uleb128 0x1
 1854 00af 13       		.uleb128 0x13
 1855 00b0 00       		.byte	0
 1856 00b1 00       		.byte	0
 1857 00b2 0F       		.uleb128 0xf
 1858 00b3 21       		.uleb128 0x21
 1859 00b4 00       		.byte	0
 1860 00b5 49       		.uleb128 0x49
 1861 00b6 13       		.uleb128 0x13
 1862 00b7 2F       		.uleb128 0x2f
 1863 00b8 0B       		.uleb128 0xb
 1864 00b9 00       		.byte	0
 1865 00ba 00       		.byte	0
 1866 00bb 10       		.uleb128 0x10
 1867 00bc 26       		.uleb128 0x26
 1868 00bd 00       		.byte	0
 1869 00be 49       		.uleb128 0x49
 1870 00bf 13       		.uleb128 0x13
 1871 00c0 00       		.byte	0
 1872 00c1 00       		.byte	0
 1873 00c2 11       		.uleb128 0x11
 1874 00c3 2E       		.uleb128 0x2e
 1875 00c4 01       		.byte	0x1
 1876 00c5 3F       		.uleb128 0x3f
 1877 00c6 19       		.uleb128 0x19
 1878 00c7 03       		.uleb128 0x3
 1879 00c8 0E       		.uleb128 0xe
 1880 00c9 3A       		.uleb128 0x3a
 1881 00ca 0B       		.uleb128 0xb
 1882 00cb 3B       		.uleb128 0x3b
 1883 00cc 05       		.uleb128 0x5
 1884 00cd 27       		.uleb128 0x27
 1885 00ce 19       		.uleb128 0x19
 1886 00cf 11       		.uleb128 0x11
 1887 00d0 01       		.uleb128 0x1
 1888 00d1 12       		.uleb128 0x12
 1889 00d2 06       		.uleb128 0x6
 1890 00d3 40       		.uleb128 0x40
 1891 00d4 18       		.uleb128 0x18
 1892 00d5 9742     		.uleb128 0x2117
 1893 00d7 19       		.uleb128 0x19
 1894 00d8 01       		.uleb128 0x1
 1895 00d9 13       		.uleb128 0x13
 1896 00da 00       		.byte	0
 1897 00db 00       		.byte	0
 1898 00dc 12       		.uleb128 0x12
 1899 00dd 898201   		.uleb128 0x4109
 1900 00e0 00       		.byte	0
 1901 00e1 11       		.uleb128 0x11
 1902 00e2 01       		.uleb128 0x1
 1903 00e3 31       		.uleb128 0x31
ARM GAS  C:\Users\alvin\AppData\Local\Temp\cc3v1X7c.s 			page 50


 1904 00e4 13       		.uleb128 0x13
 1905 00e5 00       		.byte	0
 1906 00e6 00       		.byte	0
 1907 00e7 13       		.uleb128 0x13
 1908 00e8 2E       		.uleb128 0x2e
 1909 00e9 00       		.byte	0
 1910 00ea 3F       		.uleb128 0x3f
 1911 00eb 19       		.uleb128 0x19
 1912 00ec 03       		.uleb128 0x3
 1913 00ed 0E       		.uleb128 0xe
 1914 00ee 3A       		.uleb128 0x3a
 1915 00ef 0B       		.uleb128 0xb
 1916 00f0 3B       		.uleb128 0x3b
 1917 00f1 05       		.uleb128 0x5
 1918 00f2 27       		.uleb128 0x27
 1919 00f3 19       		.uleb128 0x19
 1920 00f4 11       		.uleb128 0x11
 1921 00f5 01       		.uleb128 0x1
 1922 00f6 12       		.uleb128 0x12
 1923 00f7 06       		.uleb128 0x6
 1924 00f8 40       		.uleb128 0x40
 1925 00f9 18       		.uleb128 0x18
 1926 00fa 9742     		.uleb128 0x2117
 1927 00fc 19       		.uleb128 0x19
 1928 00fd 00       		.byte	0
 1929 00fe 00       		.byte	0
 1930 00ff 14       		.uleb128 0x14
 1931 0100 2E       		.uleb128 0x2e
 1932 0101 01       		.byte	0x1
 1933 0102 3F       		.uleb128 0x3f
 1934 0103 19       		.uleb128 0x19
 1935 0104 03       		.uleb128 0x3
 1936 0105 0E       		.uleb128 0xe
 1937 0106 3A       		.uleb128 0x3a
 1938 0107 0B       		.uleb128 0xb
 1939 0108 3B       		.uleb128 0x3b
 1940 0109 05       		.uleb128 0x5
 1941 010a 27       		.uleb128 0x27
 1942 010b 19       		.uleb128 0x19
 1943 010c 49       		.uleb128 0x49
 1944 010d 13       		.uleb128 0x13
 1945 010e 11       		.uleb128 0x11
 1946 010f 01       		.uleb128 0x1
 1947 0110 12       		.uleb128 0x12
 1948 0111 06       		.uleb128 0x6
 1949 0112 40       		.uleb128 0x40
 1950 0113 18       		.uleb128 0x18
 1951 0114 9742     		.uleb128 0x2117
 1952 0116 19       		.uleb128 0x19
 1953 0117 01       		.uleb128 0x1
 1954 0118 13       		.uleb128 0x13
 1955 0119 00       		.byte	0
 1956 011a 00       		.byte	0
 1957 011b 15       		.uleb128 0x15
 1958 011c 05       		.uleb128 0x5
 1959 011d 00       		.byte	0
 1960 011e 03       		.uleb128 0x3
ARM GAS  C:\Users\alvin\AppData\Local\Temp\cc3v1X7c.s 			page 51


 1961 011f 0E       		.uleb128 0xe
 1962 0120 3A       		.uleb128 0x3a
 1963 0121 0B       		.uleb128 0xb
 1964 0122 3B       		.uleb128 0x3b
 1965 0123 05       		.uleb128 0x5
 1966 0124 49       		.uleb128 0x49
 1967 0125 13       		.uleb128 0x13
 1968 0126 02       		.uleb128 0x2
 1969 0127 17       		.uleb128 0x17
 1970 0128 00       		.byte	0
 1971 0129 00       		.byte	0
 1972 012a 16       		.uleb128 0x16
 1973 012b 34       		.uleb128 0x34
 1974 012c 00       		.byte	0
 1975 012d 03       		.uleb128 0x3
 1976 012e 0E       		.uleb128 0xe
 1977 012f 3A       		.uleb128 0x3a
 1978 0130 0B       		.uleb128 0xb
 1979 0131 3B       		.uleb128 0x3b
 1980 0132 05       		.uleb128 0x5
 1981 0133 49       		.uleb128 0x49
 1982 0134 13       		.uleb128 0x13
 1983 0135 02       		.uleb128 0x2
 1984 0136 17       		.uleb128 0x17
 1985 0137 00       		.byte	0
 1986 0138 00       		.byte	0
 1987 0139 17       		.uleb128 0x17
 1988 013a 2E       		.uleb128 0x2e
 1989 013b 01       		.byte	0x1
 1990 013c 3F       		.uleb128 0x3f
 1991 013d 19       		.uleb128 0x19
 1992 013e 03       		.uleb128 0x3
 1993 013f 0E       		.uleb128 0xe
 1994 0140 3A       		.uleb128 0x3a
 1995 0141 0B       		.uleb128 0xb
 1996 0142 3B       		.uleb128 0x3b
 1997 0143 05       		.uleb128 0x5
 1998 0144 27       		.uleb128 0x27
 1999 0145 19       		.uleb128 0x19
 2000 0146 49       		.uleb128 0x49
 2001 0147 13       		.uleb128 0x13
 2002 0148 11       		.uleb128 0x11
 2003 0149 01       		.uleb128 0x1
 2004 014a 12       		.uleb128 0x12
 2005 014b 06       		.uleb128 0x6
 2006 014c 40       		.uleb128 0x40
 2007 014d 18       		.uleb128 0x18
 2008 014e 9642     		.uleb128 0x2116
 2009 0150 19       		.uleb128 0x19
 2010 0151 01       		.uleb128 0x1
 2011 0152 13       		.uleb128 0x13
 2012 0153 00       		.byte	0
 2013 0154 00       		.byte	0
 2014 0155 18       		.uleb128 0x18
 2015 0156 34       		.uleb128 0x34
 2016 0157 00       		.byte	0
 2017 0158 03       		.uleb128 0x3
ARM GAS  C:\Users\alvin\AppData\Local\Temp\cc3v1X7c.s 			page 52


 2018 0159 0E       		.uleb128 0xe
 2019 015a 3A       		.uleb128 0x3a
 2020 015b 0B       		.uleb128 0xb
 2021 015c 3B       		.uleb128 0x3b
 2022 015d 05       		.uleb128 0x5
 2023 015e 49       		.uleb128 0x49
 2024 015f 13       		.uleb128 0x13
 2025 0160 02       		.uleb128 0x2
 2026 0161 18       		.uleb128 0x18
 2027 0162 00       		.byte	0
 2028 0163 00       		.byte	0
 2029 0164 19       		.uleb128 0x19
 2030 0165 34       		.uleb128 0x34
 2031 0166 00       		.byte	0
 2032 0167 03       		.uleb128 0x3
 2033 0168 0E       		.uleb128 0xe
 2034 0169 3A       		.uleb128 0x3a
 2035 016a 0B       		.uleb128 0xb
 2036 016b 3B       		.uleb128 0x3b
 2037 016c 05       		.uleb128 0x5
 2038 016d 49       		.uleb128 0x49
 2039 016e 13       		.uleb128 0x13
 2040 016f 00       		.byte	0
 2041 0170 00       		.byte	0
 2042 0171 1A       		.uleb128 0x1a
 2043 0172 34       		.uleb128 0x34
 2044 0173 00       		.byte	0
 2045 0174 03       		.uleb128 0x3
 2046 0175 0E       		.uleb128 0xe
 2047 0176 3A       		.uleb128 0x3a
 2048 0177 0B       		.uleb128 0xb
 2049 0178 3B       		.uleb128 0x3b
 2050 0179 0B       		.uleb128 0xb
 2051 017a 49       		.uleb128 0x49
 2052 017b 13       		.uleb128 0x13
 2053 017c 3F       		.uleb128 0x3f
 2054 017d 19       		.uleb128 0x19
 2055 017e 02       		.uleb128 0x2
 2056 017f 18       		.uleb128 0x18
 2057 0180 00       		.byte	0
 2058 0181 00       		.byte	0
 2059 0182 1B       		.uleb128 0x1b
 2060 0183 2E       		.uleb128 0x2e
 2061 0184 01       		.byte	0x1
 2062 0185 3F       		.uleb128 0x3f
 2063 0186 19       		.uleb128 0x19
 2064 0187 03       		.uleb128 0x3
 2065 0188 0E       		.uleb128 0xe
 2066 0189 3A       		.uleb128 0x3a
 2067 018a 0B       		.uleb128 0xb
 2068 018b 3B       		.uleb128 0x3b
 2069 018c 0B       		.uleb128 0xb
 2070 018d 27       		.uleb128 0x27
 2071 018e 19       		.uleb128 0x19
 2072 018f 3C       		.uleb128 0x3c
 2073 0190 19       		.uleb128 0x19
 2074 0191 01       		.uleb128 0x1
ARM GAS  C:\Users\alvin\AppData\Local\Temp\cc3v1X7c.s 			page 53


 2075 0192 13       		.uleb128 0x13
 2076 0193 00       		.byte	0
 2077 0194 00       		.byte	0
 2078 0195 1C       		.uleb128 0x1c
 2079 0196 05       		.uleb128 0x5
 2080 0197 00       		.byte	0
 2081 0198 49       		.uleb128 0x49
 2082 0199 13       		.uleb128 0x13
 2083 019a 00       		.byte	0
 2084 019b 00       		.byte	0
 2085 019c 1D       		.uleb128 0x1d
 2086 019d 2E       		.uleb128 0x2e
 2087 019e 01       		.byte	0x1
 2088 019f 3F       		.uleb128 0x3f
 2089 01a0 19       		.uleb128 0x19
 2090 01a1 03       		.uleb128 0x3
 2091 01a2 0E       		.uleb128 0xe
 2092 01a3 3A       		.uleb128 0x3a
 2093 01a4 0B       		.uleb128 0xb
 2094 01a5 3B       		.uleb128 0x3b
 2095 01a6 0B       		.uleb128 0xb
 2096 01a7 27       		.uleb128 0x27
 2097 01a8 19       		.uleb128 0x19
 2098 01a9 49       		.uleb128 0x49
 2099 01aa 13       		.uleb128 0x13
 2100 01ab 3C       		.uleb128 0x3c
 2101 01ac 19       		.uleb128 0x19
 2102 01ad 01       		.uleb128 0x1
 2103 01ae 13       		.uleb128 0x13
 2104 01af 00       		.byte	0
 2105 01b0 00       		.byte	0
 2106 01b1 1E       		.uleb128 0x1e
 2107 01b2 2E       		.uleb128 0x2e
 2108 01b3 01       		.byte	0x1
 2109 01b4 3F       		.uleb128 0x3f
 2110 01b5 19       		.uleb128 0x19
 2111 01b6 03       		.uleb128 0x3
 2112 01b7 0E       		.uleb128 0xe
 2113 01b8 3A       		.uleb128 0x3a
 2114 01b9 0B       		.uleb128 0xb
 2115 01ba 3B       		.uleb128 0x3b
 2116 01bb 0B       		.uleb128 0xb
 2117 01bc 27       		.uleb128 0x27
 2118 01bd 19       		.uleb128 0x19
 2119 01be 3C       		.uleb128 0x3c
 2120 01bf 19       		.uleb128 0x19
 2121 01c0 00       		.byte	0
 2122 01c1 00       		.byte	0
 2123 01c2 00       		.byte	0
 2124              		.section	.debug_loc,"",%progbits
 2125              	.Ldebug_loc0:
 2126              	.LLST0:
 2127 0000 7C000000 		.4byte	.LVL5
 2128 0004 80000000 		.4byte	.LVL6
 2129 0008 0200     		.2byte	0x2
 2130 000a 30       		.byte	0x30
 2131 000b 9F       		.byte	0x9f
ARM GAS  C:\Users\alvin\AppData\Local\Temp\cc3v1X7c.s 			page 54


 2132 000c 80000000 		.4byte	.LVL6
 2133 0010 84010000 		.4byte	.LFE3
 2134 0014 0100     		.2byte	0x1
 2135 0016 52       		.byte	0x52
 2136 0017 00000000 		.4byte	0
 2137 001b 00000000 		.4byte	0
 2138              	.LLST1:
 2139 001f 70000000 		.4byte	.LVL2
 2140 0023 76000000 		.4byte	.LVL3
 2141 0027 0700     		.2byte	0x7
 2142 0029 71       		.byte	0x71
 2143 002a 00       		.sleb128 0
 2144 002b 40       		.byte	0x40
 2145 002c 49       		.byte	0x49
 2146 002d 24       		.byte	0x24
 2147 002e 21       		.byte	0x21
 2148 002f 9F       		.byte	0x9f
 2149 0030 7A000000 		.4byte	.LVL4
 2150 0034 80000000 		.4byte	.LVL6
 2151 0038 0100     		.2byte	0x1
 2152 003a 53       		.byte	0x53
 2153 003b 8C000000 		.4byte	.LVL7
 2154 003f 9E000000 		.4byte	.LVL9
 2155 0043 0100     		.2byte	0x1
 2156 0045 53       		.byte	0x53
 2157 0046 9E000000 		.4byte	.LVL9
 2158 004a A4000000 		.4byte	.LVL10
 2159 004e 0200     		.2byte	0x2
 2160 0050 71       		.byte	0x71
 2161 0051 00       		.sleb128 0
 2162 0052 A4000000 		.4byte	.LVL10
 2163 0056 B0000000 		.4byte	.LVL11
 2164 005a 0700     		.2byte	0x7
 2165 005c 72       		.byte	0x72
 2166 005d 00       		.sleb128 0
 2167 005e 32       		.byte	0x32
 2168 005f 24       		.byte	0x24
 2169 0060 7C       		.byte	0x7c
 2170 0061 00       		.sleb128 0
 2171 0062 22       		.byte	0x22
 2172 0063 B0000000 		.4byte	.LVL11
 2173 0067 B4000000 		.4byte	.LVL12
 2174 006b 1E00     		.2byte	0x1e
 2175 006d 72       		.byte	0x72
 2176 006e 00       		.sleb128 0
 2177 006f 32       		.byte	0x32
 2178 0070 24       		.byte	0x24
 2179 0071 03       		.byte	0x3
 2180 0072 00000000 		.4byte	.LANCHOR0
 2181 0076 22       		.byte	0x22
 2182 0077 06       		.byte	0x6
 2183 0078 0A       		.byte	0xa
 2184 0079 0037     		.2byte	0x3700
 2185 007b 1A       		.byte	0x1a
 2186 007c 72       		.byte	0x72
 2187 007d 00       		.sleb128 0
 2188 007e 03       		.byte	0x3
ARM GAS  C:\Users\alvin\AppData\Local\Temp\cc3v1X7c.s 			page 55


 2189 007f 08000000 		.4byte	.LANCHOR0+8
 2190 0083 22       		.byte	0x22
 2191 0084 94       		.byte	0x94
 2192 0085 01       		.byte	0x1
 2193 0086 08       		.byte	0x8
 2194 0087 FF       		.byte	0xff
 2195 0088 1A       		.byte	0x1a
 2196 0089 21       		.byte	0x21
 2197 008a 9F       		.byte	0x9f
 2198 008b B4000000 		.4byte	.LVL12
 2199 008f C0000000 		.4byte	.LVL13
 2200 0093 1A00     		.2byte	0x1a
 2201 0095 72       		.byte	0x72
 2202 0096 00       		.sleb128 0
 2203 0097 32       		.byte	0x32
 2204 0098 24       		.byte	0x24
 2205 0099 71       		.byte	0x71
 2206 009a 00       		.sleb128 0
 2207 009b 22       		.byte	0x22
 2208 009c 06       		.byte	0x6
 2209 009d 0A       		.byte	0xa
 2210 009e 0037     		.2byte	0x3700
 2211 00a0 1A       		.byte	0x1a
 2212 00a1 71       		.byte	0x71
 2213 00a2 00       		.sleb128 0
 2214 00a3 72       		.byte	0x72
 2215 00a4 00       		.sleb128 0
 2216 00a5 22       		.byte	0x22
 2217 00a6 23       		.byte	0x23
 2218 00a7 08       		.uleb128 0x8
 2219 00a8 94       		.byte	0x94
 2220 00a9 01       		.byte	0x1
 2221 00aa 08       		.byte	0x8
 2222 00ab FF       		.byte	0xff
 2223 00ac 1A       		.byte	0x1a
 2224 00ad 21       		.byte	0x21
 2225 00ae 9F       		.byte	0x9f
 2226 00af C0000000 		.4byte	.LVL13
 2227 00b3 D0000000 		.4byte	.LVL14
 2228 00b7 1E00     		.2byte	0x1e
 2229 00b9 72       		.byte	0x72
 2230 00ba 00       		.sleb128 0
 2231 00bb 32       		.byte	0x32
 2232 00bc 24       		.byte	0x24
 2233 00bd 03       		.byte	0x3
 2234 00be 00000000 		.4byte	.LANCHOR0
 2235 00c2 22       		.byte	0x22
 2236 00c3 06       		.byte	0x6
 2237 00c4 0A       		.byte	0xa
 2238 00c5 0037     		.2byte	0x3700
 2239 00c7 1A       		.byte	0x1a
 2240 00c8 72       		.byte	0x72
 2241 00c9 00       		.sleb128 0
 2242 00ca 03       		.byte	0x3
 2243 00cb 08000000 		.4byte	.LANCHOR0+8
 2244 00cf 22       		.byte	0x22
 2245 00d0 94       		.byte	0x94
ARM GAS  C:\Users\alvin\AppData\Local\Temp\cc3v1X7c.s 			page 56


 2246 00d1 01       		.byte	0x1
 2247 00d2 08       		.byte	0x8
 2248 00d3 FF       		.byte	0xff
 2249 00d4 1A       		.byte	0x1a
 2250 00d5 21       		.byte	0x21
 2251 00d6 9F       		.byte	0x9f
 2252 00d7 D0000000 		.4byte	.LVL14
 2253 00db D2000000 		.4byte	.LVL15
 2254 00df 1A00     		.2byte	0x1a
 2255 00e1 72       		.byte	0x72
 2256 00e2 00       		.sleb128 0
 2257 00e3 32       		.byte	0x32
 2258 00e4 24       		.byte	0x24
 2259 00e5 71       		.byte	0x71
 2260 00e6 00       		.sleb128 0
 2261 00e7 22       		.byte	0x22
 2262 00e8 06       		.byte	0x6
 2263 00e9 0A       		.byte	0xa
 2264 00ea 0037     		.2byte	0x3700
 2265 00ec 1A       		.byte	0x1a
 2266 00ed 71       		.byte	0x71
 2267 00ee 00       		.sleb128 0
 2268 00ef 72       		.byte	0x72
 2269 00f0 00       		.sleb128 0
 2270 00f1 22       		.byte	0x22
 2271 00f2 23       		.byte	0x23
 2272 00f3 08       		.uleb128 0x8
 2273 00f4 94       		.byte	0x94
 2274 00f5 01       		.byte	0x1
 2275 00f6 08       		.byte	0x8
 2276 00f7 FF       		.byte	0xff
 2277 00f8 1A       		.byte	0x1a
 2278 00f9 21       		.byte	0x21
 2279 00fa 9F       		.byte	0x9f
 2280 00fb D2000000 		.4byte	.LVL15
 2281 00ff 14010000 		.4byte	.LVL18
 2282 0103 1E00     		.2byte	0x1e
 2283 0105 72       		.byte	0x72
 2284 0106 00       		.sleb128 0
 2285 0107 32       		.byte	0x32
 2286 0108 24       		.byte	0x24
 2287 0109 03       		.byte	0x3
 2288 010a 00000000 		.4byte	.LANCHOR0
 2289 010e 22       		.byte	0x22
 2290 010f 06       		.byte	0x6
 2291 0110 0A       		.byte	0xa
 2292 0111 0037     		.2byte	0x3700
 2293 0113 1A       		.byte	0x1a
 2294 0114 72       		.byte	0x72
 2295 0115 00       		.sleb128 0
 2296 0116 03       		.byte	0x3
 2297 0117 08000000 		.4byte	.LANCHOR0+8
 2298 011b 22       		.byte	0x22
 2299 011c 94       		.byte	0x94
 2300 011d 01       		.byte	0x1
 2301 011e 08       		.byte	0x8
 2302 011f FF       		.byte	0xff
ARM GAS  C:\Users\alvin\AppData\Local\Temp\cc3v1X7c.s 			page 57


 2303 0120 1A       		.byte	0x1a
 2304 0121 21       		.byte	0x21
 2305 0122 9F       		.byte	0x9f
 2306 0123 00000000 		.4byte	0
 2307 0127 00000000 		.4byte	0
 2308              	.LLST2:
 2309 012b E0000000 		.4byte	.LVL16
 2310 012f 0E010000 		.4byte	.LVL17
 2311 0133 0100     		.2byte	0x1
 2312 0135 50       		.byte	0x50
 2313 0136 00000000 		.4byte	0
 2314 013a 00000000 		.4byte	0
 2315              	.LLST3:
 2316 013e 00000000 		.4byte	.LVL22
 2317 0142 06000000 		.4byte	.LVL24
 2318 0146 0100     		.2byte	0x1
 2319 0148 50       		.byte	0x50
 2320 0149 06000000 		.4byte	.LVL24
 2321 014d 1A000000 		.4byte	.LVL26
 2322 0151 0100     		.2byte	0x1
 2323 0153 52       		.byte	0x52
 2324 0154 1A000000 		.4byte	.LVL26
 2325 0158 20000000 		.4byte	.LVL27
 2326 015c 0400     		.2byte	0x4
 2327 015e F3       		.byte	0xf3
 2328 015f 01       		.uleb128 0x1
 2329 0160 50       		.byte	0x50
 2330 0161 9F       		.byte	0x9f
 2331 0162 20000000 		.4byte	.LVL27
 2332 0166 22000000 		.4byte	.LVL28
 2333 016a 0100     		.2byte	0x1
 2334 016c 50       		.byte	0x50
 2335 016d 22000000 		.4byte	.LVL28
 2336 0171 28000000 		.4byte	.LFE8
 2337 0175 0400     		.2byte	0x4
 2338 0177 F3       		.byte	0xf3
 2339 0178 01       		.uleb128 0x1
 2340 0179 50       		.byte	0x50
 2341 017a 9F       		.byte	0x9f
 2342 017b 00000000 		.4byte	0
 2343 017f 00000000 		.4byte	0
 2344              	.LLST4:
 2345 0183 02000000 		.4byte	.LVL23
 2346 0187 06000000 		.4byte	.LVL24
 2347 018b 0200     		.2byte	0x2
 2348 018d 30       		.byte	0x30
 2349 018e 9F       		.byte	0x9f
 2350 018f 0E000000 		.4byte	.LVL25
 2351 0193 20000000 		.4byte	.LVL27
 2352 0197 0100     		.2byte	0x1
 2353 0199 50       		.byte	0x50
 2354 019a 20000000 		.4byte	.LVL27
 2355 019e 22000000 		.4byte	.LVL28
 2356 01a2 0200     		.2byte	0x2
 2357 01a4 30       		.byte	0x30
 2358 01a5 9F       		.byte	0x9f
 2359 01a6 22000000 		.4byte	.LVL28
ARM GAS  C:\Users\alvin\AppData\Local\Temp\cc3v1X7c.s 			page 58


 2360 01aa 28000000 		.4byte	.LFE8
 2361 01ae 0100     		.2byte	0x1
 2362 01b0 50       		.byte	0x50
 2363 01b1 00000000 		.4byte	0
 2364 01b5 00000000 		.4byte	0
 2365              	.LLST5:
 2366 01b9 00000000 		.4byte	.LVL29
 2367 01bd 0A000000 		.4byte	.LVL30
 2368 01c1 0100     		.2byte	0x1
 2369 01c3 50       		.byte	0x50
 2370 01c4 0A000000 		.4byte	.LVL30
 2371 01c8 14000000 		.4byte	.LVL32
 2372 01cc 0100     		.2byte	0x1
 2373 01ce 54       		.byte	0x54
 2374 01cf 14000000 		.4byte	.LVL32
 2375 01d3 22000000 		.4byte	.LVL34
 2376 01d7 0400     		.2byte	0x4
 2377 01d9 F3       		.byte	0xf3
 2378 01da 01       		.uleb128 0x1
 2379 01db 50       		.byte	0x50
 2380 01dc 9F       		.byte	0x9f
 2381 01dd 22000000 		.4byte	.LVL34
 2382 01e1 24000000 		.4byte	.LVL35
 2383 01e5 0100     		.2byte	0x1
 2384 01e7 54       		.byte	0x54
 2385 01e8 24000000 		.4byte	.LVL35
 2386 01ec 2C000000 		.4byte	.LFE9
 2387 01f0 0400     		.2byte	0x4
 2388 01f2 F3       		.byte	0xf3
 2389 01f3 01       		.uleb128 0x1
 2390 01f4 50       		.byte	0x50
 2391 01f5 9F       		.byte	0x9f
 2392 01f6 00000000 		.4byte	0
 2393 01fa 00000000 		.4byte	0
 2394              	.LLST6:
 2395 01fe 20000000 		.4byte	.LVL33
 2396 0202 22000000 		.4byte	.LVL34
 2397 0206 0100     		.2byte	0x1
 2398 0208 50       		.byte	0x50
 2399 0209 24000000 		.4byte	.LVL35
 2400 020d 26000000 		.4byte	.LVL36
 2401 0211 0100     		.2byte	0x1
 2402 0213 50       		.byte	0x50
 2403 0214 00000000 		.4byte	0
 2404 0218 00000000 		.4byte	0
 2405              	.LLST7:
 2406 021c 00000000 		.4byte	.LVL37
 2407 0220 04000000 		.4byte	.LVL38
 2408 0224 0100     		.2byte	0x1
 2409 0226 50       		.byte	0x50
 2410 0227 04000000 		.4byte	.LVL38
 2411 022b 10000000 		.4byte	.LFE10
 2412 022f 0400     		.2byte	0x4
 2413 0231 F3       		.byte	0xf3
 2414 0232 01       		.uleb128 0x1
 2415 0233 50       		.byte	0x50
 2416 0234 9F       		.byte	0x9f
ARM GAS  C:\Users\alvin\AppData\Local\Temp\cc3v1X7c.s 			page 59


 2417 0235 00000000 		.4byte	0
 2418 0239 00000000 		.4byte	0
 2419              	.LLST8:
 2420 023d 00000000 		.4byte	.LVL39
 2421 0241 0E000000 		.4byte	.LVL40
 2422 0245 0100     		.2byte	0x1
 2423 0247 50       		.byte	0x50
 2424 0248 0E000000 		.4byte	.LVL40
 2425 024c 1C000000 		.4byte	.LFE11
 2426 0250 0400     		.2byte	0x4
 2427 0252 F3       		.byte	0xf3
 2428 0253 01       		.uleb128 0x1
 2429 0254 50       		.byte	0x50
 2430 0255 9F       		.byte	0x9f
 2431 0256 00000000 		.4byte	0
 2432 025a 00000000 		.4byte	0
 2433              	.LLST9:
 2434 025e 00000000 		.4byte	.LVL41
 2435 0262 0E000000 		.4byte	.LVL42
 2436 0266 0100     		.2byte	0x1
 2437 0268 50       		.byte	0x50
 2438 0269 0E000000 		.4byte	.LVL42
 2439 026d 18000000 		.4byte	.LFE12
 2440 0271 0400     		.2byte	0x4
 2441 0273 F3       		.byte	0xf3
 2442 0274 01       		.uleb128 0x1
 2443 0275 50       		.byte	0x50
 2444 0276 9F       		.byte	0x9f
 2445 0277 00000000 		.4byte	0
 2446 027b 00000000 		.4byte	0
 2447              	.LLST10:
 2448 027f 00000000 		.4byte	.LVL43
 2449 0283 04000000 		.4byte	.LVL44
 2450 0287 0100     		.2byte	0x1
 2451 0289 50       		.byte	0x50
 2452 028a 04000000 		.4byte	.LVL44
 2453 028e 10000000 		.4byte	.LFE13
 2454 0292 0400     		.2byte	0x4
 2455 0294 F3       		.byte	0xf3
 2456 0295 01       		.uleb128 0x1
 2457 0296 50       		.byte	0x50
 2458 0297 9F       		.byte	0x9f
 2459 0298 00000000 		.4byte	0
 2460 029c 00000000 		.4byte	0
 2461              	.LLST11:
 2462 02a0 00000000 		.4byte	.LVL45
 2463 02a4 04000000 		.4byte	.LVL46
 2464 02a8 0100     		.2byte	0x1
 2465 02aa 50       		.byte	0x50
 2466 02ab 04000000 		.4byte	.LVL46
 2467 02af 10000000 		.4byte	.LFE14
 2468 02b3 0400     		.2byte	0x4
 2469 02b5 F3       		.byte	0xf3
 2470 02b6 01       		.uleb128 0x1
 2471 02b7 50       		.byte	0x50
 2472 02b8 9F       		.byte	0x9f
 2473 02b9 00000000 		.4byte	0
ARM GAS  C:\Users\alvin\AppData\Local\Temp\cc3v1X7c.s 			page 60


 2474 02bd 00000000 		.4byte	0
 2475              	.LLST12:
 2476 02c1 00000000 		.4byte	.LVL47
 2477 02c5 0C000000 		.4byte	.LVL48
 2478 02c9 0100     		.2byte	0x1
 2479 02cb 50       		.byte	0x50
 2480 02cc 0C000000 		.4byte	.LVL48
 2481 02d0 12000000 		.4byte	.LVL50
 2482 02d4 0100     		.2byte	0x1
 2483 02d6 54       		.byte	0x54
 2484 02d7 12000000 		.4byte	.LVL50
 2485 02db 1C000000 		.4byte	.LFE15
 2486 02df 0400     		.2byte	0x4
 2487 02e1 F3       		.byte	0xf3
 2488 02e2 01       		.uleb128 0x1
 2489 02e3 50       		.byte	0x50
 2490 02e4 9F       		.byte	0x9f
 2491 02e5 00000000 		.4byte	0
 2492 02e9 00000000 		.4byte	0
 2493              	.LLST13:
 2494 02ed 00000000 		.4byte	.LVL47
 2495 02f1 0F000000 		.4byte	.LVL49-1
 2496 02f5 0100     		.2byte	0x1
 2497 02f7 51       		.byte	0x51
 2498 02f8 0F000000 		.4byte	.LVL49-1
 2499 02fc 1C000000 		.4byte	.LFE15
 2500 0300 0400     		.2byte	0x4
 2501 0302 F3       		.byte	0xf3
 2502 0303 01       		.uleb128 0x1
 2503 0304 51       		.byte	0x51
 2504 0305 9F       		.byte	0x9f
 2505 0306 00000000 		.4byte	0
 2506 030a 00000000 		.4byte	0
 2507              	.LLST14:
 2508 030e 00000000 		.4byte	.LVL51
 2509 0312 0C000000 		.4byte	.LVL52
 2510 0316 0100     		.2byte	0x1
 2511 0318 50       		.byte	0x50
 2512 0319 0C000000 		.4byte	.LVL52
 2513 031d 12000000 		.4byte	.LVL54
 2514 0321 0100     		.2byte	0x1
 2515 0323 54       		.byte	0x54
 2516 0324 12000000 		.4byte	.LVL54
 2517 0328 1C000000 		.4byte	.LFE16
 2518 032c 0400     		.2byte	0x4
 2519 032e F3       		.byte	0xf3
 2520 032f 01       		.uleb128 0x1
 2521 0330 50       		.byte	0x50
 2522 0331 9F       		.byte	0x9f
 2523 0332 00000000 		.4byte	0
 2524 0336 00000000 		.4byte	0
 2525              	.LLST15:
 2526 033a 00000000 		.4byte	.LVL51
 2527 033e 0F000000 		.4byte	.LVL53-1
 2528 0342 0100     		.2byte	0x1
 2529 0344 51       		.byte	0x51
 2530 0345 0F000000 		.4byte	.LVL53-1
ARM GAS  C:\Users\alvin\AppData\Local\Temp\cc3v1X7c.s 			page 61


 2531 0349 16000000 		.4byte	.LVL55
 2532 034d 0100     		.2byte	0x1
 2533 034f 55       		.byte	0x55
 2534 0350 16000000 		.4byte	.LVL55
 2535 0354 1C000000 		.4byte	.LFE16
 2536 0358 0800     		.2byte	0x8
 2537 035a F3       		.byte	0xf3
 2538 035b 01       		.uleb128 0x1
 2539 035c 50       		.byte	0x50
 2540 035d 32       		.byte	0x32
 2541 035e 24       		.byte	0x24
 2542 035f 73       		.byte	0x73
 2543 0360 00       		.sleb128 0
 2544 0361 22       		.byte	0x22
 2545 0362 00000000 		.4byte	0
 2546 0366 00000000 		.4byte	0
 2547              	.LLST16:
 2548 036a 00000000 		.4byte	.LVL56
 2549 036e 0C000000 		.4byte	.LVL57
 2550 0372 0100     		.2byte	0x1
 2551 0374 50       		.byte	0x50
 2552 0375 0C000000 		.4byte	.LVL57
 2553 0379 44000000 		.4byte	.LVL63
 2554 037d 0100     		.2byte	0x1
 2555 037f 54       		.byte	0x54
 2556 0380 44000000 		.4byte	.LVL63
 2557 0384 5C000000 		.4byte	.LFE17
 2558 0388 0400     		.2byte	0x4
 2559 038a F3       		.byte	0xf3
 2560 038b 01       		.uleb128 0x1
 2561 038c 50       		.byte	0x50
 2562 038d 9F       		.byte	0x9f
 2563 038e 00000000 		.4byte	0
 2564 0392 00000000 		.4byte	0
 2565              	.LLST17:
 2566 0396 00000000 		.4byte	.LVL56
 2567 039a 0F000000 		.4byte	.LVL58-1
 2568 039e 0100     		.2byte	0x1
 2569 03a0 51       		.byte	0x51
 2570 03a1 0F000000 		.4byte	.LVL58-1
 2571 03a5 1A000000 		.4byte	.LVL59
 2572 03a9 0400     		.2byte	0x4
 2573 03ab F3       		.byte	0xf3
 2574 03ac 01       		.uleb128 0x1
 2575 03ad 51       		.byte	0x51
 2576 03ae 9F       		.byte	0x9f
 2577 03af 1A000000 		.4byte	.LVL59
 2578 03b3 28000000 		.4byte	.LVL60
 2579 03b7 0100     		.2byte	0x1
 2580 03b9 51       		.byte	0x51
 2581 03ba 32000000 		.4byte	.LVL61
 2582 03be 36000000 		.4byte	.LVL62
 2583 03c2 0100     		.2byte	0x1
 2584 03c4 51       		.byte	0x51
 2585 03c5 00000000 		.4byte	0
 2586 03c9 00000000 		.4byte	0
 2587              	.LLST18:
ARM GAS  C:\Users\alvin\AppData\Local\Temp\cc3v1X7c.s 			page 62


 2588 03cd 00000000 		.4byte	.LVL65
 2589 03d1 0C000000 		.4byte	.LVL66
 2590 03d5 0100     		.2byte	0x1
 2591 03d7 50       		.byte	0x50
 2592 03d8 0C000000 		.4byte	.LVL66
 2593 03dc 26000000 		.4byte	.LVL70
 2594 03e0 0100     		.2byte	0x1
 2595 03e2 55       		.byte	0x55
 2596 03e3 26000000 		.4byte	.LVL70
 2597 03e7 40000000 		.4byte	.LFE18
 2598 03eb 0400     		.2byte	0x4
 2599 03ed F3       		.byte	0xf3
 2600 03ee 01       		.uleb128 0x1
 2601 03ef 50       		.byte	0x50
 2602 03f0 9F       		.byte	0x9f
 2603 03f1 00000000 		.4byte	0
 2604 03f5 00000000 		.4byte	0
 2605              	.LLST19:
 2606 03f9 00000000 		.4byte	.LVL65
 2607 03fd 0F000000 		.4byte	.LVL67-1
 2608 0401 0100     		.2byte	0x1
 2609 0403 51       		.byte	0x51
 2610 0404 0F000000 		.4byte	.LVL67-1
 2611 0408 1A000000 		.4byte	.LVL68
 2612 040c 0400     		.2byte	0x4
 2613 040e F3       		.byte	0xf3
 2614 040f 01       		.uleb128 0x1
 2615 0410 51       		.byte	0x51
 2616 0411 9F       		.byte	0x9f
 2617 0412 1A000000 		.4byte	.LVL68
 2618 0416 23000000 		.4byte	.LVL69-1
 2619 041a 0100     		.2byte	0x1
 2620 041c 50       		.byte	0x50
 2621 041d 00000000 		.4byte	0
 2622 0421 00000000 		.4byte	0
 2623              	.LLST20:
 2624 0425 00000000 		.4byte	.LVL72
 2625 0429 0C000000 		.4byte	.LVL73
 2626 042d 0100     		.2byte	0x1
 2627 042f 50       		.byte	0x50
 2628 0430 0C000000 		.4byte	.LVL73
 2629 0434 28000000 		.4byte	.LVL78
 2630 0438 0100     		.2byte	0x1
 2631 043a 54       		.byte	0x54
 2632 043b 28000000 		.4byte	.LVL78
 2633 043f 48000000 		.4byte	.LFE19
 2634 0443 0400     		.2byte	0x4
 2635 0445 F3       		.byte	0xf3
 2636 0446 01       		.uleb128 0x1
 2637 0447 50       		.byte	0x50
 2638 0448 9F       		.byte	0x9f
 2639 0449 00000000 		.4byte	0
 2640 044d 00000000 		.4byte	0
 2641              	.LLST21:
 2642 0451 00000000 		.4byte	.LVL72
 2643 0455 0F000000 		.4byte	.LVL74-1
 2644 0459 0100     		.2byte	0x1
ARM GAS  C:\Users\alvin\AppData\Local\Temp\cc3v1X7c.s 			page 63


 2645 045b 51       		.byte	0x51
 2646 045c 0F000000 		.4byte	.LVL74-1
 2647 0460 1A000000 		.4byte	.LVL75
 2648 0464 0400     		.2byte	0x4
 2649 0466 F3       		.byte	0xf3
 2650 0467 01       		.uleb128 0x1
 2651 0468 51       		.byte	0x51
 2652 0469 9F       		.byte	0x9f
 2653 046a 1A000000 		.4byte	.LVL75
 2654 046e 1D000000 		.4byte	.LVL76-1
 2655 0472 0100     		.2byte	0x1
 2656 0474 50       		.byte	0x50
 2657 0475 00000000 		.4byte	0
 2658 0479 00000000 		.4byte	0
 2659              		.section	.debug_aranges,"",%progbits
 2660 0000 A4000000 		.4byte	0xa4
 2661 0004 0200     		.2byte	0x2
 2662 0006 00000000 		.4byte	.Ldebug_info0
 2663 000a 04       		.byte	0x4
 2664 000b 00       		.byte	0
 2665 000c 0000     		.2byte	0
 2666 000e 0000     		.2byte	0
 2667 0010 00000000 		.4byte	.LFB3
 2668 0014 84010000 		.4byte	.LFE3-.LFB3
 2669 0018 00000000 		.4byte	.LFB4
 2670 001c 30000000 		.4byte	.LFE4-.LFB4
 2671 0020 00000000 		.4byte	.LFB2
 2672 0024 20000000 		.4byte	.LFE2-.LFB2
 2673 0028 00000000 		.4byte	.LFB5
 2674 002c 10000000 		.4byte	.LFE5-.LFB5
 2675 0030 00000000 		.4byte	.LFB6
 2676 0034 14000000 		.4byte	.LFE6-.LFB6
 2677 0038 00000000 		.4byte	.LFB7
 2678 003c 14000000 		.4byte	.LFE7-.LFB7
 2679 0040 00000000 		.4byte	.LFB8
 2680 0044 28000000 		.4byte	.LFE8-.LFB8
 2681 0048 00000000 		.4byte	.LFB9
 2682 004c 2C000000 		.4byte	.LFE9-.LFB9
 2683 0050 00000000 		.4byte	.LFB10
 2684 0054 10000000 		.4byte	.LFE10-.LFB10
 2685 0058 00000000 		.4byte	.LFB11
 2686 005c 1C000000 		.4byte	.LFE11-.LFB11
 2687 0060 00000000 		.4byte	.LFB12
 2688 0064 18000000 		.4byte	.LFE12-.LFB12
 2689 0068 00000000 		.4byte	.LFB13
 2690 006c 10000000 		.4byte	.LFE13-.LFB13
 2691 0070 00000000 		.4byte	.LFB14
 2692 0074 10000000 		.4byte	.LFE14-.LFB14
 2693 0078 00000000 		.4byte	.LFB15
 2694 007c 1C000000 		.4byte	.LFE15-.LFB15
 2695 0080 00000000 		.4byte	.LFB16
 2696 0084 1C000000 		.4byte	.LFE16-.LFB16
 2697 0088 00000000 		.4byte	.LFB17
 2698 008c 5C000000 		.4byte	.LFE17-.LFB17
 2699 0090 00000000 		.4byte	.LFB18
 2700 0094 40000000 		.4byte	.LFE18-.LFB18
 2701 0098 00000000 		.4byte	.LFB19
ARM GAS  C:\Users\alvin\AppData\Local\Temp\cc3v1X7c.s 			page 64


 2702 009c 48000000 		.4byte	.LFE19-.LFB19
 2703 00a0 00000000 		.4byte	0
 2704 00a4 00000000 		.4byte	0
 2705              		.section	.debug_ranges,"",%progbits
 2706              	.Ldebug_ranges0:
 2707 0000 00000000 		.4byte	.LFB3
 2708 0004 84010000 		.4byte	.LFE3
 2709 0008 00000000 		.4byte	.LFB4
 2710 000c 30000000 		.4byte	.LFE4
 2711 0010 00000000 		.4byte	.LFB2
 2712 0014 20000000 		.4byte	.LFE2
 2713 0018 00000000 		.4byte	.LFB5
 2714 001c 10000000 		.4byte	.LFE5
 2715 0020 00000000 		.4byte	.LFB6
 2716 0024 14000000 		.4byte	.LFE6
 2717 0028 00000000 		.4byte	.LFB7
 2718 002c 14000000 		.4byte	.LFE7
 2719 0030 00000000 		.4byte	.LFB8
 2720 0034 28000000 		.4byte	.LFE8
 2721 0038 00000000 		.4byte	.LFB9
 2722 003c 2C000000 		.4byte	.LFE9
 2723 0040 00000000 		.4byte	.LFB10
 2724 0044 10000000 		.4byte	.LFE10
 2725 0048 00000000 		.4byte	.LFB11
 2726 004c 1C000000 		.4byte	.LFE11
 2727 0050 00000000 		.4byte	.LFB12
 2728 0054 18000000 		.4byte	.LFE12
 2729 0058 00000000 		.4byte	.LFB13
 2730 005c 10000000 		.4byte	.LFE13
 2731 0060 00000000 		.4byte	.LFB14
 2732 0064 10000000 		.4byte	.LFE14
 2733 0068 00000000 		.4byte	.LFB15
 2734 006c 1C000000 		.4byte	.LFE15
 2735 0070 00000000 		.4byte	.LFB16
 2736 0074 1C000000 		.4byte	.LFE16
 2737 0078 00000000 		.4byte	.LFB17
 2738 007c 5C000000 		.4byte	.LFE17
 2739 0080 00000000 		.4byte	.LFB18
 2740 0084 40000000 		.4byte	.LFE18
 2741 0088 00000000 		.4byte	.LFB19
 2742 008c 48000000 		.4byte	.LFE19
 2743 0090 00000000 		.4byte	0
 2744 0094 00000000 		.4byte	0
 2745              		.section	.debug_line,"",%progbits
 2746              	.Ldebug_line0:
 2747 0000 93020000 		.section	.debug_str,"MS",%progbits,1
 2747      02005000 
 2747      00000201 
 2747      FB0E0D00 
 2747      01010101 
 2748              	.LASF10:
 2749 0000 75696E74 		.ascii	"uint16\000"
 2749      313600
 2750              	.LASF49:
 2751 0007 61646347 		.ascii	"adcGain\000"
 2751      61696E00 
 2752              	.LASF24:
ARM GAS  C:\Users\alvin\AppData\Local\Temp\cc3v1X7c.s 			page 65


 2753 000f 636F756E 		.ascii	"counts\000"
 2753      747300
 2754              	.LASF50:
 2755 0016 49525F41 		.ascii	"IR_ADC_CountsTo_mVolts\000"
 2755      44435F43 
 2755      6F756E74 
 2755      73546F5F 
 2755      6D566F6C 
 2756              	.LASF7:
 2757 002d 6C6F6E67 		.ascii	"long long unsigned int\000"
 2757      206C6F6E 
 2757      6720756E 
 2757      7369676E 
 2757      65642069 
 2758              	.LASF6:
 2759 0044 6C6F6E67 		.ascii	"long long int\000"
 2759      206C6F6E 
 2759      6720696E 
 2759      7400
 2760              	.LASF0:
 2761 0052 7369676E 		.ascii	"signed char\000"
 2761      65642063 
 2761      68617200 
 2762              	.LASF13:
 2763 005e 696E7433 		.ascii	"int32\000"
 2763      3200
 2764              	.LASF63:
 2765 0064 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\IR_ADC.c\000"
 2765      6E657261 
 2765      7465645F 
 2765      536F7572 
 2765      63655C50 
 2766              	.LASF4:
 2767 0086 6C6F6E67 		.ascii	"long int\000"
 2767      20696E74 
 2767      00
 2768              	.LASF9:
 2769 008f 75696E74 		.ascii	"uint8\000"
 2769      3800
 2770              	.LASF29:
 2771 0095 49525F41 		.ascii	"IR_ADC_Stop\000"
 2771      44435F53 
 2771      746F7000 
 2772              	.LASF61:
 2773 00a1 43794465 		.ascii	"CyDelayUs\000"
 2773      6C617955 
 2773      7300
 2774              	.LASF16:
 2775 00ab 646F7562 		.ascii	"double\000"
 2775      6C6500
 2776              	.LASF54:
 2777 00b2 49525F41 		.ascii	"IR_ADC_CountsTo_Volts\000"
 2777      44435F43 
 2777      6F756E74 
 2777      73546F5F 
 2777      566F6C74 
 2778              	.LASF46:
ARM GAS  C:\Users\alvin\AppData\Local\Temp\cc3v1X7c.s 			page 66


 2779 00c8 49525F41 		.ascii	"IR_ADC_SetOffset\000"
 2779      44435F53 
 2779      65744F66 
 2779      66736574 
 2779      00
 2780              	.LASF11:
 2781 00d9 75696E74 		.ascii	"uint32\000"
 2781      333200
 2782              	.LASF39:
 2783 00e0 6D61736B 		.ascii	"mask\000"
 2783      00
 2784              	.LASF64:
 2785 00e5 433A5C55 		.ascii	"C:\\Users\\alvin\\Desktop\\ece445\\deliverable\\rob"
 2785      73657273 
 2785      5C616C76 
 2785      696E5C44 
 2785      65736B74 
 2786 0112 6F745F6B 		.ascii	"ot_kit_firmware.cydsn\000"
 2786      69745F66 
 2786      69726D77 
 2786      6172652E 
 2786      63796473 
 2787              	.LASF33:
 2788 0128 49525F41 		.ascii	"IR_ADC_IsEndConversion\000"
 2788      44435F49 
 2788      73456E64 
 2788      436F6E76 
 2788      65727369 
 2789              	.LASF35:
 2790 013f 7265744D 		.ascii	"retMode\000"
 2790      6F646500 
 2791              	.LASF31:
 2792 0147 49525F41 		.ascii	"IR_ADC_StopConvert\000"
 2792      44435F53 
 2792      746F7043 
 2792      6F6E7665 
 2792      727400
 2793              	.LASF8:
 2794 015a 756E7369 		.ascii	"unsigned int\000"
 2794      676E6564 
 2794      20696E74 
 2794      00
 2795              	.LASF59:
 2796 0167 49525F41 		.ascii	"IR_ADC_countsPer10Volt\000"
 2796      44435F63 
 2796      6F756E74 
 2796      73506572 
 2796      3130566F 
 2797              	.LASF65:
 2798 017e 75566F6C 		.ascii	"uVolts\000"
 2798      747300
 2799              	.LASF5:
 2800 0185 6C6F6E67 		.ascii	"long unsigned int\000"
 2800      20756E73 
 2800      69676E65 
 2800      6420696E 
 2800      7400
ARM GAS  C:\Users\alvin\AppData\Local\Temp\cc3v1X7c.s 			page 67


 2801              	.LASF55:
 2802 0197 766F6C74 		.ascii	"volts\000"
 2802      7300
 2803              	.LASF23:
 2804 019d 746D7052 		.ascii	"tmpRegVal\000"
 2804      65675661 
 2804      6C00
 2805              	.LASF3:
 2806 01a7 73686F72 		.ascii	"short unsigned int\000"
 2806      7420756E 
 2806      7369676E 
 2806      65642069 
 2806      6E7400
 2807              	.LASF66:
 2808 01ba 4379496E 		.ascii	"CyIntSetVector\000"
 2808      74536574 
 2808      56656374 
 2808      6F7200
 2809              	.LASF58:
 2810 01c9 49525F41 		.ascii	"IR_ADC_offset\000"
 2810      44435F6F 
 2810      66667365 
 2810      7400
 2811              	.LASF52:
 2812 01d7 6D566F6C 		.ascii	"mVolts\000"
 2812      747300
 2813              	.LASF48:
 2814 01de 49525F41 		.ascii	"IR_ADC_SetGain\000"
 2814      44435F53 
 2814      65744761 
 2814      696E00
 2815              	.LASF19:
 2816 01ed 72656733 		.ascii	"reg32\000"
 2816      3200
 2817              	.LASF57:
 2818 01f3 49525F41 		.ascii	"IR_ADC_initVar\000"
 2818      44435F69 
 2818      6E697456 
 2818      617200
 2819              	.LASF14:
 2820 0202 666C6F61 		.ascii	"float32\000"
 2820      74333200 
 2821              	.LASF21:
 2822 020a 73697A65 		.ascii	"sizetype\000"
 2822      74797065 
 2822      00
 2823              	.LASF41:
 2824 0213 6C6F774C 		.ascii	"lowLimit\000"
 2824      696D6974 
 2824      00
 2825              	.LASF40:
 2826 021c 49525F41 		.ascii	"IR_ADC_SetLowLimit\000"
 2826      44435F53 
 2826      65744C6F 
 2826      774C696D 
 2826      697400
 2827              	.LASF62:
ARM GAS  C:\Users\alvin\AppData\Local\Temp\cc3v1X7c.s 			page 68


 2828 022f 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 2828      4320342E 
 2828      392E3320 
 2828      32303135 
 2828      30333033 
 2829 0262 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0 -mthumb -g -O"
 2829      20726576 
 2829      6973696F 
 2829      6E203232 
 2829      31323230 
 2830 0295 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 2830      66756E63 
 2830      74696F6E 
 2830      2D736563 
 2830      74696F6E 
 2831              	.LASF17:
 2832 02bd 696E7436 		.ascii	"int64\000"
 2832      3400
 2833              	.LASF25:
 2834 02c3 49525F41 		.ascii	"IR_ADC_InputsPlacement\000"
 2834      44435F49 
 2834      6E707574 
 2834      73506C61 
 2834      63656D65 
 2835              	.LASF60:
 2836 02da 4379496E 		.ascii	"CyIntSetPriority\000"
 2836      74536574 
 2836      5072696F 
 2836      72697479 
 2836      00
 2837              	.LASF15:
 2838 02eb 666C6F61 		.ascii	"float\000"
 2838      7400
 2839              	.LASF28:
 2840 02f1 49525F41 		.ascii	"IR_ADC_Start\000"
 2840      44435F53 
 2840      74617274 
 2840      00
 2841              	.LASF43:
 2842 02fe 68696768 		.ascii	"highLimit\000"
 2842      4C696D69 
 2842      7400
 2843              	.LASF26:
 2844 0308 49525F41 		.ascii	"IR_ADC_Init\000"
 2844      44435F49 
 2844      6E697400 
 2845              	.LASF67:
 2846 0314 43794861 		.ascii	"CyHalt\000"
 2846      6C7400
 2847              	.LASF1:
 2848 031b 756E7369 		.ascii	"unsigned char\000"
 2848      676E6564 
 2848      20636861 
 2848      7200
 2849              	.LASF53:
 2850 0329 49525F41 		.ascii	"IR_ADC_CountsTo_uVolts\000"
 2850      44435F43 
ARM GAS  C:\Users\alvin\AppData\Local\Temp\cc3v1X7c.s 			page 69


 2850      6F756E74 
 2850      73546F5F 
 2850      75566F6C 
 2851              	.LASF2:
 2852 0340 73686F72 		.ascii	"short int\000"
 2852      7420696E 
 2852      7400
 2853              	.LASF38:
 2854 034a 49525F41 		.ascii	"IR_ADC_SetChanMask\000"
 2854      44435F53 
 2854      65744368 
 2854      616E4D61 
 2854      736B00
 2855              	.LASF22:
 2856 035d 63684E75 		.ascii	"chNum\000"
 2856      6D00
 2857              	.LASF44:
 2858 0363 49525F41 		.ascii	"IR_ADC_SetLimitMask\000"
 2858      44435F53 
 2858      65744C69 
 2858      6D69744D 
 2858      61736B00 
 2859              	.LASF36:
 2860 0377 6368616E 		.ascii	"chan\000"
 2860      00
 2861              	.LASF18:
 2862 037c 63686172 		.ascii	"char\000"
 2862      00
 2863              	.LASF20:
 2864 0381 63796973 		.ascii	"cyisraddress\000"
 2864      72616464 
 2864      72657373 
 2864      00
 2865              	.LASF45:
 2866 038e 49525F41 		.ascii	"IR_ADC_SetSatMask\000"
 2866      44435F53 
 2866      65745361 
 2866      744D6173 
 2866      6B00
 2867              	.LASF47:
 2868 03a0 6F666673 		.ascii	"offset\000"
 2868      657400
 2869              	.LASF51:
 2870 03a7 61646343 		.ascii	"adcCounts\000"
 2870      6F756E74 
 2870      7300
 2871              	.LASF30:
 2872 03b1 49525F41 		.ascii	"IR_ADC_StartConvert\000"
 2872      44435F53 
 2872      74617274 
 2872      436F6E76 
 2872      65727400 
 2873              	.LASF32:
 2874 03c5 73746174 		.ascii	"status\000"
 2874      757300
 2875              	.LASF34:
 2876 03cc 49525F41 		.ascii	"IR_ADC_GetResult16\000"
ARM GAS  C:\Users\alvin\AppData\Local\Temp\cc3v1X7c.s 			page 70


 2876      44435F47 
 2876      65745265 
 2876      73756C74 
 2876      313600
 2877              	.LASF12:
 2878 03df 696E7431 		.ascii	"int16\000"
 2878      3600
 2879              	.LASF27:
 2880 03e5 49525F41 		.ascii	"IR_ADC_Enable\000"
 2880      44435F45 
 2880      6E61626C 
 2880      6500
 2881              	.LASF42:
 2882 03f3 49525F41 		.ascii	"IR_ADC_SetHighLimit\000"
 2882      44435F53 
 2882      65744869 
 2882      67684C69 
 2882      6D697400 
 2883              	.LASF37:
 2884 0407 72657375 		.ascii	"result\000"
 2884      6C7400
 2885              	.LASF56:
 2886 040e 49525F41 		.ascii	"IR_ADC_channelsConfig\000"
 2886      44435F63 
 2886      68616E6E 
 2886      656C7343 
 2886      6F6E6669 
 2887              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
